<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Agam's Mashed-Up Pome]]></title>
  <link href="http://agam.github.io/atom.xml" rel="self"/>
  <link href="http://agam.github.io/"/>
  <updated>2015-01-12T00:05:58+00:00</updated>
  <id>http://agam.github.io/</id>
  <author>
    <name><![CDATA[Agam]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Simple subtraction ... and gambling]]></title>
    <link href="http://agam.github.io/blog/2015/01/11/simple-subtraction-dot-dot-dot-and-gambling/"/>
    <updated>2015-01-11T23:01:57+00:00</updated>
    <id>http://agam.github.io/blog/2015/01/11/simple-subtraction-dot-dot-dot-and-gambling</id>
    <content type="html"><![CDATA[<p>Continuing on the theme of the last two posts, here are two more examples, here are <em>two more</em>. The first is a simple change-counting program, which might fit the bill for a &ldquo;first program&rdquo;, and the second is a game of craps (not too interactive, unfortunately; all you do is place a bet &mdash; I did at least add a delay for the dice throw to make it seem less &hellip; er &hellip; automated).</p>

<h3>Change: Go Source</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>  <span class="s">&quot;math&quot;</span>
</span><span class='line'>  <span class="s">&quot;strings&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">moneyUnit</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">name</span>  <span class="kt">string</span>
</span><span class='line'>  <span class="nx">value</span> <span class="kt">int</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">moneyUnits</span> <span class="p">=</span> <span class="p">[]</span><span class="nx">moneyUnit</span><span class="p">{</span>
</span><span class='line'>  <span class="p">{</span><span class="s">&quot;Hundred Dollar Bill&quot;</span><span class="p">,</span> <span class="mi">100</span> <span class="o">*</span> <span class="mi">100</span><span class="p">},</span>
</span><span class='line'>  <span class="p">{</span><span class="s">&quot;Fifty Dollar Bill&quot;</span><span class="p">,</span> <span class="mi">50</span> <span class="o">*</span> <span class="mi">100</span><span class="p">},</span>
</span><span class='line'>  <span class="p">{</span><span class="s">&quot;Twenty Dollar Bill&quot;</span><span class="p">,</span> <span class="mi">20</span> <span class="o">*</span> <span class="mi">100</span><span class="p">},</span>
</span><span class='line'>  <span class="p">{</span><span class="s">&quot;Ten Dollar Bill&quot;</span><span class="p">,</span> <span class="mi">10</span> <span class="o">*</span> <span class="mi">100</span><span class="p">},</span>
</span><span class='line'>  <span class="p">{</span><span class="s">&quot;Five Dollar Bill&quot;</span><span class="p">,</span> <span class="mi">5</span> <span class="o">*</span> <span class="mi">100</span><span class="p">},</span>
</span><span class='line'>  <span class="p">{</span><span class="s">&quot;One Dollar Bill&quot;</span><span class="p">,</span> <span class="mi">100</span><span class="p">},</span>
</span><span class='line'>  <span class="p">{</span><span class="s">&quot;One-Half Dollar&quot;</span><span class="p">,</span> <span class="mi">50</span><span class="p">},</span>
</span><span class='line'>  <span class="p">{</span><span class="s">&quot;Quarter&quot;</span><span class="p">,</span> <span class="mi">25</span><span class="p">},</span>
</span><span class='line'>  <span class="p">{</span><span class="s">&quot;Dime&quot;</span><span class="p">,</span> <span class="mi">10</span><span class="p">},</span>
</span><span class='line'>  <span class="p">{</span><span class="s">&quot;Nickel&quot;</span><span class="p">,</span> <span class="mi">5</span><span class="p">},</span>
</span><span class='line'>  <span class="p">{</span><span class="s">&quot;Penny&quot;</span><span class="p">,</span> <span class="mi">1</span><span class="p">},</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">showUsage</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;\n         The Change-Maker   &quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;----------------------------------\n&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;I&#39;ll help you calculate the change for any item purchased.\n&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">getMoney</span><span class="p">(</span><span class="nx">prompt</span> <span class="kt">string</span><span class="p">)</span> <span class="kt">float64</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">for</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;%s : $&quot;</span><span class="p">,</span> <span class="nx">prompt</span><span class="p">)</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">answer</span> <span class="kt">float64</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Scan</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">answer</span><span class="p">)</span>
</span><span class='line'>      <span class="nx">pennies</span> <span class="o">:=</span> <span class="nx">answer</span> <span class="o">*</span> <span class="mi">100</span>
</span><span class='line'>      <span class="nx">roundPennies</span> <span class="o">:=</span> <span class="nx">math</span><span class="p">.</span><span class="nx">Ceil</span><span class="p">(</span><span class="nx">pennies</span><span class="p">)</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">roundPennies</span><span class="o">-</span><span class="nx">pennies</span> <span class="p">&gt;</span> <span class="mf">1e-4</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Error: please enter $XXXX.XX (i.e. up to two decimal places!)&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="nx">answer</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">deductChange</span><span class="p">(</span><span class="nx">pennies</span><span class="p">,</span> <span class="nx">unit</span> <span class="kt">int</span><span class="p">)</span> <span class="p">(</span><span class="nx">numUnits</span> <span class="kt">int</span><span class="p">,</span> <span class="nx">remaining</span> <span class="kt">int</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">pennies</span><span class="o">%</span><span class="nx">unit</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="nx">pennies</span> <span class="o">/</span> <span class="nx">unit</span><span class="p">,</span> <span class="mi">0</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">numUnits</span> <span class="p">=</span> <span class="nx">pennies</span> <span class="o">/</span> <span class="nx">unit</span>
</span><span class='line'>      <span class="nx">remaining</span> <span class="p">=</span> <span class="nx">pennies</span> <span class="o">-</span> <span class="nx">numUnits</span><span class="o">*</span><span class="nx">unit</span>
</span><span class='line'>      <span class="k">return</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">showChange</span><span class="p">(</span><span class="nx">pennies</span> <span class="kt">int</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">u</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">moneyUnits</span> <span class="p">{</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">numUnits</span> <span class="kt">int</span>
</span><span class='line'>      <span class="nx">numUnits</span><span class="p">,</span> <span class="nx">pennies</span> <span class="p">=</span> <span class="nx">deductChange</span><span class="p">(</span><span class="nx">pennies</span><span class="p">,</span> <span class="nx">u</span><span class="p">.</span><span class="nx">value</span><span class="p">)</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">numUnits</span> <span class="p">&gt;</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;%5d  %s(s)\n&quot;</span><span class="p">,</span> <span class="nx">numUnits</span><span class="p">,</span> <span class="nx">u</span><span class="p">.</span><span class="nx">name</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">pennies</span> <span class="o">!=</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>      <span class="nb">panic</span><span class="p">(</span><span class="s">&quot;wtf&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">showUsage</span><span class="p">()</span>
</span><span class='line'>  <span class="k">for</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">cost</span> <span class="o">:=</span> <span class="nx">getMoney</span><span class="p">(</span><span class="s">&quot;Cost of item?&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="nx">payment</span> <span class="o">:=</span> <span class="nx">getMoney</span><span class="p">(</span><span class="s">&quot;Amount of payment?&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">payment</span> <span class="o">==</span> <span class="nx">cost</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Aha! you don&#39;t need any change!\n&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="nx">payment</span><span class="o">-</span><span class="nx">cost</span> <span class="p">&gt;</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">showChange</span><span class="p">(</span><span class="nb">int</span><span class="p">((</span><span class="nx">payment</span> <span class="o">-</span> <span class="nx">cost</span><span class="p">)</span> <span class="o">*</span> <span class="mi">100</span><span class="p">))</span>
</span><span class='line'>      <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;\nHey! you need to pay me some more for that!&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;\nAnother item? (enter &#39;y&#39; or &#39;n&#39;): &quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">another</span> <span class="kt">string</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Scan</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">another</span><span class="p">)</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">strings</span><span class="p">.</span><span class="nx">ToLower</span><span class="p">(</span><span class="nx">another</span><span class="p">)</span> <span class="o">==</span> <span class="s">&quot;n&quot;</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">break</span>
</span><span class='line'>      <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">()</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;\n\nThank you, come again!\n\n&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Change: Basic Source</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class='basic'><span class='line'><span class="nl">2</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="kr">TAB</span><span class="p">(</span><span class="il">33</span><span class="p">);</span><span class="s2">&quot;CHANGE&quot;</span>
</span><span class='line'><span class="nl">4</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="kr">TAB</span><span class="p">(</span><span class="il">15</span><span class="p">);</span><span class="s2">&quot;CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY&quot;</span>
</span><span class='line'><span class="nl">5</span><span class="w"> </span><span class="kr">PRINT</span><span class="o">:</span><span class="kr">PRINT</span><span class="o">:</span><span class="kr">PRINT</span>
</span><span class='line'><span class="nl">6</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;I, YOUR FRIENDLY MICROCOMPUTER, WILL DETERMINE&quot;</span>
</span><span class='line'><span class="nl">8</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;THE CORRECT CHANGE FOR ITEMS COSTING UP TO $100.&quot;</span>
</span><span class='line'><span class="nl">9</span><span class="w"> </span><span class="kr">PRINT</span><span class="o">:</span><span class="kr">PRINT</span>
</span><span class='line'><span class="nl">10</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;COST OF ITEM&quot;</span><span class="p">;</span><span class="o">:</span><span class="kr">INPUT</span><span class="w"> </span><span class="nl">A:</span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;AMOUNT OF PAYMENT&quot;</span><span class="p">;</span><span class="o">:</span><span class="kr">INPUT</span><span class="w"> </span><span class="vg">P</span>
</span><span class='line'><span class="nl">20</span><span class="w"> </span><span class="vg">C</span><span class="o">=</span><span class="vg">P</span><span class="o">-</span><span class="nl">A:</span><span class="vg">M</span><span class="o">=</span><span class="nl">C:</span><span class="kr">IF</span><span class="w"> </span><span class="vg">C</span><span class="o">&lt;&gt;</span><span class="il">0</span><span class="w"> </span><span class="kr">THEN</span><span class="w"> </span><span class="il">90</span>
</span><span class='line'><span class="nl">25</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;CORRECT AMOUNT, THANK YOU.&quot;</span>
</span><span class='line'><span class="nl">30</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">400</span>
</span><span class='line'><span class="nl">90</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">C</span><span class="o">&gt;</span><span class="il">0</span><span class="w"> </span><span class="kr">THEN</span><span class="w"> </span><span class="il">120</span>
</span><span class='line'><span class="nl">95</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;SORRY, YOU HAVE SHORT-CHANGED ME $&quot;</span><span class="p">;</span><span class="vg">A</span><span class="o">-</span><span class="vg">P</span>
</span><span class='line'><span class="nl">100</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">10</span>
</span><span class='line'><span class="nl">120</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;YOUR CHANGE, $&quot;</span><span class="p">;</span><span class="vg">C</span>
</span><span class='line'><span class="nl">130</span><span class="w"> </span><span class="vg">D</span><span class="o">=</span><span class="kr">INT</span><span class="p">(</span><span class="vg">C</span><span class="o">/</span><span class="il">10</span><span class="p">)</span>
</span><span class='line'><span class="nl">140</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">D</span><span class="o">=</span><span class="il">0</span><span class="w"> </span><span class="kr">THEN</span><span class="w"> </span><span class="il">155</span>
</span><span class='line'><span class="nl">150</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="vg">D</span><span class="p">;</span><span class="s2">&quot;TEN DOLLAR BILL(S)&quot;</span>
</span><span class='line'><span class="nl">155</span><span class="w"> </span><span class="vg">C</span><span class="o">=</span><span class="vg">M</span><span class="o">-</span><span class="p">(</span><span class="vg">D</span><span class="o">*</span><span class="il">10</span><span class="p">)</span>
</span><span class='line'><span class="nl">160</span><span class="w"> </span><span class="vg">E</span><span class="o">=</span><span class="kr">INT</span><span class="p">(</span><span class="vg">C</span><span class="o">/</span><span class="il">5</span><span class="p">)</span>
</span><span class='line'><span class="nl">170</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">E</span><span class="o">=</span><span class="il">0</span><span class="w"> </span><span class="kr">THEN</span><span class="w"> </span><span class="il">185</span>
</span><span class='line'><span class="nl">180</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="vg">E</span><span class="p">;</span><span class="s2">&quot;FIVE DOLLARS BILL(S)&quot;</span>
</span><span class='line'><span class="nl">185</span><span class="w"> </span><span class="vg">C</span><span class="o">=</span><span class="vg">M</span><span class="o">-</span><span class="p">(</span><span class="vg">D</span><span class="o">*</span><span class="il">10</span><span class="o">+</span><span class="vg">E</span><span class="o">*</span><span class="il">5</span><span class="p">)</span>
</span><span class='line'><span class="nl">190</span><span class="w"> </span><span class="vg">F</span><span class="o">=</span><span class="kr">INT</span><span class="p">(</span><span class="vg">C</span><span class="p">)</span>
</span><span class='line'><span class="nl">200</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">F</span><span class="o">=</span><span class="il">0</span><span class="w"> </span><span class="kr">THEN</span><span class="w"> </span><span class="il">215</span>
</span><span class='line'><span class="nl">210</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="vg">F</span><span class="p">;</span><span class="s2">&quot;ONE DOLLAR BILL(S)&quot;</span>
</span><span class='line'><span class="nl">215</span><span class="w"> </span><span class="vg">C</span><span class="o">=</span><span class="vg">M</span><span class="o">-</span><span class="p">(</span><span class="vg">D</span><span class="o">*</span><span class="il">10</span><span class="o">+</span><span class="vg">E</span><span class="o">*</span><span class="il">5</span><span class="o">+</span><span class="vg">F</span><span class="p">)</span>
</span><span class='line'><span class="nl">220</span><span class="w"> </span><span class="vg">C</span><span class="o">=</span><span class="vg">C</span><span class="o">*</span><span class="il">100</span>
</span><span class='line'><span class="nl">225</span><span class="w"> </span><span class="vg">N</span><span class="o">=</span><span class="vg">C</span>
</span><span class='line'><span class="nl">230</span><span class="w"> </span><span class="vg">G</span><span class="o">=</span><span class="kr">INT</span><span class="p">(</span><span class="vg">C</span><span class="o">/</span><span class="il">50</span><span class="p">)</span>
</span><span class='line'><span class="nl">240</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">G</span><span class="o">=</span><span class="il">0</span><span class="w"> </span><span class="kr">THEN</span><span class="w"> </span><span class="il">255</span>
</span><span class='line'><span class="nl">250</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="vg">G</span><span class="p">;</span><span class="s2">&quot;ONE HALF DOLLAR(S)&quot;</span>
</span><span class='line'><span class="nl">255</span><span class="w"> </span><span class="vg">C</span><span class="o">=</span><span class="vg">N</span><span class="o">-</span><span class="p">(</span><span class="vg">G</span><span class="o">*</span><span class="il">50</span><span class="p">)</span>
</span><span class='line'><span class="nl">260</span><span class="w"> </span><span class="vg">H</span><span class="o">=</span><span class="kr">INT</span><span class="p">(</span><span class="vg">C</span><span class="o">/</span><span class="il">25</span><span class="p">)</span>
</span><span class='line'><span class="nl">270</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">H</span><span class="o">=</span><span class="il">0</span><span class="w"> </span><span class="kr">THEN</span><span class="w"> </span><span class="il">285</span>
</span><span class='line'><span class="nl">280</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="vg">H</span><span class="p">;</span><span class="s2">&quot;QUARTER(S)&quot;</span>
</span><span class='line'><span class="nl">285</span><span class="w"> </span><span class="vg">C</span><span class="o">=</span><span class="vg">N</span><span class="o">-</span><span class="p">(</span><span class="vg">G</span><span class="o">*</span><span class="il">50</span><span class="o">+</span><span class="vg">H</span><span class="o">*</span><span class="il">25</span><span class="p">)</span>
</span><span class='line'><span class="nl">290</span><span class="w"> </span><span class="vg">I</span><span class="o">=</span><span class="kr">INT</span><span class="p">(</span><span class="vg">C</span><span class="o">/</span><span class="il">10</span><span class="p">)</span>
</span><span class='line'><span class="nl">300</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">I</span><span class="o">=</span><span class="il">0</span><span class="w"> </span><span class="kr">THEN</span><span class="w"> </span><span class="il">315</span>
</span><span class='line'><span class="nl">310</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="vg">I</span><span class="p">;</span><span class="s2">&quot;DIME(S)&quot;</span>
</span><span class='line'><span class="nl">315</span><span class="w"> </span><span class="vg">C</span><span class="o">=</span><span class="vg">N</span><span class="o">-</span><span class="p">(</span><span class="vg">G</span><span class="o">*</span><span class="il">50</span><span class="o">+</span><span class="vg">H</span><span class="o">*</span><span class="il">25</span><span class="o">+</span><span class="vg">I</span><span class="o">*</span><span class="il">10</span><span class="p">)</span>
</span><span class='line'><span class="nl">320</span><span class="w"> </span><span class="vg">J</span><span class="o">=</span><span class="kr">INT</span><span class="p">(</span><span class="vg">C</span><span class="o">/</span><span class="il">5</span><span class="p">)</span>
</span><span class='line'><span class="nl">330</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">J</span><span class="o">=</span><span class="il">0</span><span class="w"> </span><span class="kr">THEN</span><span class="w"> </span><span class="il">345</span>
</span><span class='line'><span class="nl">340</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="vg">J</span><span class="p">;</span><span class="s2">&quot;NICKEL(S)&quot;</span>
</span><span class='line'><span class="nl">345</span><span class="w"> </span><span class="vg">C</span><span class="o">=</span><span class="vg">N</span><span class="o">-</span><span class="p">(</span><span class="vg">G</span><span class="o">*</span><span class="il">50</span><span class="o">+</span><span class="vg">H</span><span class="o">*</span><span class="il">25</span><span class="o">+</span><span class="vg">I</span><span class="o">*</span><span class="il">10</span><span class="o">+</span><span class="vg">J</span><span class="o">*</span><span class="il">5</span><span class="p">)</span>
</span><span class='line'><span class="nl">350</span><span class="w"> </span><span class="vg">K</span><span class="o">=</span><span class="kr">INT</span><span class="p">(</span><span class="vg">C</span><span class="o">+</span><span class="mf">.5</span><span class="p">)</span>
</span><span class='line'><span class="nl">360</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">K</span><span class="o">=</span><span class="il">0</span><span class="w"> </span><span class="kr">THEN</span><span class="w"> </span><span class="il">380</span>
</span><span class='line'><span class="nl">370</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="vg">K</span><span class="p">;</span><span class="s2">&quot;PENNY(S)&quot;</span>
</span><span class='line'><span class="nl">380</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;THANK YOU, COME AGAIN.&quot;</span>
</span><span class='line'><span class="nl">390</span><span class="w"> </span><span class="kr">PRINT</span><span class="o">:</span><span class="kr">PRINT</span>
</span><span class='line'><span class="nl">400</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">10</span>
</span><span class='line'><span class="nl">410</span><span class="w"> </span><span class="kr">END</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Change: Gameplay</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>go run change.go
</span><span class='line'>
</span><span class='line'>         The Change-Maker
</span><span class='line'>       ----------------------------------
</span><span class='line'>
</span><span class='line'>I<span class="s1">&#39;ll help you calculate the change for any item purchased.</span>
</span><span class='line'>
</span><span class='line'><span class="s1">Cost of item? : $4.56</span>
</span><span class='line'><span class="s1">Amount of payment? : $20</span>
</span><span class='line'><span class="s1">1  Ten Dollar Bill(s)</span>
</span><span class='line'><span class="s1">1  Five Dollar Bill(s)</span>
</span><span class='line'><span class="s1">1  Quarter(s)</span>
</span><span class='line'><span class="s1">1  Dime(s)</span>
</span><span class='line'><span class="s1">1  Nickel(s)</span>
</span><span class='line'><span class="s1">4  Penny(s)</span>
</span><span class='line'>
</span><span class='line'><span class="s1">Another item? (enter &#39;</span>y<span class="s1">&#39; or &#39;</span>n<span class="s1">&#39;): y</span>
</span><span class='line'>
</span><span class='line'><span class="s1">Cost of item? : $56.43</span>
</span><span class='line'><span class="s1">Amount of payment? : $525.50</span>
</span><span class='line'><span class="s1">4  Hundred Dollar Bill(s)</span>
</span><span class='line'><span class="s1">1  Fifty Dollar Bill(s)</span>
</span><span class='line'><span class="s1">1  Ten Dollar Bill(s)</span>
</span><span class='line'><span class="s1">1  Five Dollar Bill(s)</span>
</span><span class='line'><span class="s1">4  One Dollar Bill(s)</span>
</span><span class='line'><span class="s1">1  Nickel(s)</span>
</span><span class='line'><span class="s1">2  Penny(s)</span>
</span><span class='line'>
</span><span class='line'><span class="s1">Another item? (enter &#39;</span>y<span class="s1">&#39; or &#39;</span>n<span class="err">&#39;</span><span class="o">)</span>: n
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Thank you, come again!
</span></code></pre></td></tr></table></div></figure>


<h3>Craps: Go Source</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>  <span class="s">&quot;math/rand&quot;</span>
</span><span class='line'>  <span class="s">&quot;strings&quot;</span>
</span><span class='line'>  <span class="s">&quot;time&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">const</span> <span class="p">(</span>
</span><span class='line'>  <span class="nx">playerStartingMoney</span> <span class="p">=</span> <span class="mi">100</span>
</span><span class='line'>  <span class="nx">minimumBetAmount</span>    <span class="p">=</span> <span class="mi">5</span>
</span><span class='line'>  <span class="nx">diceThrowDelayMs</span>    <span class="p">=</span> <span class="mi">300</span>
</span><span class='line'>  <span class="nx">pointBreakThrow</span>     <span class="p">=</span> <span class="mi">7</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">const</span> <span class="p">(</span>
</span><span class='line'>  <span class="nx">rollerPlayer</span> <span class="p">=</span> <span class="kc">iota</span>
</span><span class='line'>  <span class="nx">rollerComputer</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">const</span> <span class="p">(</span>
</span><span class='line'>  <span class="nx">winStr</span>       <span class="p">=</span> <span class="s">&quot;... and Win!&quot;</span>
</span><span class='line'>  <span class="nx">loseStr</span>      <span class="p">=</span> <span class="s">&quot;... and Lose!&quot;</span>
</span><span class='line'>  <span class="nx">rollAgainStr</span> <span class="p">=</span> <span class="s">&quot;... roll again ...&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">winningThrows</span> <span class="p">=</span> <span class="kd">map</span><span class="p">[</span><span class="kt">int</span><span class="p">]</span><span class="kt">bool</span><span class="p">{</span>
</span><span class='line'>  <span class="mi">7</span><span class="p">:</span>  <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>  <span class="mi">11</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">losingThrows</span> <span class="p">=</span> <span class="kd">map</span><span class="p">[</span><span class="kt">int</span><span class="p">]</span><span class="kt">bool</span><span class="p">{</span>
</span><span class='line'>  <span class="mi">2</span><span class="p">:</span>  <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>  <span class="mi">3</span><span class="p">:</span>  <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>  <span class="mi">12</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">showUsage</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;See rules? enter &#39;y&#39; or &#39;n&#39; : &quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">choice</span> <span class="kt">string</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Scan</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">choice</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">strings</span><span class="p">.</span><span class="nx">ToLower</span><span class="p">(</span><span class="nx">choice</span><span class="p">)</span> <span class="o">==</span> <span class="s">&quot;n&quot;</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;\n       Welcome to CRAPS!    &quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;----------------------------------------&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;\nHere are the rules:&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;- You roll a pair of dice and add up the score for each turn&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;- rolling a 7 or 11 on the first roll wins&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;- rolling a 2, 3 or 12 on the first roll loses&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;- any other number becomes your &#39;point&#39;, and you continue to roll&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;    - if you subsequently roll your &#39;point&#39; again, you win&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;    - if you roll a 7, you lose&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;- When one of us loses, we switch dice&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;- You start with $100, and have to bet a minimum of $5 per turn&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;- You get the first turn&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;- To stop betting, just enter $0 as your bet amount&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;\n\nThat&#39;s it, let&#39;s go!\n\n&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">getBetMoney</span><span class="p">(</span><span class="nx">total</span> <span class="kt">int</span><span class="p">)</span> <span class="p">(</span><span class="nx">bet</span> <span class="kt">int</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">for</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;\nYou have $%d, how much would you like to bet? $&quot;</span><span class="p">,</span> <span class="nx">total</span><span class="p">)</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Scan</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">bet</span><span class="p">)</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">bet</span> <span class="p">&gt;</span> <span class="nx">total</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Hey, you can&#39;t bet more than you have!&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="nx">bet</span> <span class="p">&gt;</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="nx">bet</span> <span class="p">&lt;</span> <span class="nx">minimumBetAmount</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;Sorry buddy, you gotta place at least $%d on the table.\n&quot;</span><span class="p">,</span> <span class="nx">minimumBetAmount</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">return</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">getDice</span><span class="p">(</span><span class="nx">subject</span> <span class="kt">string</span><span class="p">)</span> <span class="kt">int</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;%s roll &quot;</span><span class="p">,</span> <span class="nx">subject</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">time</span><span class="p">.</span><span class="nx">Sleep</span><span class="p">(</span><span class="nx">diceThrowDelayMs</span> <span class="o">*</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Millisecond</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">dice1</span> <span class="o">:=</span> <span class="mi">1</span> <span class="o">+</span> <span class="nx">rand</span><span class="p">.</span><span class="nx">Intn</span><span class="p">(</span><span class="mi">6</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;%d &quot;</span><span class="p">,</span> <span class="nx">dice1</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">time</span><span class="p">.</span><span class="nx">Sleep</span><span class="p">(</span><span class="nx">diceThrowDelayMs</span> <span class="o">*</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Millisecond</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">dice2</span> <span class="o">:=</span> <span class="mi">1</span> <span class="o">+</span> <span class="nx">rand</span><span class="p">.</span><span class="nx">Intn</span><span class="p">(</span><span class="mi">6</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;and %d &quot;</span><span class="p">,</span> <span class="nx">dice2</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">time</span><span class="p">.</span><span class="nx">Sleep</span><span class="p">(</span><span class="nx">diceThrowDelayMs</span> <span class="o">*</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Millisecond</span><span class="p">)</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">dice1</span> <span class="o">+</span> <span class="nx">dice2</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">playRound</span><span class="p">(</span><span class="nx">roller</span> <span class="kt">int</span><span class="p">)</span> <span class="kt">bool</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">subject</span> <span class="o">:=</span> <span class="s">&quot;I&quot;</span>
</span><span class='line'>  <span class="nx">possessive</span> <span class="o">:=</span> <span class="s">&quot;My&quot;</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">roller</span> <span class="o">==</span> <span class="nx">rollerPlayer</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">subject</span> <span class="p">=</span> <span class="s">&quot;You&quot;</span>
</span><span class='line'>      <span class="nx">possessive</span> <span class="p">=</span> <span class="s">&quot;Your&quot;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">firstThrow</span> <span class="o">:=</span> <span class="nx">getDice</span><span class="p">(</span><span class="nx">subject</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="nx">winningThrows</span><span class="p">[</span><span class="nx">firstThrow</span><span class="p">]</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">winStr</span><span class="p">)</span>
</span><span class='line'>      <span class="k">return</span> <span class="kc">true</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">losingThrows</span><span class="p">[</span><span class="nx">firstThrow</span><span class="p">]</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">loseStr</span><span class="p">)</span>
</span><span class='line'>      <span class="k">return</span> <span class="kc">false</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;so %s point is %d\n&quot;</span><span class="p">,</span> <span class="nx">possessive</span><span class="p">,</span> <span class="nx">firstThrow</span><span class="p">)</span>
</span><span class='line'>  <span class="k">for</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">throw</span> <span class="o">:=</span> <span class="nx">getDice</span><span class="p">(</span><span class="nx">subject</span><span class="p">)</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">throw</span> <span class="o">==</span> <span class="nx">firstThrow</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;and make %s point!\n&quot;</span><span class="p">,</span> <span class="nx">possessive</span><span class="p">)</span>
</span><span class='line'>          <span class="k">return</span> <span class="kc">true</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">throw</span> <span class="o">==</span> <span class="nx">pointBreakThrow</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">loseStr</span><span class="p">)</span>
</span><span class='line'>          <span class="k">return</span> <span class="kc">false</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">rollAgainStr</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">updateMoney</span><span class="p">(</span><span class="nx">won</span> <span class="kt">bool</span><span class="p">,</span> <span class="nx">total</span><span class="p">,</span> <span class="nx">bet</span> <span class="kt">int</span><span class="p">)</span> <span class="p">(</span><span class="nx">newTotal</span> <span class="kt">int</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">won</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">newTotal</span> <span class="p">=</span> <span class="nx">total</span> <span class="o">+</span> <span class="nx">bet</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">newTotal</span> <span class="p">=</span> <span class="nx">total</span> <span class="o">-</span> <span class="nx">bet</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">showQuitMessage</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;\nAh I wish I could quit this easily ... farewell, young gambler!\n&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">showUsage</span><span class="p">()</span>
</span><span class='line'>  <span class="nx">rand</span><span class="p">.</span><span class="nx">Seed</span><span class="p">(</span><span class="nx">time</span><span class="p">.</span><span class="nx">Now</span><span class="p">().</span><span class="nx">Unix</span><span class="p">())</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">playerMoney</span> <span class="o">:=</span> <span class="nx">playerStartingMoney</span>
</span><span class='line'>  <span class="k">for</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;\n\nOk, your turn now\n&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="k">for</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">bet</span> <span class="o">:=</span> <span class="nx">getBetMoney</span><span class="p">(</span><span class="nx">playerMoney</span><span class="p">)</span>
</span><span class='line'>          <span class="k">if</span> <span class="nx">bet</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">showQuitMessage</span><span class="p">()</span>
</span><span class='line'>              <span class="k">return</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>          <span class="nx">playerWon</span> <span class="o">:=</span> <span class="nx">playRound</span><span class="p">(</span><span class="nx">rollerPlayer</span><span class="p">)</span>
</span><span class='line'>          <span class="nx">playerMoney</span> <span class="p">=</span> <span class="nx">updateMoney</span><span class="p">(</span><span class="nx">playerWon</span><span class="p">,</span> <span class="nx">playerMoney</span><span class="p">,</span> <span class="nx">bet</span><span class="p">)</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">!</span><span class="nx">playerWon</span> <span class="p">{</span>
</span><span class='line'>              <span class="k">break</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;\n\nOk, my turn now\n&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="k">for</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">bet</span> <span class="o">:=</span> <span class="nx">getBetMoney</span><span class="p">(</span><span class="nx">playerMoney</span><span class="p">)</span>
</span><span class='line'>          <span class="k">if</span> <span class="nx">bet</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">showQuitMessage</span><span class="p">()</span>
</span><span class='line'>              <span class="k">return</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>          <span class="nx">computerWon</span> <span class="o">:=</span> <span class="nx">playRound</span><span class="p">(</span><span class="nx">rollerComputer</span><span class="p">)</span>
</span><span class='line'>          <span class="nx">playerMoney</span> <span class="p">=</span> <span class="nx">updateMoney</span><span class="p">(!</span><span class="nx">computerWon</span><span class="p">,</span> <span class="nx">playerMoney</span><span class="p">,</span> <span class="nx">bet</span><span class="p">)</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">!</span><span class="nx">computerWon</span> <span class="p">{</span>
</span><span class='line'>              <span class="k">break</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Craps: Basic Source</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
</pre></td><td class='code'><pre><code class='basic'><span class='line'><span class="nl">5</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="kr">TAB</span><span class="p">(</span><span class="il">33</span><span class="p">);</span><span class="s2">&quot;CRAPS&quot;</span>
</span><span class='line'><span class="nl">10</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="kr">TAB</span><span class="p">(</span><span class="il">15</span><span class="p">);</span><span class="s2">&quot;CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY&quot;</span>
</span><span class='line'><span class="nl">12</span><span class="w"> </span><span class="kr">PRINT</span><span class="o">:</span><span class="kr">PRINT</span><span class="o">:</span><span class="kr">PRINT</span>
</span><span class='line'><span class="nl">15</span><span class="w"> </span><span class="kd">LET</span><span class="w"> </span><span class="vg">R</span><span class="o">=</span><span class="il">0</span>
</span><span class='line'><span class="nl">20</span><span class="w"> </span><span class="kr">PRINT</span><span class="s2">&quot;2,3,12 ARE LOSERS; 4,5,6,8,9,10 ARE POINTS; 7,11 ARE NATURAL WINNERS.&quot;</span>
</span><span class='line'><span class="nl">21</span><span class="w"> </span><span class="kd">LET</span><span class="w"> </span><span class="vg">T</span><span class="o">=</span><span class="il">1</span>
</span><span class='line'><span class="nl">22</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;PICK A NUMBER AND INPUT TO ROLL DICE&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nl">23</span><span class="w"> </span><span class="kr">INPUT</span><span class="w"> </span><span class="vg">Z</span>
</span><span class='line'><span class="nl">24</span><span class="w"> </span><span class="kd">LET</span><span class="w"> </span><span class="vg">X</span><span class="o">=</span><span class="p">(</span><span class="kr">RND</span><span class="p">(</span><span class="il">0</span><span class="p">))</span>
</span><span class='line'><span class="nl">25</span><span class="w"> </span><span class="kd">LET</span><span class="w"> </span><span class="vg">T</span><span class="w"> </span><span class="o">=</span><span class="vg">T</span><span class="o">+</span><span class="il">1</span>
</span><span class='line'><span class="nl">26</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">T</span><span class="o">&lt;=</span><span class="vg">Z</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">24</span>
</span><span class='line'><span class="nl">27</span><span class="w"> </span><span class="kr">PRINT</span><span class="s2">&quot;INPUT THE AMOUNT OF YOUR WAGER.&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nl">28</span><span class="w"> </span><span class="kr">INPUT</span><span class="w"> </span><span class="vg">F</span>
</span><span class='line'><span class="nl">30</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;I WILL NOW THROW THE DICE&quot;</span>
</span><span class='line'><span class="nl">40</span><span class="w"> </span><span class="kd">LET</span><span class="w"> </span><span class="vg">E</span><span class="o">=</span><span class="kr">INT</span><span class="p">(</span><span class="il">7</span><span class="o">*</span><span class="kr">RND</span><span class="p">(</span><span class="il">1</span><span class="p">))</span>
</span><span class='line'><span class="nl">41</span><span class="w"> </span><span class="kd">LET</span><span class="w"> </span><span class="vg">S</span><span class="o">=</span><span class="kr">INT</span><span class="p">(</span><span class="il">7</span><span class="o">*</span><span class="kr">RND</span><span class="p">(</span><span class="il">1</span><span class="p">))</span>
</span><span class='line'><span class="nl">42</span><span class="w"> </span><span class="kd">LET</span><span class="w"> </span><span class="vg">X</span><span class="o">=</span><span class="vg">E</span><span class="o">+</span><span class="vg">S</span>
</span><span class='line'><span class="nl">50</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">X</span><span class="o">=</span><span class="il">7</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">180</span>
</span><span class='line'><span class="nl">55</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">X</span><span class="o">=</span><span class="il">11</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">180</span>
</span><span class='line'><span class="nl">60</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">X</span><span class="o">=</span><span class="il">1</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">40</span>
</span><span class='line'><span class="nl">62</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">X</span><span class="o">=</span><span class="il">2</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">195</span>
</span><span class='line'><span class="nl">65</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">X</span><span class="o">=</span><span class="il">0</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">40</span>
</span><span class='line'><span class="nl">70</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">X</span><span class="o">=</span><span class="il">2</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">200</span>
</span><span class='line'><span class="nl">80</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">X</span><span class="o">=</span><span class="il">3</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">200</span>
</span><span class='line'><span class="nl">90</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">X</span><span class="o">=</span><span class="il">12</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">200</span>
</span><span class='line'><span class="nl">125</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">X</span><span class="o">=</span><span class="il">5</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">220</span>
</span><span class='line'><span class="nl">130</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">X</span><span class="w"> </span><span class="o">=</span><span class="il">6</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">220</span>
</span><span class='line'><span class="nl">140</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">X</span><span class="o">=</span><span class="il">8</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">220</span>
</span><span class='line'><span class="nl">150</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">X</span><span class="o">=</span><span class="il">9</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">220</span>
</span><span class='line'><span class="nl">160</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">X</span><span class="w"> </span><span class="o">=</span><span class="il">10</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">220</span>
</span><span class='line'><span class="nl">170</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">X</span><span class="o">=</span><span class="il">4</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">220</span>
</span><span class='line'><span class="nl">180</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="vg">X</span><span class="w"> </span><span class="s2">&quot;- NATURAL....A WINNER!!!!&quot;</span>
</span><span class='line'><span class="nl">185</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="vg">X</span><span class="s2">&quot;PAYS EVEN MONEY, YOU WIN&quot;</span><span class="vg">F</span><span class="s2">&quot;DOLLARS&quot;</span>
</span><span class='line'><span class="nl">190</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">210</span>
</span><span class='line'><span class="nl">195</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="vg">X</span><span class="s2">&quot;- SNAKE EYES....YOU LOSE.&quot;</span>
</span><span class='line'><span class="nl">196</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;YOU LOSE&quot;</span><span class="vg">F</span><span class="w"> </span><span class="s2">&quot;DOLLARS.&quot;</span>
</span><span class='line'><span class="nl">197</span><span class="w"> </span><span class="kd">LET</span><span class="w"> </span><span class="vg">F</span><span class="o">=</span><span class="il">0</span><span class="o">-</span><span class="vg">F</span>
</span><span class='line'><span class="nl">198</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">210</span>
</span><span class='line'><span class="nl">200</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="vg">X</span><span class="w"> </span><span class="s2">&quot; - CRAPS...YOU LOSE.&quot;</span>
</span><span class='line'><span class="nl">205</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;YOU LOSE&quot;</span><span class="vg">F</span><span class="s2">&quot;DOLLARS.&quot;</span>
</span><span class='line'><span class="nl">206</span><span class="w"> </span><span class="kd">LET</span><span class="w"> </span><span class="vg">F</span><span class="o">=</span><span class="il">0</span><span class="o">-</span><span class="vg">F</span>
</span><span class='line'><span class="nl">210</span><span class="w"> </span><span class="kd">LET</span><span class="w"> </span><span class="vg">R</span><span class="o">=</span><span class="w"> </span><span class="vg">R</span><span class="o">+</span><span class="vg">F</span>
</span><span class='line'><span class="nl">211</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">320</span>
</span><span class='line'><span class="nl">220</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="vg">X</span><span class="w"> </span><span class="s2">&quot;IS THE POINT. I WILL ROLL AGAIN&quot;</span>
</span><span class='line'><span class="nl">230</span><span class="w"> </span><span class="kd">LET</span><span class="w"> </span><span class="vg">H</span><span class="o">=</span><span class="kr">INT</span><span class="p">(</span><span class="il">7</span><span class="o">*</span><span class="kr">RND</span><span class="p">(</span><span class="il">1</span><span class="p">))</span>
</span><span class='line'><span class="nl">231</span><span class="w"> </span><span class="kd">LET</span><span class="w"> </span><span class="vg">Q</span><span class="o">=</span><span class="kr">INT</span><span class="p">(</span><span class="il">7</span><span class="o">*</span><span class="kr">RND</span><span class="p">(</span><span class="il">1</span><span class="p">))</span>
</span><span class='line'><span class="nl">232</span><span class="w"> </span><span class="kd">LET</span><span class="w"> </span><span class="vg">O</span><span class="o">=</span><span class="vg">H</span><span class="o">+</span><span class="vg">Q</span>
</span><span class='line'><span class="nl">240</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">O</span><span class="o">=</span><span class="il">1</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">230</span>
</span><span class='line'><span class="nl">250</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">O</span><span class="o">=</span><span class="il">7</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">290</span>
</span><span class='line'><span class="nl">255</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">O</span><span class="o">=</span><span class="il">0</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">230</span>
</span><span class='line'><span class="nl">260</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">O</span><span class="o">=</span><span class="vg">X</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">310</span>
</span><span class='line'><span class="nl">270</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="vg">O</span><span class="w"> </span><span class="s2">&quot; - NO POINT. I WILL ROLL AGAIN&quot;</span>
</span><span class='line'><span class="nl">280</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">230</span>
</span><span class='line'><span class="nl">290</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="vg">O</span><span class="w"> </span><span class="s2">&quot;- CRAPS. YOU LOSE.&quot;</span>
</span><span class='line'><span class="nl">291</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;YOU LOSE $&quot;</span><span class="vg">F</span>
</span><span class='line'><span class="nl">292</span><span class="w"> </span><span class="vg">F</span><span class="o">=</span><span class="il">0</span><span class="o">-</span><span class="vg">F</span>
</span><span class='line'><span class="nl">293</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">210</span>
</span><span class='line'><span class="nl">300</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">320</span>
</span><span class='line'><span class="nl">310</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="vg">X</span><span class="s2">&quot;- A WINNER.........CONGRATS!!!!!!!!&quot;</span>
</span><span class='line'><span class="nl">311</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="vg">X</span><span class="w"> </span><span class="s2">&quot;AT 2 TO 1 ODDS PAYS YOU...LET ME SEE...&quot;</span><span class="il">2</span><span class="o">*</span><span class="vg">F</span><span class="s2">&quot;DOLLARS&quot;</span>
</span><span class='line'><span class="nl">312</span><span class="w"> </span><span class="kd">LET</span><span class="w"> </span><span class="vg">F</span><span class="o">=</span><span class="il">2</span><span class="o">*</span><span class="vg">F</span>
</span><span class='line'><span class="nl">313</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">210</span>
</span><span class='line'><span class="nl">320</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot; IF YOU WANT TO PLAY AGAIN PRINT 5 IF NOT PRINT 2&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nl">330</span><span class="w"> </span><span class="kr">INPUT</span><span class="w"> </span><span class="vg">M</span>
</span><span class='line'><span class="nl">331</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">R</span><span class="o">&lt;</span><span class="il">0</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">334</span>
</span><span class='line'><span class="nl">332</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">R</span><span class="o">&gt;</span><span class="il">0</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">336</span>
</span><span class='line'><span class="nl">333</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">R</span><span class="o">=</span><span class="il">0</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">338</span>
</span><span class='line'><span class="nl">334</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;YOU ARE NOW UNDER $&quot;</span><span class="p">;</span><span class="o">-</span><span class="vg">R</span>
</span><span class='line'><span class="nl">335</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">340</span>
</span><span class='line'><span class="nl">336</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;YOU ARE NOW AHEAD $&quot;</span><span class="p">;</span><span class="vg">R</span>
</span><span class='line'><span class="nl">337</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">340</span>
</span><span class='line'><span class="nl">338</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;YOU ARE NOW EVEN AT 0&quot;</span>
</span><span class='line'><span class="nl">340</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">M</span><span class="o">=</span><span class="il">5</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">27</span>
</span><span class='line'><span class="nl">341</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">R</span><span class="o">&lt;</span><span class="il">0</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">350</span>
</span><span class='line'><span class="nl">342</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">R</span><span class="o">&gt;</span><span class="il">0</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">353</span>
</span><span class='line'><span class="nl">343</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">R</span><span class="o">=</span><span class="il">0</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">355</span>
</span><span class='line'><span class="nl">350</span><span class="w"> </span><span class="kr">PRINT</span><span class="s2">&quot;TOO BAD, YOU ARE IN THE HOLE. COME AGAIN.&quot;</span>
</span><span class='line'><span class="nl">351</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">360</span>
</span><span class='line'><span class="nl">353</span><span class="w"> </span><span class="kr">PRINT</span><span class="s2">&quot;CONGRATULATIONS---YOU CAME OUT A WINNER. COME AGAIN!&quot;</span>
</span><span class='line'><span class="nl">354</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">360</span>
</span><span class='line'><span class="nl">355</span><span class="w"> </span><span class="kr">PRINT</span><span class="s2">&quot;CONGRATULATIONS---YOU CAME OUT EVEN, NOT BAD FOR AN AMATEUR&quot;</span>
</span><span class='line'><span class="nl">360</span><span class="w"> </span><span class="kr">END</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Craps: Gameplay</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>go run craps.go
</span><span class='line'>See rules? enter <span class="s1">&#39;y&#39;</span> or <span class="s1">&#39;n&#39;</span> : y
</span><span class='line'>
</span><span class='line'>       Welcome to CRAPS!
</span><span class='line'>     ----------------------------------------
</span><span class='line'>
</span><span class='line'>Here are the rules:
</span><span class='line'>- You roll a pair of dice and add up the score <span class="k">for</span> each turn
</span><span class='line'>- rolling a <span class="m">7</span> or <span class="m">11</span> on the first roll wins
</span><span class='line'>- rolling a 2, <span class="m">3</span> or <span class="m">12</span> on the first roll loses
</span><span class='line'>- any other number becomes your <span class="s1">&#39;point&#39;</span>, and you <span class="k">continue</span> to roll
</span><span class='line'>    - <span class="k">if</span> you subsequently roll your <span class="s1">&#39;point&#39;</span> again, you win
</span><span class='line'>    - <span class="k">if</span> you roll a 7, you lose
</span><span class='line'>- When one of us loses, we switch dice
</span><span class='line'>- You start with <span class="nv">$100</span>, and have to bet a minimum of <span class="nv">$5</span> per turn
</span><span class='line'>- You get the first turn
</span><span class='line'>- To stop betting, just enter <span class="nv">$0</span> as your bet amount
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>That<span class="s1">&#39;s it, let&#39;</span>s go!
</span><span class='line'>
</span><span class='line'>Ok, your turn now
</span><span class='line'>
</span><span class='line'>You have <span class="nv">$100</span>, how much would you like to bet? <span class="nv">$10</span>
</span><span class='line'>You roll <span class="m">2</span> and <span class="m">3</span> so Your point is 5
</span><span class='line'>You roll <span class="m">6</span> and <span class="m">5</span> ... roll again ...
</span><span class='line'>You roll <span class="m">1</span> and <span class="m">5</span> ... roll again ...
</span><span class='line'>You roll <span class="m">4</span> and <span class="m">6</span> ... roll again ...
</span><span class='line'>You roll <span class="m">6</span> and <span class="m">5</span> ... roll again ...
</span><span class='line'>You roll <span class="m">1</span> and <span class="m">5</span> ... roll again ...
</span><span class='line'>You roll <span class="m">2</span> and <span class="m">2</span> ... roll again ...
</span><span class='line'>You roll <span class="m">2</span> and <span class="m">3</span> and make Your point!
</span><span class='line'>
</span><span class='line'>You have <span class="nv">$110</span>, how much would you like to bet? <span class="nv">$20</span>
</span><span class='line'>You roll <span class="m">3</span> and <span class="m">2</span> so Your point is 5
</span><span class='line'>You roll <span class="m">2</span> and <span class="m">4</span> ... roll again ...
</span><span class='line'>You roll <span class="m">6</span> and <span class="m">4</span> ... roll again ...
</span><span class='line'>You roll <span class="m">3</span> and <span class="m">1</span> ... roll again ...
</span><span class='line'>You roll <span class="m">4</span> and <span class="m">3</span> ... and Lose!
</span><span class='line'>
</span><span class='line'>Ok, my turn now
</span><span class='line'>
</span><span class='line'>You have <span class="nv">$90</span>, how much would you like to bet? <span class="nv">$0</span>
</span><span class='line'>
</span><span class='line'>Ah I wish I could quit this easily ... farewell, young gambler!
</span></code></pre></td></tr></table></div></figure>


<p>Coming next: a different kind of gambling game (Blackjack?) and a slightly more involved two-player game (Battleship?)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[These pretzels are making me thirsty!]]></title>
    <link href="http://agam.github.io/blog/2015/01/10/these-pretzels-are-making-me-thirsty/"/>
    <updated>2015-01-10T07:29:26+00:00</updated>
    <id>http://agam.github.io/blog/2015/01/10/these-pretzels-are-making-me-thirsty</id>
    <content type="html"><![CDATA[<p>All right, here&rsquo;s <em>another</em> one of the series of hypothetically pedagogical text games in Go. This one is based on the original <em>Bagels</em>, which I then appropriated as <em>Pretzels</em>.</p>

<p>Here&rsquo;s the code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>  <span class="s">&quot;math/rand&quot;</span>
</span><span class='line'>  <span class="s">&quot;time&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">const</span> <span class="p">(</span>
</span><span class='line'>  <span class="nx">minRange</span>  <span class="p">=</span> <span class="mi">100</span>
</span><span class='line'>  <span class="nx">maxRange</span>  <span class="p">=</span> <span class="mi">999</span>
</span><span class='line'>  <span class="nx">numDigits</span> <span class="p">=</span> <span class="mi">3</span>
</span><span class='line'>  <span class="nx">maxTries</span>  <span class="p">=</span> <span class="mi">20</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">const</span> <span class="p">(</span>
</span><span class='line'>  <span class="nx">picoStr</span>    <span class="p">=</span> <span class="s">&quot; -- PICO -- &quot;</span>
</span><span class='line'>  <span class="nx">fermiStr</span>   <span class="p">=</span> <span class="s">&quot; -- FERMI -- &quot;</span>
</span><span class='line'>  <span class="nx">pretzelStr</span> <span class="p">=</span> <span class="s">&quot; -- PRETZEL -- &quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">showIntro</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;\nWelcome to &#39;PRETZELS&#39; !!&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;------------------------&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span>
</span><span class='line'>      <span class="s">&quot;\nHere are the rules. I&#39;m going to guess a THREE-DIGIT number, and then &quot;</span> <span class="o">+</span>
</span><span class='line'>          <span class="s">&quot;you have to guess it. I will give you clues as follows: \n&quot;</span> <span class="o">+</span>
</span><span class='line'>          <span class="s">&quot;   PICO -- you got one digit correct, BUT in the wrong position\n&quot;</span> <span class="o">+</span>
</span><span class='line'>          <span class="s">&quot;  FERMI -- you got on digit correct, AND in the right position\n&quot;</span> <span class="o">+</span>
</span><span class='line'>          <span class="s">&quot;PRETZEL -- you got NO digits correct.\n&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;You get %d chances to guess it!\n\n&quot;</span><span class="p">,</span> <span class="nx">maxTries</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">getDigits</span><span class="p">(</span><span class="nx">num</span> <span class="kt">int</span><span class="p">,</span> <span class="nx">digits</span> <span class="p">[]</span><span class="kt">int</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">i</span> <span class="kt">int</span>
</span><span class='line'>  <span class="k">for</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">digits</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="p">=</span> <span class="nx">num</span> <span class="o">%</span> <span class="mi">10</span>
</span><span class='line'>      <span class="nx">i</span><span class="o">++</span>
</span><span class='line'>      <span class="nx">num</span> <span class="o">/=</span> <span class="mi">10</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">num</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">break</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">showFeedback</span><span class="p">(</span><span class="nx">targetDigits</span> <span class="p">[]</span><span class="kt">int</span><span class="p">,</span> <span class="nx">guess</span> <span class="kt">int</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">guessDigits</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">([]</span><span class="kt">int</span><span class="p">,</span> <span class="nx">numDigits</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">getDigits</span><span class="p">(</span><span class="nx">guess</span><span class="p">,</span> <span class="nx">guessDigits</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">somethingMatched</span> <span class="o">:=</span> <span class="kc">false</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="nb">len</span><span class="p">(</span><span class="nx">guessDigits</span><span class="p">);</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">guessDigits</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">==</span> <span class="nx">targetDigits</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="nx">fermiStr</span><span class="p">)</span>
</span><span class='line'>          <span class="nx">somethingMatched</span> <span class="p">=</span> <span class="kc">true</span>
</span><span class='line'>          <span class="k">continue</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="k">for</span> <span class="nx">j</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">j</span> <span class="p">&lt;</span> <span class="nb">len</span><span class="p">(</span><span class="nx">targetDigits</span><span class="p">);</span> <span class="nx">j</span><span class="o">++</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">if</span> <span class="nx">guessDigits</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">==</span> <span class="nx">targetDigits</span><span class="p">[</span><span class="nx">j</span><span class="p">]</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="nx">picoStr</span><span class="p">)</span>
</span><span class='line'>              <span class="nx">somethingMatched</span> <span class="p">=</span> <span class="kc">true</span>
</span><span class='line'>              <span class="k">break</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">!</span><span class="nx">somethingMatched</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="nx">pretzelStr</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">()</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">showIntro</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">rand</span><span class="p">.</span><span class="nx">Seed</span><span class="p">(</span><span class="nx">time</span><span class="p">.</span><span class="nx">Now</span><span class="p">().</span><span class="nx">Unix</span><span class="p">())</span>
</span><span class='line'>  <span class="nx">target</span> <span class="o">:=</span> <span class="nx">minRange</span> <span class="o">+</span> <span class="nx">rand</span><span class="p">.</span><span class="nx">Intn</span><span class="p">(</span><span class="nx">maxRange</span><span class="o">-</span><span class="nx">minRange</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">targetDigits</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">([]</span><span class="kt">int</span><span class="p">,</span> <span class="nx">numDigits</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">getDigits</span><span class="p">(</span><span class="nx">target</span><span class="p">,</span> <span class="nx">targetDigits</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">numTries</span> <span class="kt">int</span>
</span><span class='line'>  <span class="k">for</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;\nWhat is Guess #%d ? &quot;</span><span class="p">,</span> <span class="nx">numTries</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">guess</span> <span class="kt">int</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Scan</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">guess</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">if</span> <span class="nx">guess</span> <span class="p">&lt;</span> <span class="nx">minRange</span> <span class="o">||</span> <span class="nx">guess</span> <span class="p">&gt;</span> <span class="nx">maxRange</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;You MUST choose a number between %d and %d, try again ...\n\n&quot;</span><span class="p">,</span> <span class="nx">minRange</span><span class="p">,</span> <span class="nx">maxRange</span><span class="p">)</span>
</span><span class='line'>          <span class="k">continue</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="nx">showFeedback</span><span class="p">(</span><span class="nx">targetDigits</span><span class="p">,</span> <span class="nx">guess</span><span class="p">)</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">guess</span> <span class="o">==</span> <span class="nx">target</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;\nYou got it!!\n&quot;</span><span class="p">)</span>
</span><span class='line'>          <span class="k">break</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">numTries</span> <span class="p">&gt;</span> <span class="nx">maxTries</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;\nOOPS ... you ran out of chances! :(\n&quot;</span><span class="p">)</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;(The number I thought of was %d)\n\n&quot;</span><span class="p">,</span> <span class="nx">target</span><span class="p">)</span>
</span><span class='line'>          <span class="k">break</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="nx">numTries</span><span class="o">++</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;\n\n     ... these pretzels are making me thirsty! ...\n&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>and here&rsquo;s the eye-watering original:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
</pre></td><td class='code'><pre><code class='basic'><span class='line'><span class="nl">5</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="kr">TAB</span><span class="p">(</span><span class="il">33</span><span class="p">);</span><span class="s2">&quot;BAGELS&quot;</span>
</span><span class='line'><span class="nl">10</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="kr">TAB</span><span class="p">(</span><span class="il">15</span><span class="p">);</span><span class="s2">&quot;CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY&quot;</span><span class="o">:</span><span class="kr">PRINT</span><span class="o">:</span><span class="kr">PRINT</span>
</span><span class='line'><span class="nl">15</span><span class="w"> </span><span class="c1">REM *** BAGLES NUMBER GUESSING GAME</span>
</span><span class='line'><span class="nl">20</span><span class="w"> </span><span class="c1">REM *** ORIGINAL SOURCE UNKNOWN BUT SUSPECTED TO BE</span>
</span><span class='line'><span class="nl">25</span><span class="w"> </span><span class="c1">REM *** LAWRENCE HALL OF SCIENCE, U.C. BERKELY</span>
</span><span class='line'><span class="nl">30</span><span class="w"> </span><span class="kd">DIM</span><span class="w"> </span><span class="vg">A1</span><span class="p">(</span><span class="il">6</span><span class="p">),</span><span class="vg">A</span><span class="p">(</span><span class="il">3</span><span class="p">),</span><span class="vg">B</span><span class="p">(</span><span class="il">3</span><span class="p">)</span>
</span><span class='line'><span class="nl">40</span><span class="w"> </span><span class="vg">Y</span><span class="o">=</span><span class="il">0</span><span class="o">:</span><span class="vg">T</span><span class="o">=</span><span class="il">255</span>
</span><span class='line'><span class="nl">50</span><span class="w"> </span><span class="kr">PRINT</span><span class="o">:</span><span class="kr">PRINT</span><span class="o">:</span><span class="kr">PRINT</span>
</span><span class='line'><span class="nl">70</span><span class="w"> </span><span class="kr">INPUT</span><span class="w"> </span><span class="s2">&quot;WOULD YOU LIKE THE RULES (YES OR NO)&quot;</span><span class="p">;</span><span class="vg">A$</span>
</span><span class='line'><span class="nl">90</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="kr">LEFT$</span><span class="p">(</span><span class="vg">A$</span><span class="p">,</span><span class="il">1</span><span class="p">)</span><span class="o">=</span><span class="s2">&quot;N&quot;</span><span class="w"> </span><span class="kr">THEN</span><span class="w"> </span><span class="il">150</span>
</span><span class='line'><span class="nl">100</span><span class="w"> </span><span class="kr">PRINT</span><span class="o">:</span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;I AM THINKING OF A THREE-DIGIT NUMBER.  TRY TO GUESS&quot;</span>
</span><span class='line'><span class="nl">110</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;MY NUMBER AND I WILL GIVE YOU CLUES AS FOLLOWS:&quot;</span>
</span><span class='line'><span class="nl">120</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;   PICO   - ONE DIGIT CORRECT BUT IN THE WRONG POSITION&quot;</span>
</span><span class='line'><span class="nl">130</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;   FERMI  - ONE DIGIT CORRECT AND IN THE RIGHT POSITION&quot;</span>
</span><span class='line'><span class="nl">140</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;   BAGELS - NO DIGITS CORRECT&quot;</span>
</span><span class='line'><span class="nl">150</span><span class="w"> </span><span class="kr">FOR</span><span class="w"> </span><span class="vg">I</span><span class="o">=</span><span class="il">1</span><span class="w"> </span><span class="k">TO</span><span class="w"> </span><span class="il">3</span>
</span><span class='line'><span class="nl">160</span><span class="w"> </span><span class="vg">A</span><span class="p">(</span><span class="vg">I</span><span class="p">)</span><span class="o">=</span><span class="kr">INT</span><span class="p">(</span><span class="il">10</span><span class="o">*</span><span class="kr">RND</span><span class="p">(</span><span class="il">1</span><span class="p">))</span>
</span><span class='line'><span class="nl">165</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">I</span><span class="il">-1</span><span class="o">=</span><span class="il">0</span><span class="w"> </span><span class="kr">THEN</span><span class="w"> </span><span class="il">200</span>
</span><span class='line'><span class="nl">170</span><span class="w"> </span><span class="kr">FOR</span><span class="w"> </span><span class="vg">J</span><span class="o">=</span><span class="il">1</span><span class="w"> </span><span class="k">TO</span><span class="w"> </span><span class="vg">I</span><span class="il">-1</span>
</span><span class='line'><span class="nl">180</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">A</span><span class="p">(</span><span class="vg">I</span><span class="p">)</span><span class="o">=</span><span class="vg">A</span><span class="p">(</span><span class="vg">J</span><span class="p">)</span><span class="w"> </span><span class="kr">THEN</span><span class="w"> </span><span class="il">160</span>
</span><span class='line'><span class="nl">190</span><span class="w"> </span><span class="kr">NEXT</span><span class="w"> </span><span class="vg">J</span>
</span><span class='line'><span class="nl">200</span><span class="w"> </span><span class="kr">NEXT</span><span class="w"> </span><span class="vg">I</span>
</span><span class='line'><span class="nl">210</span><span class="w"> </span><span class="kr">PRINT</span><span class="o">:</span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;O.K.  I HAVE A NUMBER IN MIND.&quot;</span>
</span><span class='line'><span class="nl">220</span><span class="w"> </span><span class="kr">FOR</span><span class="w"> </span><span class="vg">I</span><span class="o">=</span><span class="il">1</span><span class="w"> </span><span class="k">TO</span><span class="w"> </span><span class="il">20</span>
</span><span class='line'><span class="nl">230</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;GUESS #&quot;</span><span class="p">;</span><span class="vg">I</span><span class="p">,</span>
</span><span class='line'><span class="nl">240</span><span class="w"> </span><span class="kr">INPUT</span><span class="w"> </span><span class="vg">A$</span>
</span><span class='line'><span class="nl">245</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="kr">LEN</span><span class="p">(</span><span class="vg">A$</span><span class="p">)</span><span class="o">&lt;&gt;</span><span class="il">3</span><span class="w"> </span><span class="kr">THEN</span><span class="w"> </span><span class="il">630</span>
</span><span class='line'><span class="nl">250</span><span class="w"> </span><span class="kr">FOR</span><span class="w"> </span><span class="vg">Z</span><span class="o">=</span><span class="il">1</span><span class="w"> </span><span class="k">TO</span><span class="w"> </span><span class="il">3</span><span class="o">:</span><span class="vg">A1</span><span class="p">(</span><span class="vg">Z</span><span class="p">)</span><span class="o">=</span><span class="kr">ASC</span><span class="p">(</span><span class="kr">MID$</span><span class="p">(</span><span class="vg">A$</span><span class="p">,</span><span class="vg">Z</span><span class="p">,</span><span class="il">1</span><span class="p">))</span><span class="o">:</span><span class="kr">NEXT</span><span class="w"> </span><span class="vg">Z</span>
</span><span class='line'><span class="nl">260</span><span class="w"> </span><span class="kr">FOR</span><span class="w"> </span><span class="vg">J</span><span class="o">=</span><span class="il">1</span><span class="w"> </span><span class="k">TO</span><span class="w"> </span><span class="il">3</span>
</span><span class='line'><span class="nl">270</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">A1</span><span class="p">(</span><span class="vg">J</span><span class="p">)</span><span class="o">&lt;</span><span class="il">48</span><span class="w"> </span><span class="kr">THEN</span><span class="w"> </span><span class="il">300</span>
</span><span class='line'><span class="nl">280</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">A1</span><span class="p">(</span><span class="vg">J</span><span class="p">)</span><span class="o">&gt;</span><span class="il">57</span><span class="w"> </span><span class="kr">THEN</span><span class="w"> </span><span class="il">300</span>
</span><span class='line'><span class="nl">285</span><span class="w"> </span><span class="vg">B</span><span class="p">(</span><span class="vg">J</span><span class="p">)</span><span class="o">=</span><span class="vg">A1</span><span class="p">(</span><span class="vg">J</span><span class="p">)</span><span class="il">-48</span>
</span><span class='line'><span class="nl">290</span><span class="w"> </span><span class="kr">NEXT</span><span class="w"> </span><span class="vg">J</span>
</span><span class='line'><span class="nl">295</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">320</span>
</span><span class='line'><span class="nl">300</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;WHAT?&quot;</span>
</span><span class='line'><span class="nl">310</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">230</span>
</span><span class='line'><span class="nl">320</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">B</span><span class="p">(</span><span class="il">1</span><span class="p">)</span><span class="o">=</span><span class="vg">B</span><span class="p">(</span><span class="il">2</span><span class="p">)</span><span class="w"> </span><span class="kr">THEN</span><span class="w"> </span><span class="il">650</span>
</span><span class='line'><span class="nl">330</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">B</span><span class="p">(</span><span class="il">2</span><span class="p">)</span><span class="o">=</span><span class="vg">B</span><span class="p">(</span><span class="il">3</span><span class="p">)</span><span class="w"> </span><span class="kr">THEN</span><span class="w"> </span><span class="il">650</span>
</span><span class='line'><span class="nl">340</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">B</span><span class="p">(</span><span class="il">3</span><span class="p">)</span><span class="o">=</span><span class="vg">B</span><span class="p">(</span><span class="il">1</span><span class="p">)</span><span class="w"> </span><span class="kr">THEN</span><span class="w"> </span><span class="il">650</span>
</span><span class='line'><span class="nl">350</span><span class="w"> </span><span class="vg">C</span><span class="o">=</span><span class="il">0</span><span class="o">:</span><span class="vg">D</span><span class="o">=</span><span class="il">0</span>
</span><span class='line'><span class="nl">360</span><span class="w"> </span><span class="kr">FOR</span><span class="w"> </span><span class="vg">J</span><span class="o">=</span><span class="il">1</span><span class="w"> </span><span class="k">TO</span><span class="w"> </span><span class="il">2</span>
</span><span class='line'><span class="nl">370</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">A</span><span class="p">(</span><span class="vg">J</span><span class="p">)</span><span class="o">&lt;&gt;</span><span class="vg">B</span><span class="p">(</span><span class="vg">J</span><span class="o">+</span><span class="il">1</span><span class="p">)</span><span class="w"> </span><span class="kr">THEN</span><span class="w"> </span><span class="il">390</span>
</span><span class='line'><span class="nl">380</span><span class="w"> </span><span class="vg">C</span><span class="o">=</span><span class="vg">C</span><span class="o">+</span><span class="il">1</span>
</span><span class='line'><span class="nl">390</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">A</span><span class="p">(</span><span class="vg">J</span><span class="o">+</span><span class="il">1</span><span class="p">)</span><span class="o">&lt;&gt;</span><span class="vg">B</span><span class="p">(</span><span class="vg">J</span><span class="p">)</span><span class="w"> </span><span class="kr">THEN</span><span class="w"> </span><span class="il">410</span>
</span><span class='line'><span class="nl">400</span><span class="w"> </span><span class="vg">C</span><span class="o">=</span><span class="vg">C</span><span class="o">+</span><span class="il">1</span>
</span><span class='line'><span class="nl">410</span><span class="w"> </span><span class="kr">NEXT</span><span class="w"> </span><span class="vg">J</span>
</span><span class='line'><span class="nl">420</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">A</span><span class="p">(</span><span class="il">1</span><span class="p">)</span><span class="o">&lt;&gt;</span><span class="vg">B</span><span class="p">(</span><span class="il">3</span><span class="p">)</span><span class="w"> </span><span class="kr">THEN</span><span class="w"> </span><span class="il">440</span>
</span><span class='line'><span class="nl">430</span><span class="w"> </span><span class="vg">C</span><span class="o">=</span><span class="vg">C</span><span class="o">+</span><span class="il">1</span>
</span><span class='line'><span class="nl">440</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">A</span><span class="p">(</span><span class="il">3</span><span class="p">)</span><span class="o">&lt;&gt;</span><span class="vg">B</span><span class="p">(</span><span class="il">1</span><span class="p">)</span><span class="w"> </span><span class="kr">THEN</span><span class="w"> </span><span class="il">460</span>
</span><span class='line'><span class="nl">450</span><span class="w"> </span><span class="vg">C</span><span class="o">=</span><span class="vg">C</span><span class="o">+</span><span class="il">1</span>
</span><span class='line'><span class="nl">460</span><span class="w"> </span><span class="kr">FOR</span><span class="w"> </span><span class="vg">J</span><span class="o">=</span><span class="il">1</span><span class="w"> </span><span class="k">TO</span><span class="w"> </span><span class="il">3</span>
</span><span class='line'><span class="nl">470</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">A</span><span class="p">(</span><span class="vg">J</span><span class="p">)</span><span class="o">&lt;&gt;</span><span class="vg">B</span><span class="p">(</span><span class="vg">J</span><span class="p">)</span><span class="w"> </span><span class="kr">THEN</span><span class="w"> </span><span class="il">490</span>
</span><span class='line'><span class="nl">480</span><span class="w"> </span><span class="vg">D</span><span class="o">=</span><span class="vg">D</span><span class="o">+</span><span class="il">1</span>
</span><span class='line'><span class="nl">490</span><span class="w"> </span><span class="kr">NEXT</span><span class="w"> </span><span class="vg">J</span>
</span><span class='line'><span class="nl">500</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">D</span><span class="o">=</span><span class="il">3</span><span class="w"> </span><span class="kr">THEN</span><span class="w"> </span><span class="il">680</span>
</span><span class='line'><span class="nl">505</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">C</span><span class="o">=</span><span class="il">0</span><span class="w"> </span><span class="kr">THEN</span><span class="w"> </span><span class="il">545</span>
</span><span class='line'><span class="nl">520</span><span class="w"> </span><span class="kr">FOR</span><span class="w"> </span><span class="vg">J</span><span class="o">=</span><span class="il">1</span><span class="w"> </span><span class="k">TO</span><span class="w"> </span><span class="vg">C</span>
</span><span class='line'><span class="nl">530</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;PICO &quot;</span><span class="p">;</span>
</span><span class='line'><span class="nl">540</span><span class="w"> </span><span class="kr">NEXT</span><span class="w"> </span><span class="vg">J</span>
</span><span class='line'><span class="nl">545</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">D</span><span class="o">=</span><span class="il">0</span><span class="w"> </span><span class="kr">THEN</span><span class="w"> </span><span class="il">580</span>
</span><span class='line'><span class="nl">550</span><span class="w"> </span><span class="kr">FOR</span><span class="w"> </span><span class="vg">J</span><span class="o">=</span><span class="il">1</span><span class="w"> </span><span class="k">TO</span><span class="w"> </span><span class="vg">D</span>
</span><span class='line'><span class="nl">560</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;FERMI &quot;</span><span class="p">;</span>
</span><span class='line'><span class="nl">570</span><span class="w"> </span><span class="kr">NEXT</span><span class="w"> </span><span class="vg">J</span>
</span><span class='line'><span class="nl">580</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">C</span><span class="o">+</span><span class="vg">D</span><span class="o">&lt;&gt;</span><span class="il">0</span><span class="w"> </span><span class="kr">THEN</span><span class="w"> </span><span class="il">600</span>
</span><span class='line'><span class="nl">590</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;BAGELS&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nl">600</span><span class="w"> </span><span class="kr">PRINT</span>
</span><span class='line'><span class="nl">605</span><span class="w"> </span><span class="kr">NEXT</span><span class="w"> </span><span class="vg">I</span>
</span><span class='line'><span class="nl">610</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;OH WELL.&quot;</span>
</span><span class='line'><span class="nl">615</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;THAT&#39;S TWNETY GUESSES.  MY NUMBER WAS&quot;</span><span class="p">;</span><span class="il">100</span><span class="o">*</span><span class="vg">A</span><span class="p">(</span><span class="il">1</span><span class="p">)</span><span class="o">+</span><span class="il">10</span><span class="o">*</span><span class="vg">A</span><span class="p">(</span><span class="il">2</span><span class="p">)</span><span class="o">+</span><span class="vg">A</span><span class="p">(</span><span class="il">3</span><span class="p">)</span>
</span><span class='line'><span class="nl">620</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">700</span>
</span><span class='line'><span class="nl">630</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;TRY GUESSING A THREE-DIGIT NUMBER.&quot;</span><span class="o">:</span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">230</span>
</span><span class='line'><span class="nl">650</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;OH, I FORGOT TO TELL YOU THAT THE NUMBER I HAVE IN MIND&quot;</span>
</span><span class='line'><span class="nl">660</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;HAS NO TWO DIGITS THE SAME.&quot;</span><span class="o">:</span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">230</span>
</span><span class='line'><span class="nl">680</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;YOU GOT IT!!!&quot;</span><span class="o">:</span><span class="kr">PRINT</span>
</span><span class='line'><span class="nl">690</span><span class="w"> </span><span class="vg">Y</span><span class="o">=</span><span class="vg">Y</span><span class="o">+</span><span class="il">1</span>
</span><span class='line'><span class="nl">700</span><span class="w"> </span><span class="kr">INPUT</span><span class="w"> </span><span class="s2">&quot;PLAY AGAIN (YES OR NO)&quot;</span><span class="p">;</span><span class="vg">A$</span>
</span><span class='line'><span class="nl">720</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="kr">LEFT$</span><span class="p">(</span><span class="vg">A$</span><span class="p">,</span><span class="il">1</span><span class="p">)</span><span class="o">=</span><span class="s2">&quot;YES&quot;</span><span class="w"> </span><span class="kr">THEN</span><span class="w"> </span><span class="il">150</span>
</span><span class='line'><span class="nl">730</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">Y</span><span class="o">=</span><span class="il">0</span><span class="w"> </span><span class="kr">THEN</span><span class="w"> </span><span class="il">750</span>
</span><span class='line'><span class="nl">740</span><span class="w"> </span><span class="kr">PRINT</span><span class="o">:</span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;A&quot;</span><span class="p">;</span><span class="vg">Y</span><span class="p">;</span><span class="s2">&quot;POINT BAGELS BUFF!!&quot;</span>
</span><span class='line'><span class="nl">750</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;HOPE YOU HAD FUN.  BYE.&quot;</span>
</span><span class='line'><span class="nl">999</span><span class="w"> </span><span class="kr">END</span>
</span></code></pre></td></tr></table></div></figure>


<p>And just to show how much fun this is (copy-paste and try it!), here&rsquo;s a sample run:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>go run pretzels.go
</span><span class='line'>
</span><span class='line'>Welcome to <span class="s1">&#39;PRETZELS&#39;</span> !!
</span><span class='line'>------------------------
</span><span class='line'>
</span><span class='line'>Here are the rules. I<span class="err">&#39;</span>m going to guess a THREE-DIGIT number, and <span class="k">then</span> you have to guess it. I will give you clues as follows:
</span><span class='line'>   PICO -- you got one digit correct, BUT in the wrong position
</span><span class='line'>  FERMI -- you got on digit correct, AND in the right position
</span><span class='line'>PRETZEL -- you got NO digits correct.
</span><span class='line'>
</span><span class='line'>You get <span class="m">20</span> chances to guess it!
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>What is Guess <span class="c">#1 ? 123</span>
</span><span class='line'> -- PRETZEL --
</span><span class='line'>
</span><span class='line'>What is Guess <span class="c">#2 ? 456</span>
</span><span class='line'> -- PICO --
</span><span class='line'>
</span><span class='line'>What is Guess <span class="c">#3 ? 789</span>
</span><span class='line'> -- PICO --  -- PICO --
</span><span class='line'>
</span><span class='line'>What is Guess <span class="c">#4 ? 100</span>
</span><span class='line'> -- PRETZEL --
</span><span class='line'>
</span><span class='line'>What is Guess <span class="c">#5 ? 987</span>
</span><span class='line'> -- PICO --  -- PICO --
</span><span class='line'>
</span><span class='line'>What is Guess <span class="c">#6 ? 8797</span>
</span><span class='line'>You MUST choose a number between <span class="m">100</span> and 999, try again ...
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>What is Guess <span class="c">#6 ? 897</span>
</span><span class='line'> -- FERMI --  -- FERMI --
</span><span class='line'>
</span><span class='line'>What is Guess <span class="c">#7 ? 894</span>
</span><span class='line'> -- FERMI --  -- FERMI --  -- FERMI --
</span><span class='line'>
</span><span class='line'>You got it!!
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>     ... these pretzels are making me thirsty! ...
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Beginning 'basic' text games in Go: Rock, Paper, Scissors, Lizard, Spock]]></title>
    <link href="http://agam.github.io/blog/2015/01/08/rock/"/>
    <updated>2015-01-08T04:00:53+00:00</updated>
    <id>http://agam.github.io/blog/2015/01/08/rock</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve been having some fun with the idea of simple text-based games in Go<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>. The original BASIC games book<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup> was not hard to find, and it was interesting to revisit it again.</p>

<p>The first thing that stared me in the face was just how <em>bad</em> (and by &ldquo;bad&rdquo; I mean <em>incomprehensible</em>) most of the code was. In my nostalgia I had completely lost sight of this.</p>

<p>The second thing was how nicely self-contained each game was, focussed on one simple idea, and implicitly pedagogical. Indeed, the games can be divided into a few distinct families<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup>.</p>

<p>So I came up with a hypothetical organization for my hypothetical book &mdash; it would need some simple stuff to start out with (with for loops, conditionals, functions, and so on), and slowly introduce more stuff. <em>An explicit non-goal</em> would be teaching the language in its complete form (a link to <em>Effective Go</em><sup id="fnref:4"><a href="#fn:4" rel="footnote">4</a></sup> should suffice for the motivated reader).</p>

<p>In terms of Games, the rough plan I came up with was: start with some simple guessing game, then maybe a slightly more involved version, then a card game, then the classic <em>Battleship</em> around the mid-point, followed by a sort of <em>&ldquo;dungeon RPG&rdquo;</em> with some optional discussion at each point (e.g. should the computer in &ldquo;Battleship&rdquo; be dumb and random, or <em>learn</em>?)</p>

<p>To get an idea of what this might look like, I wrote the first four of these. Here is what might pass for the very first one, a modified version of <em>&ldquo;Rock, Paper, Scissors&rdquo;</em>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>  <span class="s">&quot;math/rand&quot;</span>
</span><span class='line'>  <span class="s">&quot;strings&quot;</span>
</span><span class='line'>  <span class="s">&quot;time&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">const</span> <span class="p">(</span>
</span><span class='line'>  <span class="nx">rock</span> <span class="p">=</span> <span class="kc">iota</span>
</span><span class='line'>  <span class="nx">paper</span>
</span><span class='line'>  <span class="nx">scissors</span>
</span><span class='line'>  <span class="nx">lizard</span>
</span><span class='line'>  <span class="nx">spock</span>
</span><span class='line'>  <span class="nx">maxOptions</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">handOptions</span> <span class="p">=</span> <span class="p">[]</span><span class="kt">string</span><span class="p">{</span><span class="s">&quot;rock&quot;</span><span class="p">,</span> <span class="s">&quot;paper&quot;</span><span class="p">,</span> <span class="s">&quot;scissors&quot;</span><span class="p">,</span> <span class="s">&quot;lizard&quot;</span><span class="p">,</span> <span class="s">&quot;spock&quot;</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">precedence</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">hand1</span>  <span class="kt">int</span>
</span><span class='line'>  <span class="nx">reason</span> <span class="kt">string</span>
</span><span class='line'>  <span class="nx">hand2</span>  <span class="kt">int</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">precedences</span> <span class="p">=</span> <span class="p">[]</span><span class="nx">precedence</span><span class="p">{</span>
</span><span class='line'>  <span class="p">{</span><span class="nx">spock</span><span class="p">,</span> <span class="s">&quot;smashes&quot;</span><span class="p">,</span> <span class="nx">scissors</span><span class="p">},</span>
</span><span class='line'>  <span class="p">{</span><span class="nx">spock</span><span class="p">,</span> <span class="s">&quot;vaporises&quot;</span><span class="p">,</span> <span class="nx">rock</span><span class="p">},</span>
</span><span class='line'>  <span class="p">{</span><span class="nx">lizard</span><span class="p">,</span> <span class="s">&quot;posions&quot;</span><span class="p">,</span> <span class="nx">spock</span><span class="p">},</span>
</span><span class='line'>  <span class="p">{</span><span class="nx">lizard</span><span class="p">,</span> <span class="s">&quot;eats&quot;</span><span class="p">,</span> <span class="nx">paper</span><span class="p">},</span>
</span><span class='line'>  <span class="p">{</span><span class="nx">rock</span><span class="p">,</span> <span class="s">&quot;crushes&quot;</span><span class="p">,</span> <span class="nx">lizard</span><span class="p">},</span>
</span><span class='line'>  <span class="p">{</span><span class="nx">rock</span><span class="p">,</span> <span class="s">&quot;cruses&quot;</span><span class="p">,</span> <span class="nx">scissors</span><span class="p">},</span>
</span><span class='line'>  <span class="p">{</span><span class="nx">paper</span><span class="p">,</span> <span class="s">&quot;covers&quot;</span><span class="p">,</span> <span class="nx">rock</span><span class="p">},</span>
</span><span class='line'>  <span class="p">{</span><span class="nx">paper</span><span class="p">,</span> <span class="s">&quot;disproves&quot;</span><span class="p">,</span> <span class="nx">spock</span><span class="p">},</span>
</span><span class='line'>  <span class="p">{</span><span class="nx">scissors</span><span class="p">,</span> <span class="s">&quot;cuts&quot;</span><span class="p">,</span> <span class="nx">paper</span><span class="p">},</span>
</span><span class='line'>  <span class="p">{</span><span class="nx">scissors</span><span class="p">,</span> <span class="s">&quot;decapitates&quot;</span><span class="p">,</span> <span class="nx">lizard</span><span class="p">},</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">showUsage</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;\n     Welcome to ROCK - PAPER - SCISSORS - LIZARD - SPOCK  &quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;----------------------------------------------------------\n&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;We each pick one of the following : \n&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="nx">maxOptions</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;--&gt;  %s  &lt;--\n&quot;</span><span class="p">,</span> <span class="nx">handOptions</span><span class="p">[</span><span class="nx">i</span><span class="p">])</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">()</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">getPlayerChoice</span><span class="p">()</span> <span class="kt">int</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">for</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;\nEnter your choice : &quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">choice</span> <span class="kt">string</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Scan</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">choice</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="nx">choice</span> <span class="p">=</span> <span class="nx">strings</span><span class="p">.</span><span class="nx">ToLower</span><span class="p">(</span><span class="nx">choice</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="nx">maxOptions</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">if</span> <span class="nx">handOptions</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">==</span> <span class="nx">choice</span> <span class="p">{</span>
</span><span class='line'>              <span class="k">return</span> <span class="nx">i</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">getComputerChoice</span><span class="p">()</span> <span class="p">(</span><span class="nx">choice</span> <span class="kt">int</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">choice</span> <span class="p">=</span> <span class="nx">rand</span><span class="p">.</span><span class="nx">Intn</span><span class="p">(</span><span class="nx">maxOptions</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;I chose &quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="mi">3</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;.&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="nx">time</span><span class="p">.</span><span class="nx">Sleep</span><span class="p">(</span><span class="mi">200</span> <span class="o">*</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Millisecond</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot; %s\n\n&quot;</span><span class="p">,</span> <span class="nx">handOptions</span><span class="p">[</span><span class="nx">choice</span><span class="p">])</span>
</span><span class='line'>  <span class="k">return</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">showUsage</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">rand</span><span class="p">.</span><span class="nx">Seed</span><span class="p">(</span><span class="nx">time</span><span class="p">.</span><span class="nx">Now</span><span class="p">().</span><span class="nx">Unix</span><span class="p">())</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">playerWins</span><span class="p">,</span> <span class="nx">computerWins</span> <span class="kt">int</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">for</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;\nThe score is: Me %d, You %d\n&quot;</span><span class="p">,</span> <span class="nx">computerWins</span><span class="p">,</span> <span class="nx">playerWins</span><span class="p">)</span>
</span><span class='line'>      <span class="nx">playerChoice</span> <span class="o">:=</span> <span class="nx">getPlayerChoice</span><span class="p">()</span>
</span><span class='line'>      <span class="nx">computerChoice</span> <span class="o">:=</span> <span class="nx">getComputerChoice</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>      <span class="nx">playerWon</span> <span class="o">:=</span> <span class="kc">false</span>
</span><span class='line'>      <span class="nx">computerWon</span> <span class="o">:=</span> <span class="kc">false</span>
</span><span class='line'>      <span class="k">for</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">p</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">precedences</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">if</span> <span class="nx">p</span><span class="p">.</span><span class="nx">hand1</span> <span class="o">==</span> <span class="nx">playerChoice</span> <span class="o">&amp;&amp;</span> <span class="nx">p</span><span class="p">.</span><span class="nx">hand2</span> <span class="o">==</span> <span class="nx">computerChoice</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;Alas! %s %s %s! You Win! :(\n&quot;</span><span class="p">,</span>
</span><span class='line'>                  <span class="nx">handOptions</span><span class="p">[</span><span class="nx">p</span><span class="p">.</span><span class="nx">hand1</span><span class="p">],</span> <span class="nx">p</span><span class="p">.</span><span class="nx">reason</span><span class="p">,</span> <span class="nx">handOptions</span><span class="p">[</span><span class="nx">p</span><span class="p">.</span><span class="nx">hand2</span><span class="p">])</span>
</span><span class='line'>              <span class="nx">playerWon</span> <span class="p">=</span> <span class="kc">true</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>          <span class="k">if</span> <span class="nx">p</span><span class="p">.</span><span class="nx">hand1</span> <span class="o">==</span> <span class="nx">computerChoice</span> <span class="o">&amp;&amp;</span> <span class="nx">p</span><span class="p">.</span><span class="nx">hand2</span> <span class="o">==</span> <span class="nx">playerChoice</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;Aha! %s %s %s! I win! :)\n&quot;</span><span class="p">,</span>
</span><span class='line'>                  <span class="nx">handOptions</span><span class="p">[</span><span class="nx">p</span><span class="p">.</span><span class="nx">hand1</span><span class="p">],</span> <span class="nx">p</span><span class="p">.</span><span class="nx">reason</span><span class="p">,</span> <span class="nx">handOptions</span><span class="p">[</span><span class="nx">p</span><span class="p">.</span><span class="nx">hand2</span><span class="p">])</span>
</span><span class='line'>              <span class="nx">computerWon</span> <span class="p">=</span> <span class="kc">true</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">if</span> <span class="nx">playerWon</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">playerWins</span><span class="o">++</span>
</span><span class='line'>      <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="nx">computerWon</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">computerWins</span><span class="o">++</span>
</span><span class='line'>      <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Hey, look, it was a draw!\n\n&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;\nPlay another round ?  (enter &#39;y&#39; or &#39;n&#39;) : &quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">another</span> <span class="kt">string</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Scan</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">another</span><span class="p">)</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">strings</span><span class="p">.</span><span class="nx">ToLower</span><span class="p">(</span><span class="nx">another</span><span class="p">)</span> <span class="o">==</span> <span class="s">&quot;y&quot;</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">continue</span>
</span><span class='line'>      <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">break</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;\nOh well, until next time then ... \n&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Try it out! It&rsquo;s meant to be simple and straightforward &mdash; but wait! Before you pass judgement, I present to you the <em>original</em> version:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='basic'><span class='line'><span class="nl">10</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="kr">TAB</span><span class="p">(</span><span class="il">21</span><span class="p">);</span><span class="s2">&quot;GAME OF ROCK, SCISSORS, PAPER&quot;</span>
</span><span class='line'><span class="nl">20</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="kr">TAB</span><span class="p">(</span><span class="il">15</span><span class="p">);</span><span class="s2">&quot;CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY&quot;</span>
</span><span class='line'><span class="nl">25</span><span class="w"> </span><span class="kr">PRINT</span><span class="o">:</span><span class="kr">PRINT</span><span class="o">:</span><span class="kr">PRINT</span>
</span><span class='line'><span class="nl">30</span><span class="w"> </span><span class="kr">INPUT</span><span class="w"> </span><span class="s2">&quot;HOW MANY GAMES&quot;</span><span class="p">;</span><span class="vg">Q</span>
</span><span class='line'><span class="nl">40</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">Q</span><span class="o">&lt;</span><span class="il">11</span><span class="w"> </span><span class="kr">THEN</span><span class="w"> </span><span class="il">60</span>
</span><span class='line'><span class="nl">50</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;SORRY, BUT WE AREN&#39;T ALLOWED TO PLAY THAT MANY.&quot;</span><span class="o">:</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">30</span>
</span><span class='line'><span class="nl">60</span><span class="w"> </span><span class="kr">FOR</span><span class="w"> </span><span class="vg">G</span><span class="o">=</span><span class="il">1</span><span class="w"> </span><span class="k">TO</span><span class="w"> </span><span class="vg">Q</span>
</span><span class='line'><span class="nl">70</span><span class="w"> </span><span class="kr">PRINT</span><span class="o">:</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;GAME NUMBER&quot;</span><span class="p">;</span><span class="vg">G</span>
</span><span class='line'><span class="nl">80</span><span class="w"> </span><span class="vg">X</span><span class="o">=</span><span class="kr">INT</span><span class="p">(</span><span class="kr">RND</span><span class="p">(</span><span class="il">1</span><span class="p">)</span><span class="o">*</span><span class="il">3</span><span class="o">+</span><span class="il">1</span><span class="p">)</span>
</span><span class='line'><span class="nl">90</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;3=ROCK...2=SCISSORS...1=PAPER&quot;</span>
</span><span class='line'><span class="nl">100</span><span class="w"> </span><span class="kr">INPUT</span><span class="w"> </span><span class="s2">&quot;1...2...3...WHAT&#39;S YOUR CHOICE&quot;</span><span class="p">;</span><span class="vg">K</span>
</span><span class='line'><span class="nl">110</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="p">(</span><span class="vg">K</span><span class="il">-1</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="vg">K</span><span class="il">-2</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="vg">K</span><span class="il">-3</span><span class="p">)</span><span class="o">&lt;&gt;</span><span class="il">0</span><span class="w"> </span><span class="kr">THEN</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;INVALID.&quot;</span><span class="o">:</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">90</span>
</span><span class='line'><span class="nl">120</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;THIS IS MY CHOICE...&quot;</span>
</span><span class='line'><span class="nl">130</span><span class="w"> </span><span class="kr">ON</span><span class="w"> </span><span class="vg">X</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">140</span><span class="p">,</span><span class="il">150</span><span class="p">,</span><span class="il">160</span>
</span><span class='line'><span class="nl">140</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;...PAPER&quot;</span><span class="o">:</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">170</span>
</span><span class='line'><span class="nl">150</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;...SCISSORS&quot;</span><span class="o">:</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">170</span>
</span><span class='line'><span class="nl">160</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;...ROCK&quot;</span>
</span><span class='line'><span class="nl">170</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">X</span><span class="o">=</span><span class="vg">K</span><span class="w"> </span><span class="kr">THEN</span><span class="w"> </span><span class="il">250</span>
</span><span class='line'><span class="nl">180</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">X</span><span class="o">&gt;</span><span class="vg">K</span><span class="w"> </span><span class="kr">THEN</span><span class="w"> </span><span class="il">230</span>
</span><span class='line'><span class="nl">190</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">X</span><span class="o">=</span><span class="il">1</span><span class="w"> </span><span class="kr">THEN</span><span class="w"> </span><span class="il">210</span>
</span><span class='line'><span class="nl">200</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;YOU WIN!!!&quot;</span><span class="o">:</span><span class="vg">H</span><span class="o">=</span><span class="vg">H</span><span class="o">+</span><span class="il">1</span><span class="o">:</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">260</span>
</span><span class='line'><span class="nl">210</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">K</span><span class="o">&lt;&gt;</span><span class="il">3</span><span class="w"> </span><span class="kr">THEN</span><span class="w"> </span><span class="il">200</span>
</span><span class='line'><span class="nl">220</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;WOW!  I WIN!!!&quot;</span><span class="o">:</span><span class="vg">C</span><span class="o">=</span><span class="vg">C</span><span class="o">+</span><span class="il">1</span><span class="o">:</span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">260</span>
</span><span class='line'><span class="nl">230</span><span class="w"> </span><span class="kr">IF</span><span class="w"> </span><span class="vg">K</span><span class="o">&lt;&gt;</span><span class="il">1</span><span class="w"> </span><span class="ow">OR</span><span class="w"> </span><span class="vg">X</span><span class="o">&lt;&gt;</span><span class="il">3</span><span class="w"> </span><span class="kr">THEN</span><span class="w"> </span><span class="il">220</span>
</span><span class='line'><span class="nl">240</span><span class="w"> </span><span class="kr">GOTO</span><span class="w"> </span><span class="nl">200</span>
</span><span class='line'><span class="nl">250</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;TIE GAME.  NO WINNER.&quot;</span>
</span><span class='line'><span class="nl">260</span><span class="w"> </span><span class="kr">NEXT</span><span class="w"> </span><span class="vg">G</span>
</span><span class='line'><span class="nl">270</span><span class="w"> </span><span class="kr">PRINT</span><span class="o">:</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;HERE IS THE FINAL GAME SCORE:&quot;</span>
</span><span class='line'><span class="nl">280</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;I HAVE WON&quot;</span><span class="p">;</span><span class="vg">C</span><span class="p">;</span><span class="s2">&quot;GAME(S).&quot;</span>
</span><span class='line'><span class="nl">290</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;YOU HAVE WON&quot;</span><span class="p">;</span><span class="vg">H</span><span class="p">;</span><span class="s2">&quot;GAME(S).&quot;</span>
</span><span class='line'><span class="nl">300</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;AND&quot;</span><span class="p">;</span><span class="vg">Q</span><span class="o">-</span><span class="p">(</span><span class="vg">C</span><span class="o">+</span><span class="vg">H</span><span class="p">);</span><span class="s2">&quot;GAME(S) ENDED IN A TIE.&quot;</span>
</span><span class='line'><span class="nl">310</span><span class="w"> </span><span class="kr">PRINT</span><span class="o">:</span><span class="w"> </span><span class="kr">PRINT</span><span class="w"> </span><span class="s2">&quot;THANKS FOR PLAYING!!&quot;</span>
</span><span class='line'><span class="nl">320</span><span class="w"> </span><span class="kr">END</span>
</span></code></pre></td></tr></table></div></figure>


<p>Yes, folks, that is the kind of stuff I <em>cannot</em> believe I squinted over and read again and again :(</p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>First mentioned <a href="http://agam.github.io/blog/2014/12/17/the-gardens-of-go/">here</a> a month ago<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
<li id="fn:2">
<p><a href="http://www.atariarchives.org/basicgames/">&ldquo;Basic Computer Games&rdquo;</a>, originally for the Atari<a href="#fnref:2" rev="footnote">&#8617;</a></p></li>
<li id="fn:3">
<p>As in <a href="http://bitsavers.trailing-edge.com/pdf/dec/_Books/101_BASIC_Computer_Games_Mar75.pdf">this version with commentary</a>; see <em>Appendix A (pg 247)</em><a href="#fnref:3" rev="footnote">&#8617;</a></p></li>
<li id="fn:4">
<p><a href="https://golang.org/doc/effective_go.html">&ldquo;Effective Go&rdquo;</a><a href="#fnref:4" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Stuff I'd like to learn in 2015]]></title>
    <link href="http://agam.github.io/blog/2015/01/07/stuff-id-like-to-learn-in-2015/"/>
    <updated>2015-01-07T06:49:00+00:00</updated>
    <id>http://agam.github.io/blog/2015/01/07/stuff-id-like-to-learn-in-2015</id>
    <content type="html"><![CDATA[<p>Ah yes, the time of New Year&rsquo;s Resolutions. It never ends. Many weeks pass by in a haze of &ldquo;<em>shoulds</em>&rdquo;. So here&rsquo;s something more to add on.</p>

<ul>
<li><p>Keep playing with Go. It&rsquo;s a great, simple language. In particular, I want to try out a whole bunch of crazy experiments.</p></li>
<li><p>Think about the &ldquo;simple text games&rdquo; book. Or bury the idea as soon as possible.</p></li>
<li><p>Learn a bit more about the JVM (perhaps through Clojure?)</p></li>
<li><p>Stem the atrophy in algorithmic skills</p></li>
</ul>


<p>&hellip; and there&rsquo;s more I can&rsquo;t remember right now. The first two seem self-evident, so a bit more about the third and fourth. I&rsquo;ve had a deep dislike for all things <em>Microsoft and Java</em> for over ten years now, and I think it&rsquo;s all mostly FUD.</p>

<p>In the case of Microsoft, it was because everything I tried to learn became deprecated as fast as I learnt it, and I quit in disgust (I&rsquo;m told I quit before giving the CLR and C# a fair chance). I was quite naive fifteen years ago and thought that <em>everything</em> that was current <em>then</em> was going to last forever. This extended to such stuff as Frontpage, DDE, COM, RDO &hellip; you get the idea.</p>

<p>For Java it&rsquo;s more vague. I think I never got the <em>hang</em> of it, and then I had a lot of &ldquo;<em>design pattern crap</em>&rdquo; thrown in my face, and my long-last impression was one of incredible, pointless verbosity. Last year though we had someone join our team who had done <em>RealWorkInJava &trade;</em>, and after talking to him it didn&rsquo;t seem all that bad. In particular, the JVM seemed like something worth knowing.</p>

<p>I have pretty much <em>zero</em> experience with hosted languages. One of the reasons for this might be that I always want to know what&rsquo;s &ldquo;really happening underneath&rdquo;, and am deeply suspicious of situations when I <em>cannot</em> know (this is also why I prefer Ocaml/F# over Haskell, but  that&rsquo;s a whole other blog post).</p>

<p>Add to this the fact that I&rsquo;ve always been curious about Clojure, to discover all its differences from Common Lisp on my own (there are several rants for and against it online, but there&rsquo;s only one way to find out for sure), and it&rsquo;s a natural outlet for exploration.</p>

<p>Which brings me to the fourth point &hellip; I feel I&rsquo;ve seriously forgotten <em>a lot</em> of theory, both in Math and CS, and it&rsquo;s <em>frightening</em>. So I&rsquo;m hoping to weave that (<em>somehow</em>) into my Clojure exploration and kill many birds with one stone.</p>

<p>So yeah, we&rsquo;ll find out how this all worked out, same time next year :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Lisp performance check-up]]></title>
    <link href="http://agam.github.io/blog/2015/01/07/lisp-performance-check-up/"/>
    <updated>2015-01-07T06:22:09+00:00</updated>
    <id>http://agam.github.io/blog/2015/01/07/lisp-performance-check-up</id>
    <content type="html"><![CDATA[<p>Came across <a href="https://github.com/pixie-lang/pixie">pixie-lang</a>, and it had this bit about &ldquo;<em>the loop compiles down to six instructions!</em>&rdquo;</p>

<p>So I decided to go and satisfy my curiosity about just how many instructions a loop like this <em>should</em> be expected to compile down to.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='lisp'><span class='line'><span class="nv">CL-USER&gt;</span> <span class="p">(</span><span class="nb">defun</span> <span class="nv">add-fn</span> <span class="p">(</span><span class="nv">args</span><span class="p">)</span>
</span><span class='line'>           <span class="p">(</span><span class="nb">reduce</span> <span class="nf">#&#39;</span><span class="nb">+</span> <span class="nv">args</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<p>which obviously runs as</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='lisp'><span class='line'><span class="nv">CL-USER&gt;</span> <span class="p">(</span><span class="nv">add-fn</span> <span class="o">&#39;</span><span class="p">(</span><span class="mi">3</span> <span class="mi">4</span> <span class="mi">5</span><span class="p">))</span>
</span><span class='line'><span class="mi">12</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now, a look at what&rsquo;s going on &ldquo;under the hood&rdquo;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='lisp'><span class='line'><span class="nv">CL-USER&gt;</span> <span class="p">(</span><span class="nb">disassemble</span> <span class="nf">#&#39;</span><span class="nv">add-fn</span><span class="p">)</span>
</span><span class='line'><span class="c1">; disassembly for ADD-FN</span>
</span><span class='line'><span class="c1">; Size: 42 bytes. Origin: #x1004FBC3F8</span>
</span><span class='line'><span class="c1">; 3F8:       498B4C2460       MOV RCX, [R12+96]               ; thread.binding-stack-pointer</span>
</span><span class='line'>                                                              <span class="c1">; no-arg-parsing entry point</span>
</span><span class='line'><span class="c1">; 3FD:       48894DF8         MOV [RBP-8], RCX</span>
</span><span class='line'><span class="c1">; 401:       488B1598FFFFFF   MOV RDX, [RIP-104]              ; #&lt;FUNCTION +&gt;</span>
</span><span class='line'><span class="c1">; 408:       488BFE           MOV RDI, RSI</span>
</span><span class='line'><span class="c1">; 40B:       488B0596FFFFFF   MOV RAX, [RIP-106]              ; #&lt;FDEFINITION for REDUCE&gt;</span>
</span><span class='line'><span class="c1">; 412:       B904000000       MOV ECX, 4</span>
</span><span class='line'><span class="c1">; 417:       FF7508           PUSH QWORD PTR [RBP+8]</span>
</span><span class='line'><span class="c1">; 41A:       FF6009           JMP QWORD PTR [RAX+9]</span>
</span><span class='line'><span class="c1">; 41D:       CC0A             BREAK 10                        ; error trap</span>
</span><span class='line'><span class="c1">; 41F:       02               BYTE #X02</span>
</span><span class='line'><span class="c1">; 420:       19               BYTE #X19                       ; INVALID-ARG-COUNT-ERROR</span>
</span><span class='line'><span class="c1">; 421:       9A               BYTE #X9A                       ; RCX</span>
</span><span class='line'><span class="no">NIL</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ok, let&rsquo;s see if we can slightly improve that</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='lisp'><span class='line'><span class="nv">CL-USER&gt;</span> <span class="p">(</span><span class="nb">defun</span> <span class="nv">add-fn</span> <span class="p">(</span><span class="nv">args</span><span class="p">)</span>
</span><span class='line'>           <span class="p">(</span><span class="k">declare</span> <span class="p">(</span><span class="k">optimize</span> <span class="p">(</span><span class="nv">speed</span> <span class="mi">3</span><span class="p">)</span> <span class="p">(</span><span class="nv">safety</span> <span class="mi">0</span><span class="p">)))</span>
</span><span class='line'>           <span class="p">(</span><span class="nb">reduce</span> <span class="nf">#&#39;</span><span class="nb">+</span> <span class="nv">args</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='lisp'><span class='line'><span class="nv">CL-USER&gt;</span> <span class="p">(</span><span class="nb">disassemble</span> <span class="nf">#&#39;</span><span class="nv">add-fn</span><span class="p">)</span>
</span><span class='line'><span class="c1">; disassembly for ADD-FN</span>
</span><span class='line'><span class="c1">; Size: 25 bytes. Origin: #x10051BDB12</span>
</span><span class='line'><span class="c1">; 12:       488B15A7FFFFFF   MOV RDX, [RIP-89]                ; #&lt;FUNCTION +&gt;</span>
</span><span class='line'>                                                              <span class="c1">; no-arg-parsing entry point</span>
</span><span class='line'><span class="c1">; 19:       488B05A8FFFFFF   MOV RAX, [RIP-88]                ; #&lt;FDEFINITION for REDUCE&gt;</span>
</span><span class='line'><span class="c1">; 20:       B904000000       MOV ECX, 4</span>
</span><span class='line'><span class="c1">; 25:       FF7508           PUSH QWORD PTR [RBP+8]</span>
</span><span class='line'><span class="c1">; 28:       FF6009           JMP QWORD PTR [RAX+9]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Pretty sweet, eh? <em>You don&rsquo;t get that kind of feedback every day</em>.</p>

<p>This was all run on 64-bit SBCL:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='lisp'><span class='line'><span class="nv">CL-USER&gt;</span> <span class="p">(</span><span class="nb">lisp-implementation-type</span><span class="p">)</span>
</span><span class='line'><span class="s">&quot;SBCL&quot;</span>
</span><span class='line'><span class="nv">CL-USER&gt;</span> <span class="p">(</span><span class="nb">lisp-implementation-version</span><span class="p">)</span>
</span><span class='line'><span class="s">&quot;1.2.7&quot;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Getting into programming, for _real_ and for _free_]]></title>
    <link href="http://agam.github.io/blog/2015/01/02/getting-into-programming/"/>
    <updated>2015-01-02T23:17:08+00:00</updated>
    <id>http://agam.github.io/blog/2015/01/02/getting-into-programming</id>
    <content type="html"><![CDATA[<p>I saw an ad for Codecademy<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> in the footer of some web page, and immediately had mixed reactions. I&rsquo;m all for making programming a basic skill alongside reading and writing, but the focus of these &ldquo;bootcamps&rdquo;<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup> seems to be <em>vocational web development</em><sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup>.</p>

<p>This is <del>fine</del>great for people who really want to do that and until now lacked a way to acquire these skills in a focussed manner. But I&rsquo;m worried that this will replace what <em>computer science</em> or <em>programming</em> mean to a whole generation of kids<sup id="fnref:4"><a href="#fn:4" rel="footnote">4</a></sup>.</p>

<p>(Note: to be fair, there are bootcamps which are exceptions to the rule<sup id="fnref:5"><a href="#fn:5" rel="footnote">5</a></sup>, that focus on a wider array of skills)</p>

<p>While tweaking web pages might offer an instant gratification that can be sufficient for most people, I hope there are lots of kids who&rsquo;d like a bit more &ldquo;hard core&rdquo; approach. In the past, I have always believed this path to best consist of <em>C</em> followed by <em>Python</em> followed by <em>Scheme</em>.</p>

<p>This is still a great way to proceed, but I now think I have a better prescription: replace <em>Scheme</em> with one of <em>Racket</em><sup id="fnref:6"><a href="#fn:6" rel="footnote">6</a></sup>/<em>Common Lisp</em>/<em>Clojure</em>/<em>Haskell</em><sup id="fnref:7"><a href="#fn:7" rel="footnote">7</a></sup>, and replace <em>C</em> and <em>Python</em> by a single language: <em>Go</em>.</p>

<p>The more I think about it, the more I am convinced that Go is an <em>excellent</em> way to learn programming. It fulfills the requirement of &ldquo;learning about the machine&rdquo; (since it&rsquo;s syntactically similar to C, but <em>safer</em>) and being quick to develop and iterate (as in Python, it&rsquo;s very easy to install external libraries, build, run, fix, run again, etc)</p>

<p>I&rsquo;m thinking here of a 10-year old kid (ok, a 10-year old kid <em>who wants to learn</em>). There&rsquo;s stuff like Scratch<sup id="fnref:8"><a href="#fn:8" rel="footnote">8</a></sup> and Logo<sup id="fnref:9"><a href="#fn:9" rel="footnote">9</a></sup> for younger kids, and various programming tutorials aimed at slightly older kids, but what&rsquo;s the best way to target this kid? <strong>I think it&rsquo;s by getting him/her to play around with (1) some flavor of unix, and (2) learn Go. Both are free.<sup id="fnref:10"><a href="#fn:10" rel="footnote">10</a></sup></strong></p>

<p>There&rsquo;s never been a better time to get acquainted with the nuts and bolts of computers &mdash; you don&rsquo;t even need to get a real one! These days major &ldquo;cloud providers&rdquo;<sup id="fnref:11"><a href="#fn:11" rel="footnote">11</a></sup> have some &ldquo;free usage&rdquo; tier, and an easy way to register for a single VM<sup id="fnref:12"><a href="#fn:12" rel="footnote">12</a></sup>.</p>

<p>The best part about using a VM instead of a &ldquo;real computer&rdquo; is that you don&rsquo;t have to worry about crashing it, or otherwise doing anything irreversible. Reached a dead end? No problem, delete the VM and re-provision it.</p>

<p>Which brings me to the second part, using Go. The Go playground<sup id="fnref:13"><a href="#fn:13" rel="footnote">13</a></sup> makes an initial introduction dead simple, but getting up and running locally is just as straightforward. The syntax is very simple and it&rsquo;s easy to bang out lots of code and immediately see it working. (also, one of things a kid <em>won&rsquo;t</em> have to learn with Go? <em>makefiles</em>!)</p>

<p>A question that remains is &ldquo;what exactly to do with Go?&rdquo;, to which my answer is <em>&ldquo;simple text-based games&rdquo;</em>.</p>

<p>So yeah &hellip; this is the train of thought I&rsquo;ve been carrying about for the past few days. BTW &hellip; it&rsquo;s New Year&rsquo;s Eve, so <strong>happy new year!</strong><sup id="fnref:14"><a href="#fn:14" rel="footnote">14</a></sup></p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p><a href="http://www.codecademy.com/">http://www.codecademy.com/</a><a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
<li id="fn:2">
<p>See this <a href="http://www.skilledup.com/articles/the-ultimate-guide-to-coding-bootcamps-the-exhaustive-list/">exhaustive list</a> for a &ldquo;30,000 feet&rdquo; overview)<a href="#fnref:2" rev="footnote">&#8617;</a></p></li>
<li id="fn:3">
<p>E.g. &ldquo;Deep Dive Coders&rdquo; features <em>HTML5, CSS3, Github, javaScript, jQuery, Apache, MySQL, php</em>, while &ldquo;Makers Academy&rdquo; features <em>Ruby on Rails, HTML5, CSS3, Javascript, jQuery, Git, Agile and Lean</em> (whatever &ldquo;lean&rdquo; means)<a href="#fnref:3" rev="footnote">&#8617;</a></p></li>
<li id="fn:4">
<p>By which I mean ages 9 to 90 (!!)<a href="#fnref:4" rev="footnote">&#8617;</a></p></li>
<li id="fn:5">
<p>E.g. &ldquo;Fullstack Academy&rdquo; &mdash; though I&rsquo;m not sure if the name necessarily means what it does, since &ldquo;Refactor U&rdquo; promises <em>Full-stack JavaScript, Node.JS, HTML/CSS</em><a href="#fnref:5" rev="footnote">&#8617;</a></p></li>
<li id="fn:6">
<p>Which I think of as &ldquo;Scheme + useful libraries&rdquo;<a href="#fnref:6" rev="footnote">&#8617;</a></p></li>
<li id="fn:7">
<p>A contentious choice indeed; <em>more on this later(!)</em><a href="#fnref:7" rev="footnote">&#8617;</a></p></li>
<li id="fn:8">
<p><a href="http://scratch.mit.edu/">http://scratch.mit.edu/</a><a href="#fnref:8" rev="footnote">&#8617;</a></p></li>
<li id="fn:9">
<p><a href="http://el.media.mit.edu/logo-foundation/logo/turtle.html">http://el.media.mit.edu/logo-foundation/logo/turtle.html</a><a href="#fnref:9" rev="footnote">&#8617;</a></p></li>
<li id="fn:10">
<p>as in speech, and as in beer<a href="#fnref:10" rev="footnote">&#8617;</a></p></li>
<li id="fn:11">
<p>hate that term, but I don&rsquo;t know what else to use<a href="#fnref:11" rev="footnote">&#8617;</a></p></li>
<li id="fn:12">
<p>and even the smallest droplet on DigitalOcean, which is more than enough for this purpose, has a monthly price that&rsquo;s about the cost of a Venti Frappucino<a href="#fnref:12" rev="footnote">&#8617;</a></p></li>
<li id="fn:13">
<p><a href="https://play.golang.org/">https://play.golang.org/</a><a href="#fnref:13" rev="footnote">&#8617;</a></p></li>
<li id="fn:14">
<p>Although &mdash; thoughts like these are similar to <em>New Year&rsquo;s resolutions</em>, which means you need to consider the possibility that this entire post was conceived in a spirit of naive optimism.¯<a href="#fnref:14" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Zipf on Alice]]></title>
    <link href="http://agam.github.io/blog/2015/01/01/zipf-on-alice/"/>
    <updated>2015-01-01T02:08:08+00:00</updated>
    <id>http://agam.github.io/blog/2015/01/01/zipf-on-alice</id>
    <content type="html"><![CDATA[<p>I just encountered <em>Zipf&rsquo;s Law</em><sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> for the first time, and wanted to confirm it for myself. So I got a copy of Alice in Wonderland<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>, removed the metadata header, and ran it through this quick Go program.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;os&quot;</span>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;bufio&quot;</span>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;strings&quot;</span>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;unicode&quot;</span>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;sort&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">wordFrequencyMap</span> <span class="kd">map</span><span class="p">[</span><span class="kt">string</span><span class="p">]</span><span class="kt">int</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">updateFrequencies</span><span class="p">(</span><span class="nx">line</span> <span class="kt">string</span><span class="p">,</span> <span class="nx">wm</span> <span class="nx">wordFrequencyMap</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// Skip chapter titles</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">strings</span><span class="p">.</span><span class="nx">Contains</span><span class="p">(</span><span class="nx">line</span><span class="p">,</span> <span class="s">&quot;CHAPTER&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">scanner</span> <span class="o">:=</span> <span class="nx">bufio</span><span class="p">.</span><span class="nx">NewScanner</span><span class="p">(</span><span class="nx">strings</span><span class="p">.</span><span class="nx">NewReader</span><span class="p">(</span><span class="nx">line</span><span class="p">))</span>
</span><span class='line'>  <span class="nx">scanner</span><span class="p">.</span><span class="nx">Split</span><span class="p">(</span><span class="nx">bufio</span><span class="p">.</span><span class="nx">ScanWords</span><span class="p">)</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">scanner</span><span class="p">.</span><span class="nx">Scan</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">// Might need to break word down further if punctuation exists</span>
</span><span class='line'>      <span class="nx">word</span> <span class="o">:=</span> <span class="nx">strings</span><span class="p">.</span><span class="nx">ToLower</span><span class="p">(</span><span class="nx">scanner</span><span class="p">.</span><span class="nx">Text</span><span class="p">())</span>
</span><span class='line'>      <span class="nx">nextWord</span> <span class="o">:=</span> <span class="s">&quot;&quot;</span>
</span><span class='line'>      <span class="k">for</span> <span class="nx">_</span><span class="p">,</span> <span class="kt">rune</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">word</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">!</span><span class="nx">unicode</span><span class="p">.</span><span class="nx">IsLetter</span><span class="p">(</span><span class="kt">rune</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="nx">nextWord</span><span class="p">)</span> <span class="p">&gt;</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>                  <span class="nx">wm</span><span class="p">[</span><span class="nx">nextWord</span><span class="p">]</span><span class="o">++</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>              <span class="nx">nextWord</span> <span class="p">=</span> <span class="s">&quot;&quot;</span>
</span><span class='line'>          <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">nextWord</span> <span class="o">+=</span> <span class="nb">string</span><span class="p">(</span><span class="kt">rune</span><span class="p">)</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="nx">nextWord</span><span class="p">)</span> <span class="p">&gt;</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">wm</span><span class="p">[</span><span class="nx">nextWord</span><span class="p">]</span><span class="o">++</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Boilerplate to get sorting of keys by value to work</span>
</span><span class='line'><span class="kd">type</span> <span class="nx">Pair</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">k</span> <span class="kt">string</span>
</span><span class='line'>  <span class="nx">v</span> <span class="kt">int</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">PairList</span> <span class="p">[]</span><span class="nx">Pair</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">p</span> <span class="nx">PairList</span><span class="p">)</span> <span class="nx">Swap</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span> <span class="nx">j</span> <span class="kt">int</span><span class="p">)</span>      <span class="p">{</span> <span class="nx">p</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span> <span class="nx">p</span><span class="p">[</span><span class="nx">j</span><span class="p">]</span> <span class="p">=</span> <span class="nx">p</span><span class="p">[</span><span class="nx">j</span><span class="p">],</span> <span class="nx">p</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="p">}</span>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">p</span> <span class="nx">PairList</span><span class="p">)</span> <span class="nx">Len</span><span class="p">()</span> <span class="kt">int</span>           <span class="p">{</span> <span class="k">return</span> <span class="nb">len</span><span class="p">(</span><span class="nx">p</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">p</span> <span class="nx">PairList</span><span class="p">)</span> <span class="nx">Less</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span> <span class="nx">j</span> <span class="kt">int</span><span class="p">)</span> <span class="kt">bool</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">p</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">v</span> <span class="p">&lt;</span> <span class="nx">p</span><span class="p">[</span><span class="nx">j</span><span class="p">].</span><span class="nx">v</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">showStats</span><span class="p">(</span><span class="nx">wm</span> <span class="nx">wordFrequencyMap</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Statistics on the text\n&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Number of words found: &quot;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="nx">wm</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">numWordsTotal</span> <span class="o">:=</span> <span class="mi">0</span>
</span><span class='line'>  <span class="nx">numTopWords</span> <span class="o">:=</span> <span class="mi">0</span>
</span><span class='line'>  <span class="nx">numBotWords</span> <span class="o">:=</span> <span class="mi">0</span>
</span><span class='line'>  <span class="nx">freqProdTop</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">([]</span><span class="kt">int</span><span class="p">,</span> <span class="mi">100</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">freqProdBot</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">([]</span><span class="kt">int</span><span class="p">,</span> <span class="mi">100</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">pl</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="nx">PairList</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="nx">wm</span><span class="p">))</span>
</span><span class='line'>  <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">k</span><span class="p">,</span> <span class="nx">v</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">wm</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">pl</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="p">=</span> <span class="nx">Pair</span><span class="p">{</span><span class="nx">k</span><span class="p">,</span> <span class="nx">v</span><span class="p">}</span>
</span><span class='line'>      <span class="nx">i</span><span class="o">++</span>
</span><span class='line'>      <span class="nx">numWordsTotal</span> <span class="o">+=</span> <span class="nx">v</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">sort</span><span class="p">.</span><span class="nx">Sort</span><span class="p">(</span><span class="nx">sort</span><span class="p">.</span><span class="nx">Reverse</span><span class="p">(</span><span class="nx">pl</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">i</span> <span class="p">=</span> <span class="mi">0</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;\nThe top 100 words are :- &quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">p</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">pl</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">i</span> <span class="o">&gt;=</span> <span class="mi">100</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">break</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;%30s -&gt; %6d\n&quot;</span><span class="p">,</span> <span class="nx">p</span><span class="p">.</span><span class="nx">k</span><span class="p">,</span> <span class="nx">p</span><span class="p">.</span><span class="nx">v</span><span class="p">)</span>
</span><span class='line'>      <span class="nx">freqProdTop</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="p">=</span> <span class="nx">p</span><span class="p">.</span><span class="nx">v</span> <span class="o">*</span> <span class="p">(</span><span class="nx">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>      <span class="nx">i</span><span class="o">++</span>
</span><span class='line'>      <span class="nx">numTopWords</span> <span class="o">+=</span> <span class="nx">p</span><span class="p">.</span><span class="nx">v</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">sort</span><span class="p">.</span><span class="nx">Sort</span><span class="p">(</span><span class="nx">pl</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">i</span> <span class="p">=</span> <span class="mi">0</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;\nThe bottom 100 words are :-&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">p</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">pl</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">i</span> <span class="o">&gt;=</span> <span class="mi">100</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">break</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;%30s -&gt; %6d\n&quot;</span><span class="p">,</span> <span class="nx">p</span><span class="p">.</span><span class="nx">k</span><span class="p">,</span> <span class="nx">p</span><span class="p">.</span><span class="nx">v</span><span class="p">)</span>
</span><span class='line'>      <span class="nx">freqProdBot</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="p">=</span> <span class="nx">p</span><span class="p">.</span><span class="nx">v</span> <span class="o">*</span> <span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="nx">wm</span><span class="p">)</span> <span class="o">-</span> <span class="nx">i</span><span class="p">)</span>
</span><span class='line'>      <span class="nx">i</span><span class="o">++</span>
</span><span class='line'>      <span class="nx">numBotWords</span> <span class="o">+=</span> <span class="nx">p</span><span class="p">.</span><span class="nx">v</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;\n\nFrequency products of top words :- &quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">elem</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">freqProdTop</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;%4d &quot;</span><span class="p">,</span> <span class="nx">elem</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;\n\nFrequency product of bottom words :-&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">elem</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">freqProdBot</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;%4d &quot;</span><span class="p">,</span> <span class="nx">elem</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;\n\nTotal occurrences = &quot;</span><span class="p">,</span> <span class="nx">numWordsTotal</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Top words accounted for &quot;</span><span class="p">,</span> <span class="nx">numTopWords</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Bottom words accounted for &quot;</span><span class="p">,</span> <span class="nx">numBotWords</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">wm</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="nx">wordFrequencyMap</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">scanner</span> <span class="o">:=</span> <span class="nx">bufio</span><span class="p">.</span><span class="nx">NewScanner</span><span class="p">(</span><span class="nx">os</span><span class="p">.</span><span class="nx">Stdin</span><span class="p">)</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">scanner</span><span class="p">.</span><span class="nx">Scan</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">line</span> <span class="o">:=</span> <span class="nx">scanner</span><span class="p">.</span><span class="nx">Text</span><span class="p">()</span>
</span><span class='line'>      <span class="nx">updateFrequencies</span><span class="p">(</span><span class="nx">line</span><span class="p">,</span> <span class="nx">wm</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">showStats</span><span class="p">(</span><span class="nx">wm</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Yes, it&rsquo;s not written <em>super-efficiently</em>, but it runs <em>in a third of a second</em>, so I don&rsquo;t care; it&rsquo;s verbose but took less than five minutes to write, and is fairly straightforward.</p>

<p>Anyway, it runs as follows:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>cat ~/Downloads/alice-in-wonderland.txt <span class="p">|</span> go run word-frequency.go &gt; /tmp/log
</span></code></pre></td></tr></table></div></figure>


<p>with output that looks like:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>Statistics on the text
</span><span class='line'>
</span><span class='line'>Number of words found:  1793
</span><span class='line'>
</span><span class='line'>The top <span class="m">100</span> words are :-
</span><span class='line'>                           the -&gt;    667
</span><span class='line'>                           and -&gt;    467
</span><span class='line'>                            to -&gt;    415
</span><span class='line'>                             a -&gt;    351
</span><span class='line'>                           she -&gt;    350
</span><span class='line'>                            it -&gt;    343
</span><span class='line'>                             i -&gt;    331
</span><span class='line'>                            of -&gt;    247
</span><span class='line'>                           was -&gt;    214
</span><span class='line'>                            in -&gt;    188
</span><span class='line'>                         alice -&gt;    187
</span><span class='line'>...
</span><span class='line'>                         mouse -&gt;     42
</span><span class='line'>...
</span><span class='line'>                        rabbit -&gt;     26
</span><span class='line'>...
</span><span class='line'>                   caterpillar -&gt;     26
</span><span class='line'>...
</span><span class='line'>&lt;omitted selectively&gt;
</span><span class='line'>
</span><span class='line'>The bottom <span class="m">100</span> words are :-
</span><span class='line'>                          dish -&gt;      1
</span><span class='line'>                      inclined -&gt;      1
</span><span class='line'>                          beak -&gt;      1
</span><span class='line'>                      wandered -&gt;      1
</span><span class='line'>                        master -&gt;      1
</span><span class='line'>                        seldom -&gt;      1
</span><span class='line'>                     naturedly -&gt;      1
</span><span class='line'>...
</span><span class='line'>&lt;rest omitted&gt;
</span><span class='line'>
</span><span class='line'>Frequency products of top words :-
</span><span class='line'> <span class="m">667</span>  <span class="m">934</span> <span class="m">1245</span> <span class="m">1404</span> <span class="m">1750</span> <span class="m">2058</span> <span class="m">2317</span> <span class="m">1976</span> <span class="m">1926</span> <span class="m">1880</span> <span class="m">2057</span> <span class="m">2232</span> <span class="m">2171</span> <span class="m">2254</span> <span class="m">2205</span> <span class="m">2128</span> <span class="m">1632</span> <span class="m">1728</span> <span class="m">1824</span> <span class="m">1900</span> <span class="m">1953</span> <span class="m">2002</span> <span class="m">1932</span> <span class="m">1992</span> <span class="m">1975</span> <span class="m">2054</span> <span class="m">2133</span> <span class="m">2184</span> <span class="m">2204</span> <span class="m">2250</span> <span class="m">2263</span> <span class="m">2304</span> <span class="m">2211</span> <span class="m">2142</span> <span class="m">2100</span> <span class="m">2088</span> <span class="m">2146</span> <span class="m">2166</span> <span class="m">2223</span> <span class="m">2160</span> <span class="m">2214</span> <span class="m">2226</span> <span class="m">2236</span> <span class="m">2288</span> <span class="m">2295</span> <span class="m">2300</span> <span class="m">2256</span> <span class="m">2208</span> <span class="m">2254</span> <span class="m">2250</span> <span class="m">2295</span> <span class="m">2288</span> <span class="m">2226</span> <span class="m">2268</span> <span class="m">2310</span> <span class="m">2352</span> <span class="m">2337</span> <span class="m">2320</span> <span class="m">2301</span> <span class="m">2340</span> <span class="m">2318</span> <span class="m">2294</span> <span class="m">2331</span> <span class="m">2368</span> <span class="m">2340</span> <span class="m">2376</span> <span class="m">2278</span> <span class="m">2312</span> <span class="m">2346</span> <span class="m">2380</span> <span class="m">2414</span> <span class="m">2304</span> <span class="m">2336</span> <span class="m">2368</span> <span class="m">2325</span> <span class="m">2280</span> <span class="m">2310</span> <span class="m">2262</span> <span class="m">2291</span> <span class="m">2320</span> <span class="m">2268</span> <span class="m">2296</span> <span class="m">2324</span> <span class="m">2268</span> <span class="m">2295</span> <span class="m">2322</span> <span class="m">2349</span> <span class="m">2288</span> <span class="m">2314</span> <span class="m">2340</span> <span class="m">2366</span> <span class="m">2392</span> <span class="m">2418</span> <span class="m">2350</span> <span class="m">2375</span> <span class="m">2304</span> <span class="m">2328</span> <span class="m">2352</span> <span class="m">2376</span> <span class="m">2400</span>
</span><span class='line'>
</span><span class='line'>Frequency product of bottom words :-
</span><span class='line'><span class="m">1793</span> <span class="m">1792</span> <span class="m">1791</span> <span class="m">1790</span> <span class="m">1789</span> <span class="m">1788</span> <span class="m">1787</span> <span class="m">1786</span> <span class="m">1785</span> <span class="m">1784</span> <span class="m">1783</span> <span class="m">1782</span> <span class="m">1781</span> <span class="m">1780</span> <span class="m">1779</span> <span class="m">1778</span> <span class="m">1777</span> <span class="m">1776</span> <span class="m">1775</span> <span class="m">1774</span> <span class="m">1773</span> <span class="m">1772</span> <span class="m">1771</span> <span class="m">1770</span> <span class="m">1769</span> <span class="m">1768</span> <span class="m">1767</span> <span class="m">1766</span> <span class="m">1765</span> <span class="m">1764</span> <span class="m">1763</span> <span class="m">1762</span> <span class="m">1761</span> <span class="m">1760</span> <span class="m">1759</span> <span class="m">1758</span> <span class="m">1757</span> <span class="m">1756</span> <span class="m">1755</span> <span class="m">1754</span> <span class="m">1753</span> <span class="m">1752</span> <span class="m">1751</span> <span class="m">1750</span> <span class="m">1749</span> <span class="m">1748</span> <span class="m">1747</span> <span class="m">1746</span> <span class="m">1745</span> <span class="m">1744</span> <span class="m">1743</span> <span class="m">1742</span> <span class="m">1741</span> <span class="m">1740</span> <span class="m">1739</span> <span class="m">1738</span> <span class="m">1737</span> <span class="m">1736</span> <span class="m">1735</span> <span class="m">1734</span> <span class="m">1733</span> <span class="m">1732</span> <span class="m">1731</span> <span class="m">1730</span> <span class="m">1729</span> <span class="m">1728</span> <span class="m">1727</span> <span class="m">1726</span> <span class="m">1725</span> <span class="m">1724</span> <span class="m">1723</span> <span class="m">1722</span> <span class="m">1721</span> <span class="m">1720</span> <span class="m">1719</span> <span class="m">1718</span> <span class="m">1717</span> <span class="m">1716</span> <span class="m">1715</span> <span class="m">1714</span> <span class="m">1713</span> <span class="m">1712</span> <span class="m">1711</span> <span class="m">1710</span> <span class="m">1709</span> <span class="m">1708</span> <span class="m">1707</span> <span class="m">1706</span> <span class="m">1705</span> <span class="m">1704</span> <span class="m">1703</span> <span class="m">1702</span> <span class="m">1701</span> <span class="m">1700</span> <span class="m">1699</span> <span class="m">1698</span> <span class="m">1697</span> <span class="m">1696</span> <span class="m">1695</span> <span class="m">1694</span>
</span><span class='line'>
</span><span class='line'>Total <span class="nv">occurrences</span> <span class="o">=</span>  13812
</span><span class='line'>Top words accounted <span class="k">for</span>  8469
</span><span class='line'>Bottom words accounted <span class="k">for</span>  100
</span></code></pre></td></tr></table></div></figure>


<p>Except for the first four words (<em>the</em>, <em>and</em>, <em>to</em>, <em>a</em>), the rest do appear to bear a product in (roughly) the same range, i.e. the frequency of a word is more or less inversely proportional to its rank.</p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>As in <a href="http://en.wikipedia.org/wiki/Zipf%27s_law">this Wikipedia article</a>, though he meant it <a href="http://www.amazon.com/Human-Behavior-Principle-Least-Effort/dp/161427312X">more generally</a> than <em>merely</em> linguistics.<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
<li id="fn:2">
<p>From <a href="http://www.gutenberg.org/ebooks/11">Gutenberg</a><a href="#fnref:2" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Daily programming: logs down the river]]></title>
    <link href="http://agam.github.io/blog/2014/12/27/daily-programming-logs-down-the-river/"/>
    <updated>2014-12-27T02:11:28+00:00</updated>
    <id>http://agam.github.io/blog/2014/12/27/daily-programming-logs-down-the-river</id>
    <content type="html"><![CDATA[<p>Found <a href="http://www.reddit.com/r/dailyprogrammer/comments/2lljyq/11052014_challenge_187_hard_lumberjack_floating/">this problem</a> from about a month ago. I did a sloppy job on this one &mdash; it&rsquo;s correct, but mostly straight-line &ldquo;C &ndash; style&rdquo; code. I&rsquo;ll come up with a better way to do this later, <em>promise</em>. Meanwhile, here&rsquo;s the code.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;bufio&quot;</span>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;os&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">nodelabel</span> <span class="kt">uint8</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">link</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">next</span>      <span class="o">*</span><span class="nx">node</span>
</span><span class='line'>  <span class="nx">available</span> <span class="kt">int</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">node</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">label</span>    <span class="nx">nodelabel</span>
</span><span class='line'>  <span class="nx">links</span>    <span class="p">[]</span><span class="nx">link</span>
</span><span class='line'>  <span class="nx">hops</span>     <span class="kt">int</span>
</span><span class='line'>  <span class="nx">capacity</span> <span class="kt">int</span>
</span><span class='line'>  <span class="nx">isFinal</span>  <span class="kt">bool</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">nodeset</span> <span class="kd">map</span><span class="p">[</span><span class="nx">nodelabel</span><span class="p">]</span><span class="o">*</span><span class="nx">node</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">nodes</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="nx">nodeset</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">scanner</span> <span class="o">:=</span> <span class="nx">bufio</span><span class="p">.</span><span class="nx">NewScanner</span><span class="p">(</span><span class="nx">os</span><span class="p">.</span><span class="nx">Stdin</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">numNodes</span> <span class="kt">int</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">scanner</span><span class="p">.</span><span class="nx">Scan</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">line</span> <span class="o">:=</span> <span class="nx">scanner</span><span class="p">.</span><span class="nx">Text</span><span class="p">()</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">line</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="sc">&#39;#&#39;</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">continue</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">numNodes</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Sscanln</span><span class="p">(</span><span class="nx">line</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">numNodes</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">startNode</span><span class="p">,</span> <span class="nx">endNode</span> <span class="nx">nodelabel</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">capacity</span> <span class="kt">int</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Sscanf</span><span class="p">(</span><span class="nx">line</span><span class="p">,</span> <span class="s">&quot;%c %c %d&quot;</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">startNode</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">endNode</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">capacity</span><span class="p">)</span>
</span><span class='line'>          <span class="nx">n</span> <span class="o">:=</span> <span class="nx">nodes</span><span class="p">.</span><span class="nx">getNode</span><span class="p">(</span><span class="nx">startNode</span><span class="p">)</span>
</span><span class='line'>          <span class="nx">next</span> <span class="o">:=</span> <span class="nx">nodes</span><span class="p">.</span><span class="nx">getNode</span><span class="p">(</span><span class="nx">endNode</span><span class="p">)</span>
</span><span class='line'>          <span class="nx">l</span> <span class="o">:=</span> <span class="nx">link</span><span class="p">{</span><span class="nx">next</span><span class="p">:</span> <span class="nx">next</span><span class="p">,</span> <span class="nx">available</span><span class="p">:</span> <span class="nx">capacity</span><span class="p">}</span>
</span><span class='line'>          <span class="nx">n</span><span class="p">.</span><span class="nx">links</span> <span class="p">=</span> <span class="nb">append</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">links</span><span class="p">,</span> <span class="nx">l</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">finalNodeLabel</span> <span class="o">:=</span> <span class="nx">nodelabel</span><span class="p">(</span><span class="sc">&#39;A&#39;</span><span class="p">)</span> <span class="o">+</span> <span class="nx">nodelabel</span><span class="p">(</span><span class="nx">numNodes</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">startNode</span> <span class="o">:=</span> <span class="nx">nodes</span><span class="p">.</span><span class="nx">getNode</span><span class="p">(</span><span class="sc">&#39;A&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">numLogs</span> <span class="o">:=</span> <span class="mi">0</span>
</span><span class='line'>  <span class="k">for</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">nodes</span><span class="p">.</span><span class="nx">updateHopsAndCapacities</span><span class="p">(</span><span class="nx">finalNodeLabel</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">if</span> <span class="nx">startNode</span><span class="p">.</span><span class="nx">capacity</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">break</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="nx">path</span> <span class="o">:=</span> <span class="nx">startNode</span><span class="p">.</span><span class="nx">sendOneLog</span><span class="p">()</span>
</span><span class='line'>      <span class="nx">numLogs</span><span class="o">++</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// Print out path (in reverse)</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;Log #%d takes &quot;</span><span class="p">,</span> <span class="nx">numLogs</span><span class="p">)</span>
</span><span class='line'>      <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="nb">len</span><span class="p">(</span><span class="nx">path</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&gt;</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span><span class="o">--</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;%c -&gt; &quot;</span><span class="p">,</span> <span class="nx">path</span><span class="p">[</span><span class="nx">i</span><span class="p">])</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;%c -- path of %d\n&quot;</span><span class="p">,</span> <span class="nx">path</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="nb">len</span><span class="p">(</span><span class="nx">path</span><span class="p">))</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;River is now full. We could send %d logs\n&quot;</span><span class="p">,</span> <span class="nx">numLogs</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">nodes</span> <span class="nx">nodeset</span><span class="p">)</span> <span class="nx">updateHopsAndCapacities</span><span class="p">(</span><span class="nx">finalNodeLabel</span> <span class="nx">nodelabel</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">n</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">nodes</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">n</span><span class="p">.</span><span class="nx">hops</span> <span class="p">=</span> <span class="o">-</span><span class="mi">1</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">n</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">nodes</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">n</span><span class="p">.</span><span class="nx">computeHops</span><span class="p">(</span><span class="nx">finalNodeLabel</span><span class="p">)</span>
</span><span class='line'>      <span class="nx">n</span><span class="p">.</span><span class="nx">capacity</span> <span class="p">=</span> <span class="mi">0</span>
</span><span class='line'>      <span class="k">for</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">l</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">n</span><span class="p">.</span><span class="nx">links</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">n</span><span class="p">.</span><span class="nx">capacity</span> <span class="o">+=</span> <span class="nx">l</span><span class="p">.</span><span class="nx">available</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">n</span> <span class="o">*</span><span class="nx">node</span><span class="p">)</span> <span class="nx">sendOneLog</span><span class="p">()</span> <span class="p">[]</span><span class="nx">nodelabel</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">n</span><span class="p">.</span><span class="nx">isFinal</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">singlePath</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">([]</span><span class="nx">nodelabel</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>      <span class="nx">singlePath</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="p">=</span> <span class="nx">n</span><span class="p">.</span><span class="nx">label</span>
</span><span class='line'>      <span class="k">return</span> <span class="nx">singlePath</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// Pick shortest path</span>
</span><span class='line'>  <span class="nx">minHops</span> <span class="o">:=</span> <span class="o">-</span><span class="mi">1</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">nextLink</span> <span class="o">*</span><span class="nx">link</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="nb">len</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">links</span><span class="p">);</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">l</span> <span class="o">:=</span> <span class="o">&amp;</span><span class="nx">n</span><span class="p">.</span><span class="nx">links</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">!</span><span class="nx">l</span><span class="p">.</span><span class="nx">next</span><span class="p">.</span><span class="nx">isFinal</span> <span class="o">&amp;&amp;</span> <span class="nx">l</span><span class="p">.</span><span class="nx">next</span><span class="p">.</span><span class="nx">capacity</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">continue</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">minHops</span> <span class="p">&lt;</span> <span class="mi">0</span> <span class="o">||</span> <span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">available</span> <span class="p">&gt;</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="nx">l</span><span class="p">.</span><span class="nx">next</span><span class="p">.</span><span class="nx">hops</span> <span class="p">&lt;</span> <span class="nx">minHops</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">minHops</span> <span class="p">=</span> <span class="nx">l</span><span class="p">.</span><span class="nx">next</span><span class="p">.</span><span class="nx">hops</span>
</span><span class='line'>          <span class="nx">nextLink</span> <span class="p">=</span> <span class="nx">l</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">path</span> <span class="o">:=</span> <span class="nx">nextLink</span><span class="p">.</span><span class="nx">next</span><span class="p">.</span><span class="nx">sendOneLog</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// Update current node and link</span>
</span><span class='line'>  <span class="nx">n</span><span class="p">.</span><span class="nx">capacity</span><span class="o">--</span>
</span><span class='line'>  <span class="nx">nextLink</span><span class="p">.</span><span class="nx">available</span><span class="o">--</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// TODO: avoid making a copy here (!)</span>
</span><span class='line'>  <span class="nx">newPath</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">([]</span><span class="nx">nodelabel</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="nx">path</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">copy</span><span class="p">(</span><span class="nx">newPath</span><span class="p">,</span> <span class="nx">path</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">newPath</span><span class="p">[</span><span class="nb">len</span><span class="p">(</span><span class="nx">path</span><span class="p">)]</span> <span class="p">=</span> <span class="nx">n</span><span class="p">.</span><span class="nx">label</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">newPath</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">nodes</span> <span class="nx">nodeset</span><span class="p">)</span> <span class="nx">getNode</span><span class="p">(</span><span class="nx">r</span> <span class="nx">nodelabel</span><span class="p">)</span> <span class="o">*</span><span class="nx">node</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">n</span><span class="p">,</span> <span class="nx">ok</span> <span class="o">:=</span> <span class="nx">nodes</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">!</span><span class="nx">ok</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">n</span> <span class="p">=</span> <span class="o">&amp;</span><span class="nx">node</span><span class="p">{</span><span class="nx">label</span><span class="p">:</span> <span class="nx">r</span><span class="p">,</span> <span class="nx">isFinal</span><span class="p">:</span> <span class="kc">false</span><span class="p">}</span>
</span><span class='line'>      <span class="nx">nodes</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span> <span class="p">=</span> <span class="nx">n</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">n</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">n</span> <span class="o">*</span><span class="nx">node</span><span class="p">)</span> <span class="nx">computeHops</span><span class="p">(</span><span class="nx">finish</span> <span class="nx">nodelabel</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">n</span><span class="p">.</span><span class="nx">hops</span> <span class="o">&gt;=</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">n</span><span class="p">.</span><span class="nx">label</span> <span class="o">==</span> <span class="nx">finish</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">n</span><span class="p">.</span><span class="nx">hops</span> <span class="p">=</span> <span class="mi">0</span>
</span><span class='line'>      <span class="nx">n</span><span class="p">.</span><span class="nx">isFinal</span> <span class="p">=</span> <span class="kc">true</span>
</span><span class='line'>      <span class="k">return</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">minHops</span> <span class="o">:=</span> <span class="o">-</span><span class="mi">1</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">l</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">n</span><span class="p">.</span><span class="nx">links</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">l</span><span class="p">.</span><span class="nx">next</span><span class="p">.</span><span class="nx">computeHops</span><span class="p">(</span><span class="nx">finish</span><span class="p">)</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">l</span><span class="p">.</span><span class="nx">available</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">continue</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">minHops</span> <span class="p">&lt;</span> <span class="mi">0</span> <span class="o">||</span>
</span><span class='line'>          <span class="nx">l</span><span class="p">.</span><span class="nx">next</span><span class="p">.</span><span class="nx">hops</span> <span class="p">&lt;</span> <span class="nx">minHops</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">minHops</span> <span class="p">=</span> <span class="nx">l</span><span class="p">.</span><span class="nx">next</span><span class="p">.</span><span class="nx">hops</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">n</span><span class="p">.</span><span class="nx">hops</span> <span class="p">=</span> <span class="nx">minHops</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>It was easy to read in a formatted text file, so I did that instead of storing the specified routes and weights as a data literal. Here is the input:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># Format:</span>
</span><span class='line'><span class="c"># Number of nodes on the first line</span>
</span><span class='line'><span class="c"># Each subsequent line contains</span>
</span><span class='line'><span class="c"># &lt;start node&gt; &lt;end node&gt; capacity</span>
</span><span class='line'><span class="c"># Nodes are labelled starting with &#39;A&#39;</span>
</span><span class='line'>9
</span><span class='line'>A B 6
</span><span class='line'>A C 2
</span><span class='line'>B E 3
</span><span class='line'>B D 3
</span><span class='line'>D C 2
</span><span class='line'>D F 1
</span><span class='line'>C G 5
</span><span class='line'>E H 1
</span><span class='line'>E I 2
</span><span class='line'>F H 1
</span><span class='line'>G H 2
</span><span class='line'>G I 2
</span><span class='line'>H I 4
</span></code></pre></td></tr></table></div></figure>


<p>And here is how the program runs:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>cat /tmp/logroutes  <span class="p">|</span> go run src/reddit-prog/log-routes.go
</span><span class='line'>
</span><span class='line'>Log <span class="c">#1 takes A -&gt; B -&gt; E -&gt; I -- path of 4</span>
</span><span class='line'>Log <span class="c">#2 takes A -&gt; B -&gt; E -&gt; I -- path of 4</span>
</span><span class='line'>Log <span class="c">#3 takes A -&gt; C -&gt; G -&gt; I -- path of 4</span>
</span><span class='line'>Log <span class="c">#4 takes A -&gt; C -&gt; G -&gt; I -- path of 4</span>
</span><span class='line'>Log <span class="c">#5 takes A -&gt; B -&gt; E -&gt; H -&gt; I -- path of 5</span>
</span><span class='line'>Log <span class="c">#6 takes A -&gt; B -&gt; D -&gt; F -&gt; H -&gt; I -- path of 6</span>
</span><span class='line'>Log <span class="c">#7 takes A -&gt; B -&gt; D -&gt; C -&gt; G -&gt; H -&gt; I -- path of 7</span>
</span><span class='line'>Log <span class="c">#8 takes A -&gt; B -&gt; D -&gt; C -&gt; G -&gt; H -&gt; I -- path of 7</span>
</span><span class='line'>River is now full. We could send <span class="m">8</span> logs.
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Status Update, just before Christmas]]></title>
    <link href="http://agam.github.io/blog/2014/12/23/status-update/"/>
    <updated>2014-12-23T23:58:46+00:00</updated>
    <id>http://agam.github.io/blog/2014/12/23/status-update</id>
    <content type="html"><![CDATA[<p>Since the FreeBSD experiment didn&rsquo;t work out<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>, I picked a different one: &ldquo;plain old&rdquo; Debian<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>! (should be <em>acronymized</em> to POD).</p>

<p>I read an old piece of evangelism<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup> which gave me the idea to version-control <code>/etc</code>, though I have sinced found <code>etckeeper</code> to do the same<sup id="fnref:4"><a href="#fn:4" rel="footnote">4</a></sup></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo apt-get install etckeeper
</span><span class='line'>
</span><span class='line'><span class="c"># Modify VCS to `git` (not necessary on Debian, AFAICS)</span>
</span><span class='line'><span class="nv">$ </span>sudo vi /etc/etckeeper/etckeeper.conf
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /etc
</span><span class='line'><span class="nv">$ </span>sudo git log
</span><span class='line'><span class="c"># Should show &quot;...blah blah blah ... Initial Commit&quot;</span>
</span><span class='line'><span class="c"># On Ubuntu, might need to explicitly run `sudo git commit -a -m &#39;Initial commit`</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Fully integrated with APT</span>
</span><span class='line'><span class="nv">$ </span>sudo git log
</span><span class='line'><span class="c"># will show something like &quot;... committing changes in /etc after apt run ...&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Other than that, not much else. Busy with a new baby daughter (!)<sup id="fnref:5"><a href="#fn:5" rel="footnote">5</a></sup>, trying to read less &ldquo;news and blogs&rdquo;<sup id="fnref:6"><a href="#fn:6" rel="footnote">6</a></sup>, pretending to read a book on NLP<sup id="fnref:7"><a href="#fn:7" rel="footnote">7</a></sup>, and having a &ldquo;brand new linux box&rdquo; experience with a VM in Google Cloud.</p>

<p>Have a happy new year, everyone.</p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p><a href="http://agam.github.io/blog/2014/12/14/trying-out-freebsd-and-failing-at-it/">http://agam.github.io/blog/2014/12/14/trying-out-freebsd-and-failing-at-it/</a><a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
<li id="fn:2">
<p><a href="https://www.debian.org/">https://www.debian.org/</a><a href="#fnref:2" rev="footnote">&#8617;</a></p></li>
<li id="fn:3">
<p><a href="https://wiki.debian.org/WhyDebian">https://wiki.debian.org/WhyDebian</a><a href="#fnref:3" rev="footnote">&#8617;</a></p></li>
<li id="fn:4">
<p><a href="https://gist.github.com/agam/2cda8597966f49a04e07">https://gist.github.com/agam/2cda8597966f49a04e07</a><a href="#fnref:4" rev="footnote">&#8617;</a></p></li>
<li id="fn:5">
<p><a href="https://plus.google.com/108609219349604504501/posts/1CVG1iFTtXe">https://plus.google.com/108609219349604504501/posts/1CVG1iFTtXe</a><a href="#fnref:5" rev="footnote">&#8617;</a></p></li>
<li id="fn:6">
<p><a href="http://www.theguardian.com/media/2013/apr/12/news-is-bad-rolf-dobelli">http://www.theguardian.com/media/2013/apr/12/news-is-bad-rolf-dobelli</a><a href="#fnref:6" rev="footnote">&#8617;</a></p></li>
<li id="fn:7">
<p><a href="http://nlp.stanford.edu/fsnlp/">http://nlp.stanford.edu/fsnlp/</a><a href="#fnref:7" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Google cloud: sharing projects]]></title>
    <link href="http://agam.github.io/blog/2014/12/23/google-cloud-sharing-projects/"/>
    <updated>2014-12-23T22:44:16+00:00</updated>
    <id>http://agam.github.io/blog/2014/12/23/google-cloud-sharing-projects</id>
    <content type="html"><![CDATA[<p>In the past (and yes, for some things, in the present too<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>) a few Google products have had UI with ambiguous workflows, or where it wasn&rsquo;t clear if or how to accomplish something.</p>

<p>So check this out; I found it <em>magical</em><sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>, you can easily try this with multiple Google accounts. In the cloud console<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup>, click on your project, then &ldquo;Permissions&rdquo; in the top left, and &ldquo;Add Member&rdquo;.</p>

<p>Enter the account, and then select the &ldquo;sharing level&rdquo; of the new account (with the <em>same</em> semantics as, say, Google Docs &mdash; you either <em>own</em>, <em>edit</em>, or <em>view</em>) and confirm.</p>

<p>Log in from the other account, go to the project, view a VM, click &ldquo;SSH&rdquo; and <em>Boom</em>, just like that, <strong>everything works</strong>!</p>

<p>This gist<sup id="fnref:4"><a href="#fn:4" rel="footnote">4</a></sup> shows all the steps that were needed!</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># Download the command-line utilities</span>
</span><span class='line'><span class="nv">$ </span>curl https://sdk.cloud.google.com <span class="p">|</span> bash
</span><span class='line'>
</span><span class='line'><span class="c">## Authenticate</span>
</span><span class='line'><span class="nv">$ </span>gcloud auth login
</span><span class='line'>
</span><span class='line'><span class="c">## Sanity check</span>
</span><span class='line'><span class="nv">$ </span>gcloud info
</span><span class='line'>
</span><span class='line'><span class="c">## One-time configuration to avoid specifying command-line flags</span>
</span><span class='line'><span class="nv">$ </span>gcloud config <span class="nb">set </span>project <span class="s2">&quot;&lt;project_id&gt;&quot;</span>
</span><span class='line'><span class="nv">$ </span>gcloud config <span class="nb">set </span>compute/zone us-central1-a
</span><span class='line'>
</span><span class='line'><span class="c">## Login!</span>
</span><span class='line'><span class="nv">$ </span>gcloud compute ssh agam@myvm
</span></code></pre></td></tr></table></div></figure>



<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>No comment<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
<li id="fn:2">
<p>Ok, maybe everyone expects this and everything else works this well too, but it&rsquo;s still <em>wow</em><a href="#fnref:2" rev="footnote">&#8617;</a></p></li>
<li id="fn:3">
<p><a href="https://console.developers.google.com/">https://console.developers.google.com/</a><a href="#fnref:3" rev="footnote">&#8617;</a></p></li>
<li id="fn:4">
<p><a href="https://gist.github.com/agam/9f3207a7cdcd72745748">https://gist.github.com/agam/9f3207a7cdcd72745748</a><a href="#fnref:4" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DailyProgrammer: Stacking Sticks]]></title>
    <link href="http://agam.github.io/blog/2014/12/21/dailyprogrammer-stacking-sticks/"/>
    <updated>2014-12-21T20:15:51+00:00</updated>
    <id>http://agam.github.io/blog/2014/12/21/dailyprogrammer-stacking-sticks</id>
    <content type="html"><![CDATA[<p>Some of the most interesting (and frustrating!) problems are the ones which are <em>obvious</em> to you as a human being but quite <em>unobvious</em> how to put into code.</p>

<p><a href="http://www.reddit.com/r/dailyprogrammer/comments/2oe0px/2014125_challenge_191_hard_tricky_stick_stacking/">This one</a> from <code>r/dailyprogrammer</code> is one of those. Given &ldquo;sticks&rdquo; on a plane, how do you order them so that they can be slid across one axis without touching each other (assuming the sticks don&rsquo;t cross each other to begin with) ?</p>

<p>In this case that axis is the &ldquo;positive-Y&rdquo;, and it should be possible to come up with a simpler answer (since this is sort of a 2-D depth buffer), but for now this is my messy answer:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;math&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">Stick</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">id</span>             <span class="kt">int</span>
</span><span class='line'>  <span class="nx">x1</span><span class="p">,</span> <span class="nx">y1</span><span class="p">,</span> <span class="nx">x2</span><span class="p">,</span> <span class="nx">y2</span> <span class="kt">float64</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">CompareResult</span> <span class="kt">int</span>
</span><span class='line'>
</span><span class='line'><span class="kd">const</span> <span class="p">(</span>
</span><span class='line'>  <span class="nx">LessThan</span> <span class="nx">CompareResult</span> <span class="p">=</span> <span class="kc">iota</span>
</span><span class='line'>  <span class="nx">EqualTo</span>
</span><span class='line'>  <span class="nx">GreaterThan</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">Sticks</span> <span class="p">[]</span><span class="nx">Stick</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">s1</span> <span class="nx">Stick</span><span class="p">)</span> <span class="nx">Compare</span><span class="p">(</span><span class="nx">s2</span> <span class="nx">Stick</span><span class="p">)</span> <span class="nx">CompareResult</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">maxY1</span> <span class="o">:=</span> <span class="nx">math</span><span class="p">.</span><span class="nx">Max</span><span class="p">(</span><span class="nx">s1</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span> <span class="nx">s1</span><span class="p">.</span><span class="nx">y2</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">minY1</span> <span class="o">:=</span> <span class="nx">math</span><span class="p">.</span><span class="nx">Min</span><span class="p">(</span><span class="nx">s1</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span> <span class="nx">s1</span><span class="p">.</span><span class="nx">y2</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">maxY2</span> <span class="o">:=</span> <span class="nx">math</span><span class="p">.</span><span class="nx">Max</span><span class="p">(</span><span class="nx">s2</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span> <span class="nx">s2</span><span class="p">.</span><span class="nx">y2</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">minY2</span> <span class="o">:=</span> <span class="nx">math</span><span class="p">.</span><span class="nx">Min</span><span class="p">(</span><span class="nx">s2</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span> <span class="nx">s2</span><span class="p">.</span><span class="nx">y2</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="nx">minY2</span> <span class="p">&gt;</span> <span class="nx">maxY1</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="nx">LessThan</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">minY1</span> <span class="p">&gt;</span> <span class="nx">maxY2</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="nx">GreaterThan</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// Inconclusive, we need to consider the x-values too</span>
</span><span class='line'>  <span class="nx">maxX1</span> <span class="o">:=</span> <span class="nx">math</span><span class="p">.</span><span class="nx">Max</span><span class="p">(</span><span class="nx">s1</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span> <span class="nx">s1</span><span class="p">.</span><span class="nx">x2</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">minX1</span> <span class="o">:=</span> <span class="nx">math</span><span class="p">.</span><span class="nx">Min</span><span class="p">(</span><span class="nx">s1</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span> <span class="nx">s1</span><span class="p">.</span><span class="nx">x2</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">maxX2</span> <span class="o">:=</span> <span class="nx">math</span><span class="p">.</span><span class="nx">Max</span><span class="p">(</span><span class="nx">s2</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span> <span class="nx">s2</span><span class="p">.</span><span class="nx">x2</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">minX2</span> <span class="o">:=</span> <span class="nx">math</span><span class="p">.</span><span class="nx">Min</span><span class="p">(</span><span class="nx">s2</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span> <span class="nx">s2</span><span class="p">.</span><span class="nx">x2</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// The equality case : the lines should be &quot;exclusive&quot;</span>
</span><span class='line'>  <span class="c1">// (otherwise, it means they are crossing!).</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">minX1</span> <span class="p">&gt;</span> <span class="nx">maxX2</span> <span class="o">||</span> <span class="nx">minX2</span> <span class="p">&gt;</span> <span class="nx">maxX1</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="nx">EqualTo</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// Alright, there is clearly overlap, so we look at a bunch of</span>
</span><span class='line'>  <span class="c1">// cases.</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// First, is one line wholly contained within the other? If</span>
</span><span class='line'>  <span class="c1">// yes, we only need to check one point; the &quot;non-crossing&quot;</span>
</span><span class='line'>  <span class="c1">// condition takes care of it being true for all points.</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">maxX1</span> <span class="p">&gt;</span> <span class="nx">maxX2</span> <span class="o">&amp;&amp;</span> <span class="nx">minX1</span> <span class="p">&lt;</span> <span class="nx">minX2</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">s2</span><span class="p">.</span><span class="nx">getY</span><span class="p">(</span><span class="nx">minX2</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="nx">s1</span><span class="p">.</span><span class="nx">getY</span><span class="p">(</span><span class="nx">minX2</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="nx">LessThan</span>
</span><span class='line'>      <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="nx">GreaterThan</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">maxX1</span> <span class="p">&lt;</span> <span class="nx">maxX2</span> <span class="o">&amp;&amp;</span> <span class="nx">minX1</span> <span class="p">&gt;</span> <span class="nx">minX2</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">s2</span><span class="p">.</span><span class="nx">getY</span><span class="p">(</span><span class="nx">minX1</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="nx">s1</span><span class="p">.</span><span class="nx">getY</span><span class="p">(</span><span class="nx">minX1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="nx">LessThan</span>
</span><span class='line'>      <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="nx">GreaterThan</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// Lines partially overlap; so there are two cases to consider</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">maxX1</span> <span class="o">&gt;=</span> <span class="nx">minX2</span> <span class="o">&amp;&amp;</span> <span class="nx">minX2</span> <span class="o">&gt;=</span> <span class="nx">minX1</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">// The &quot;left&quot; portion of s2 overlaps the &quot;right&quot; portion of s1</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">s2</span><span class="p">.</span><span class="nx">getY</span><span class="p">(</span><span class="nx">minX2</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="nx">s1</span><span class="p">.</span><span class="nx">getY</span><span class="p">(</span><span class="nx">minX2</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="nx">LessThan</span>
</span><span class='line'>      <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="nx">GreaterThan</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">maxX2</span> <span class="o">&gt;=</span> <span class="nx">minX1</span> <span class="o">&amp;&amp;</span> <span class="nx">maxX1</span> <span class="o">&gt;=</span> <span class="nx">maxX2</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">// vice-versa</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">s2</span><span class="p">.</span><span class="nx">getY</span><span class="p">(</span><span class="nx">maxX2</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="nx">s1</span><span class="p">.</span><span class="nx">getY</span><span class="p">(</span><span class="nx">maxX2</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="nx">LessThan</span>
</span><span class='line'>      <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="nx">GreaterThan</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// We should have handled all the cases!</span>
</span><span class='line'>  <span class="nb">panic</span><span class="p">(</span><span class="s">&quot;Wtf!!&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">s</span> <span class="nx">Stick</span><span class="p">)</span> <span class="nx">getY</span><span class="p">(</span><span class="nx">x</span> <span class="kt">float64</span><span class="p">)</span> <span class="kt">float64</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// Special case for vertical line</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">s</span><span class="p">.</span><span class="nx">x1</span> <span class="o">==</span> <span class="nx">s</span><span class="p">.</span><span class="nx">x2</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">x</span> <span class="o">==</span> <span class="nx">s</span><span class="p">.</span><span class="nx">x1</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="nx">s</span><span class="p">.</span><span class="nx">y1</span>
</span><span class='line'>      <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>          <span class="nb">panic</span><span class="p">(</span><span class="nx">fmt</span><span class="p">.</span><span class="nx">Sprintf</span><span class="p">(</span><span class="s">&quot;Incorrect x = %f for stick %+v&quot;</span><span class="p">,</span> <span class="nx">x</span><span class="p">,</span> <span class="nx">s</span><span class="p">))</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="c1">// For all other cases, use the slope of the line</span>
</span><span class='line'>  <span class="nx">slope</span> <span class="o">:=</span> <span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">y2</span> <span class="o">-</span> <span class="nx">s</span><span class="p">.</span><span class="nx">y1</span><span class="p">)</span> <span class="o">/</span> <span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">x2</span> <span class="o">-</span> <span class="nx">s</span><span class="p">.</span><span class="nx">x1</span><span class="p">)</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">s</span><span class="p">.</span><span class="nx">y1</span> <span class="o">+</span> <span class="p">(</span><span class="nx">slope</span> <span class="o">*</span> <span class="p">(</span><span class="nx">x</span> <span class="o">-</span> <span class="nx">s</span><span class="p">.</span><span class="nx">x1</span><span class="p">))</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">ss</span> <span class="nx">Sticks</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">numSticks</span> <span class="kt">int</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Scanln</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">numSticks</span><span class="p">)</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="nx">numSticks</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">id</span> <span class="kt">int</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">x1</span><span class="p">,</span> <span class="nx">y1</span><span class="p">,</span> <span class="nx">x2</span><span class="p">,</span> <span class="nx">y2</span> <span class="kt">float64</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Scanf</span><span class="p">(</span><span class="s">&quot;%d:%f,%f,%f,%f\n&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="o">&amp;</span><span class="nx">id</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">x1</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">y1</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">x2</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">y2</span><span class="p">)</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">i</span> <span class="o">!=</span> <span class="nx">id</span><span class="o">-</span><span class="mi">1</span> <span class="p">{</span>
</span><span class='line'>          <span class="nb">panic</span><span class="p">(</span><span class="s">&quot;WTF&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="nx">s</span> <span class="o">:=</span> <span class="nx">Stick</span><span class="p">{</span><span class="nx">id</span><span class="p">,</span> <span class="nx">x1</span><span class="p">,</span> <span class="nx">y1</span><span class="p">,</span> <span class="nx">x2</span><span class="p">,</span> <span class="nx">y2</span><span class="p">}</span>
</span><span class='line'>      <span class="nx">ss</span> <span class="p">=</span> <span class="nb">append</span><span class="p">(</span><span class="nx">ss</span><span class="p">,</span> <span class="nx">s</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">ss</span><span class="p">.</span><span class="nx">TotalSort</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Here is the computed stick order :-\n&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">PrintSticks</span><span class="p">(</span><span class="nx">ss</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">PrintSticks</span><span class="p">(</span><span class="nx">ss</span> <span class="nx">Sticks</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">i</span><span class="p">,</span> <span class="nx">s</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">ss</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">i</span> <span class="o">==</span> <span class="nb">len</span><span class="p">(</span><span class="nx">ss</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">id</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;%d, &quot;</span><span class="p">,</span> <span class="nx">s</span><span class="p">.</span><span class="nx">id</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">ss</span> <span class="o">*</span><span class="nx">Sticks</span><span class="p">)</span> <span class="nx">TotalSort</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="nb">len</span><span class="p">(</span><span class="o">*</span><span class="nx">ss</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">max</span> <span class="o">:=</span> <span class="nx">i</span>
</span><span class='line'>      <span class="k">for</span> <span class="nx">j</span> <span class="o">:=</span> <span class="nx">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span> <span class="nx">j</span> <span class="p">&lt;</span> <span class="nb">len</span><span class="p">(</span><span class="o">*</span><span class="nx">ss</span><span class="p">);</span> <span class="nx">j</span><span class="o">++</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="o">*</span><span class="nx">ss</span><span class="p">)[</span><span class="nx">max</span><span class="p">].</span><span class="nx">Compare</span><span class="p">((</span><span class="o">*</span><span class="nx">ss</span><span class="p">)[</span><span class="nx">j</span><span class="p">])</span> <span class="o">==</span> <span class="nx">LessThan</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">max</span> <span class="p">=</span> <span class="nx">j</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">max</span> <span class="o">!=</span> <span class="nx">i</span> <span class="p">{</span>
</span><span class='line'>          <span class="p">(</span><span class="o">*</span><span class="nx">ss</span><span class="p">)[</span><span class="nx">i</span><span class="p">],</span> <span class="p">(</span><span class="o">*</span><span class="nx">ss</span><span class="p">)[</span><span class="nx">max</span><span class="p">]</span> <span class="p">=</span> <span class="p">(</span><span class="o">*</span><span class="nx">ss</span><span class="p">)[</span><span class="nx">max</span><span class="p">],</span> <span class="p">(</span><span class="o">*</span><span class="nx">ss</span><span class="p">)[</span><span class="nx">i</span><span class="p">]</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>It runs as follows:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>cat sample-input2
</span><span class='line'>5
</span><span class='line'>1:3,3,8,1
</span><span class='line'>2:11,2,15,2
</span><span class='line'>3:6,3,12,4
</span><span class='line'>4:10,5,10,10
</span><span class='line'>5:9,11,18,12
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>cat sample-input2 <span class="p">|</span> go run sticks.go
</span><span class='line'>Here is the computed stick order :-
</span><span class='line'>
</span><span class='line'>5, 4, 3, 2, 1
</span></code></pre></td></tr></table></div></figure>


<p>Most of the &ldquo;action&rdquo; is in the <code>Compare()</code> function, but I also like how it&rsquo;s possible to define arbitrary &ldquo;receivers&rdquo; for functions in Go (e.g. used for <code>getY()</code> above)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Logic through Haskell? Not necessarily ...]]></title>
    <link href="http://agam.github.io/blog/2014/12/19/logic-through-haskell-not-necessarily-dot-dot-dot/"/>
    <updated>2014-12-19T01:20:58+00:00</updated>
    <id>http://agam.github.io/blog/2014/12/19/logic-through-haskell-not-necessarily-dot-dot-dot</id>
    <content type="html"><![CDATA[<p>Finished reading (browsing, really, after the first few chapters) through The Haskell Road to Logic, Maths and Programming<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>, and I am &hellip; <em>underwhelmed</em>. I mean the book was great and all, but maybe I made the mistake of forming some unreasonable expectations.</p>

<p>If you&rsquo;re already familiar with a bit of Haskell and basic logic/sets/numbers, you&rsquo;ll get the most <em>bang for your buck</em> from Chapter 10 on <em>Corecursion</em><sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>. This was &ldquo;brand new&rdquo; for me and I had multiple &ldquo;aha&rdquo; moments after seeing the mechanism used to reason about non-deterministic processes etc.</p>

<p><strong>Conclusions</strong>:</p>

<ul>
<li>More than Haskell, this motivated me to learn more math (though I don&rsquo;t know <em>where to start</em>!)</li>
<li>I feel like Mathematica could be used too, for everything in this book; for stuff like this it&rsquo;s like Haskell <em>plus lots of libraries and visualization</em></li>
</ul>

<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p><a href="http://www.amazon.com/Haskell-Programming-Second-Edition-Computing/dp/0954300696">via Amazon</a><a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
<li id="fn:2">
<p><a href="http://en.wikipedia.org/wiki/Corecursion">via Wikipedia</a><a href="#fnref:2" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[IO Performance (is that really an SSD?)]]></title>
    <link href="http://agam.github.io/blog/2014/12/18/io-performance-is-that-really-an-ssd/"/>
    <updated>2014-12-18T04:25:20+00:00</updated>
    <id>http://agam.github.io/blog/2014/12/18/io-performance-is-that-really-an-ssd</id>
    <content type="html"><![CDATA[<p>I created a new VM in Google Compute Engine a few days ago, and assigned it an SSD disk, and then began wondering <em>if it was really an SSD disk</em>.</p>

<p>(<em>Digression</em>: I never appreciated the difference an SSD makes until the first time a Macbook Air awoke from sleep <em>instantly</em>. From that moment onwards, the time taken for my desktop at home to show its login screen has <em>always</em> felt irritatingly long)</p>

<p>So, this is a crude benchmark of a &ldquo;regular&rdquo; hard drive on my workstation:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo hdparm -tT /dev/sda1
</span><span class='line'>
</span><span class='line'>/dev/sda1:
</span><span class='line'> Timing cached reads:   <span class="m">20772</span> MB in  2.00 <span class="nv">seconds</span> <span class="o">=</span> 10403.36 MB/sec
</span><span class='line'> Timing buffered disk reads: <span class="m">242</span> MB in  1.34 <span class="nv">seconds</span> <span class="o">=</span> 180.53 MB/sec
</span></code></pre></td></tr></table></div></figure>


<p>By the way, the &ldquo;fresh&rdquo; disk division for a new VM looks something like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>df -h
</span><span class='line'>Filesystem                                              Size  Used Avail Use% Mounted on
</span><span class='line'>rootfs                                                  9.9G  734M  8.7G   8% /
</span><span class='line'>udev                                                     10M     <span class="m">0</span>   10M   0% /dev
</span><span class='line'>tmpfs                                                   3.0G  104K  3.0G   1% /run
</span><span class='line'>/dev/disk/by-uuid/foo  9.9G  734M  8.7G   8% /
</span><span class='line'>tmpfs                                                   5.0M     <span class="m">0</span>  5.0M   0% /run/lock
</span><span class='line'>tmpfs                                                   6.0G     <span class="m">0</span>  6.0G   0% /run/shm
</span></code></pre></td></tr></table></div></figure>


<p><code>foo</code> above is really a long uuid, which I subsituted to avoid repeating. This is the output from <code>hdparm</code>, run within my VM:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>agam@myvm:~<span class="nv">$ </span>sudo hdparm -tT /dev/disk/by-uuid/foo
</span><span class='line'>/dev/disk/by-uuid/foo:
</span><span class='line'> Timing cached reads:   <span class="m">16996</span> MB in  2.00 <span class="nv">seconds</span> <span class="o">=</span> 8506.48 MB/sec
</span><span class='line'> Timing buffered disk reads: <span class="m">310</span> MB in  3.02 <span class="nv">seconds</span> <span class="o">=</span> 102.65 MB/sec
</span></code></pre></td></tr></table></div></figure>


<p>So that&rsquo;s &hellip; <em>confusing</em>. The two seem pretty close (and the SSD seems slower!) Obviously, we&rsquo;re looking at the wrong metric. The big distinguishing factor for these two types of storage is <em>seek time</em>. So instead of <code>hdparm</code>, let&rsquo;s try <code>ioping</code> instead.</p>

<p>Here&rsquo;s the workstation with the hard drive first (run twice, first random then sequential):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo ioping -R /dev/sda1
</span><span class='line'>
</span><span class='line'>--- /dev/sda1 <span class="o">(</span>device 243.0 MiB<span class="o">)</span> ioping statistics ---
</span><span class='line'><span class="m">450</span> requests completed in 3.0 s, <span class="m">150</span> iops, 600.3 KiB/s
</span><span class='line'>min/avg/max/mdev <span class="o">=</span> <span class="m">54</span> us / 6.7 ms / 74.1 ms / 6.5 ms
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>sudo ioping -RL /dev/sda1
</span><span class='line'>
</span><span class='line'>--- /dev/sda1 <span class="o">(</span>device 243.0 MiB<span class="o">)</span> ioping statistics ---
</span><span class='line'>1.8 k requests completed in 3.0 s, <span class="m">600</span> iops, 150.1 MiB/s
</span><span class='line'>min/avg/max/mdev <span class="o">=</span> <span class="m">648</span> us / 1.7 ms / 152.2 ms / 5.2 ms
</span></code></pre></td></tr></table></div></figure>


<p>And now &hellip; here&rsquo;s the VM with the SSD:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>agam@myvm:~<span class="nv">$ </span>sudo ioping -R /dev/disk/by-uuid/foo
</span><span class='line'>--- /dev/disk/by-uuid/foo <span class="o">(</span>device 10.0 Gb<span class="o">)</span> ioping statistics ---
</span><span class='line'><span class="m">9020</span> requests completed in 3000.1 ms, <span class="m">5016</span> iops, 19.6 mb/s
</span><span class='line'>min/avg/max/mdev <span class="o">=</span> 0.0/0.2/6.0/0.4 ms
</span><span class='line'>
</span><span class='line'>agam@myvm:~<span class="nv">$ </span>sudo ioping -RL /dev/disk/by-uuid/foo
</span><span class='line'>--- /dev/disk/by-uuid/foo <span class="o">(</span>device 10.0 Gb<span class="o">)</span> ioping statistics ---
</span><span class='line'><span class="m">1230</span> requests completed in 3002.0 ms, <span class="m">439</span> iops, 109.6 mb/s
</span><span class='line'>min/avg/max/mdev <span class="o">=</span> 0.2/2.3/8.2/0.6 ms
</span></code></pre></td></tr></table></div></figure>


<p><em>Here</em> is where you see a big difference &hellip; a smaller one for the sequential case, but a huge one for the random case (at least an order of magnitude more).</p>

<p>So yeah, the SSD is legit.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DailyProgrammer: Textual Cycles]]></title>
    <link href="http://agam.github.io/blog/2014/12/18/dailyprogrammer-textual-cycles/"/>
    <updated>2014-12-18T04:17:28+00:00</updated>
    <id>http://agam.github.io/blog/2014/12/18/dailyprogrammer-textual-cycles</id>
    <content type="html"><![CDATA[<p><a href="http://www.reddit.com/r/dailyprogrammer/comments/2m82yz/20141114_challenge_188_hard_arrows_and_arrows/">Another one</a> from <a href="http://www.reddit.com/r/dailyprogrammer">r/dailyprogrammer</a>. This one involves text with &ldquo;arrows&rdquo;, but as the &ldquo;hint&rdquo; at the end says, it&rsquo;s really equivalent to finding cycles in a directed graph (it would be harder if there were multiple edges going out of each node, but that isn&rsquo;t the case here!)</p>

<p>Here&rsquo;s my code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">Node</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">val</span>     <span class="kt">uint8</span>
</span><span class='line'>  <span class="nx">next</span>    <span class="o">*</span><span class="nx">Node</span>
</span><span class='line'>  <span class="nx">visited</span> <span class="kt">bool</span>
</span><span class='line'>  <span class="nx">cycle</span>   <span class="kt">int</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">height</span><span class="p">,</span> <span class="nx">width</span> <span class="kt">int</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Scanln</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">width</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">height</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">grid</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">([]</span><span class="nx">Node</span><span class="p">,</span> <span class="nx">height</span><span class="o">*</span><span class="nx">width</span><span class="p">)</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="nx">height</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">str</span> <span class="kt">string</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Scanln</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">str</span><span class="p">)</span>
</span><span class='line'>      <span class="k">for</span> <span class="nx">j</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">str</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">grid</span><span class="p">[</span><span class="nx">i</span><span class="o">*</span><span class="nx">width</span><span class="o">+</span><span class="nx">j</span><span class="p">]</span> <span class="p">=</span> <span class="nx">Node</span><span class="p">{</span><span class="nx">str</span><span class="p">[</span><span class="nx">j</span><span class="p">],</span> <span class="kc">nil</span><span class="p">,</span> <span class="kc">false</span><span class="p">,</span> <span class="mi">1</span><span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">CreateLinks</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">grid</span><span class="p">,</span> <span class="nx">height</span><span class="p">,</span> <span class="nx">width</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// Traverse graph; each node is visited at most once,</span>
</span><span class='line'>  <span class="c1">// so the algorithm is O(n^2)</span>
</span><span class='line'>  <span class="nx">longestCycle</span> <span class="o">:=</span> <span class="mi">0</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">rootx</span><span class="p">,</span> <span class="nx">rooty</span> <span class="kt">int</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="nx">height</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">for</span> <span class="nx">j</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">j</span> <span class="p">&lt;</span> <span class="nx">width</span><span class="p">;</span> <span class="nx">j</span><span class="o">++</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">curNode</span> <span class="o">:=</span> <span class="o">&amp;</span><span class="nx">grid</span><span class="p">[</span><span class="nx">i</span><span class="o">*</span><span class="nx">width</span><span class="o">+</span><span class="nx">j</span><span class="p">]</span>
</span><span class='line'>          <span class="k">if</span> <span class="nx">curNode</span><span class="p">.</span><span class="nx">visited</span> <span class="p">{</span>
</span><span class='line'>              <span class="k">continue</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>          <span class="nx">curCycleLength</span> <span class="o">:=</span> <span class="nx">TraverseNode</span><span class="p">(</span><span class="nx">curNode</span><span class="p">)</span>
</span><span class='line'>          <span class="k">if</span> <span class="nx">curCycleLength</span> <span class="p">&gt;</span> <span class="nx">longestCycle</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">rooty</span><span class="p">,</span> <span class="nx">rootx</span> <span class="p">=</span> <span class="nx">i</span><span class="p">,</span> <span class="nx">j</span>
</span><span class='line'>              <span class="nx">longestCycle</span> <span class="p">=</span> <span class="nx">curCycleLength</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;The largest cycle was found at (%d, %d) with a length of %d\n&quot;</span><span class="p">,</span> <span class="nx">rooty</span><span class="p">,</span> <span class="nx">rootx</span><span class="p">,</span> <span class="nx">grid</span><span class="p">[</span><span class="nx">rooty</span><span class="o">*</span><span class="nx">width</span><span class="o">+</span><span class="nx">rootx</span><span class="p">].</span><span class="nx">cycle</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">TraceCycle</span><span class="p">(</span><span class="nx">grid</span><span class="p">,</span> <span class="nx">height</span><span class="p">,</span> <span class="nx">width</span><span class="p">,</span> <span class="nx">rooty</span><span class="p">,</span> <span class="nx">rootx</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">TraverseNode</span><span class="p">(</span><span class="nx">node</span> <span class="o">*</span><span class="nx">Node</span><span class="p">)</span> <span class="kt">int</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// Recursively returns the length of the cycle found starting</span>
</span><span class='line'>  <span class="c1">// at the current node</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">node</span><span class="p">.</span><span class="nx">visited</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="nx">node</span><span class="p">.</span><span class="nx">cycle</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">node</span><span class="p">.</span><span class="nx">visited</span> <span class="p">=</span> <span class="kc">true</span>
</span><span class='line'>  <span class="nx">cycleLength</span> <span class="o">:=</span> <span class="mi">1</span> <span class="o">+</span> <span class="nx">TraverseNode</span><span class="p">(</span><span class="nx">node</span><span class="p">.</span><span class="nx">next</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">node</span><span class="p">.</span><span class="nx">cycle</span> <span class="p">=</span> <span class="nx">cycleLength</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">cycleLength</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">GetNextNode</span><span class="p">(</span><span class="nx">val</span> <span class="kt">uint8</span><span class="p">,</span> <span class="nx">i</span><span class="p">,</span> <span class="nx">j</span><span class="p">,</span> <span class="nx">h</span><span class="p">,</span> <span class="nx">w</span> <span class="kt">int</span><span class="p">)</span> <span class="p">(</span><span class="kt">int</span><span class="p">,</span> <span class="kt">int</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">switch</span> <span class="nx">val</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">case</span> <span class="sc">&#39;&lt;&#39;</span><span class="p">:</span>
</span><span class='line'>      <span class="k">return</span> <span class="nx">i</span><span class="p">,</span> <span class="p">(</span><span class="nx">j</span> <span class="o">+</span> <span class="nx">w</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="o">%</span> <span class="nx">w</span>
</span><span class='line'>  <span class="k">case</span> <span class="sc">&#39;&gt;&#39;</span><span class="p">:</span>
</span><span class='line'>      <span class="k">return</span> <span class="nx">i</span><span class="p">,</span> <span class="p">(</span><span class="nx">j</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">%</span> <span class="nx">w</span>
</span><span class='line'>  <span class="k">case</span> <span class="sc">&#39;^&#39;</span><span class="p">:</span>
</span><span class='line'>      <span class="k">return</span> <span class="p">(</span><span class="nx">i</span> <span class="o">+</span> <span class="nx">h</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="o">%</span> <span class="nx">h</span><span class="p">,</span> <span class="nx">j</span>
</span><span class='line'>  <span class="k">case</span> <span class="sc">&#39;v&#39;</span><span class="p">:</span>
</span><span class='line'>      <span class="k">return</span> <span class="p">(</span><span class="nx">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">%</span> <span class="nx">h</span><span class="p">,</span> <span class="nx">j</span>
</span><span class='line'>  <span class="k">default</span><span class="p">:</span>
</span><span class='line'>      <span class="nb">panic</span><span class="p">(</span><span class="s">&quot;wtf&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">CreateLinks</span><span class="p">(</span><span class="nx">grid</span> <span class="o">*</span><span class="p">[]</span><span class="nx">Node</span><span class="p">,</span> <span class="nx">height</span><span class="p">,</span> <span class="nx">width</span> <span class="kt">int</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">node</span> <span class="o">*</span><span class="nx">Node</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="nx">height</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">for</span> <span class="nx">j</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">j</span> <span class="p">&lt;</span> <span class="nx">width</span><span class="p">;</span> <span class="nx">j</span><span class="o">++</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">node</span> <span class="p">=</span> <span class="o">&amp;</span><span class="p">(</span><span class="o">*</span><span class="nx">grid</span><span class="p">)[</span><span class="nx">i</span><span class="o">*</span><span class="nx">width</span><span class="o">+</span><span class="nx">j</span><span class="p">]</span>
</span><span class='line'>          <span class="nx">nexti</span><span class="p">,</span> <span class="nx">nextj</span> <span class="o">:=</span> <span class="nx">GetNextNode</span><span class="p">(</span><span class="nx">node</span><span class="p">.</span><span class="nx">val</span><span class="p">,</span> <span class="nx">i</span><span class="p">,</span> <span class="nx">j</span><span class="p">,</span> <span class="nx">height</span><span class="p">,</span> <span class="nx">width</span><span class="p">)</span>
</span><span class='line'>          <span class="nx">node</span><span class="p">.</span><span class="nx">next</span> <span class="p">=</span> <span class="o">&amp;</span><span class="p">(</span><span class="o">*</span><span class="nx">grid</span><span class="p">)[</span><span class="nx">nexti</span><span class="o">*</span><span class="nx">width</span><span class="o">+</span><span class="nx">nextj</span><span class="p">]</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">TraceCycle</span><span class="p">(</span><span class="nx">grid</span> <span class="p">[]</span><span class="nx">Node</span><span class="p">,</span> <span class="nx">height</span><span class="p">,</span> <span class="nx">width</span><span class="p">,</span> <span class="nx">curY</span><span class="p">,</span> <span class="nx">curX</span> <span class="kt">int</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">tracedGrid</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">([]</span><span class="nx">Node</span><span class="p">,</span> <span class="nx">height</span><span class="o">*</span><span class="nx">width</span><span class="p">)</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="nx">height</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">for</span> <span class="nx">j</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">j</span> <span class="p">&lt;</span> <span class="nx">width</span><span class="p">;</span> <span class="nx">j</span><span class="o">++</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">tracedGrid</span><span class="p">[</span><span class="nx">i</span><span class="o">*</span><span class="nx">width</span><span class="o">+</span><span class="nx">j</span><span class="p">]</span> <span class="p">=</span> <span class="nx">Node</span><span class="p">{</span><span class="sc">&#39; &#39;</span><span class="p">,</span> <span class="kc">nil</span><span class="p">,</span> <span class="kc">false</span><span class="p">,</span> <span class="mi">1</span><span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">for</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">v</span> <span class="o">:=</span> <span class="nx">grid</span><span class="p">[</span><span class="nx">curY</span><span class="o">*</span><span class="nx">width</span><span class="o">+</span><span class="nx">curX</span><span class="p">].</span><span class="nx">val</span>
</span><span class='line'>      <span class="nx">tracedGrid</span><span class="p">[</span><span class="nx">curY</span><span class="o">*</span><span class="nx">width</span><span class="o">+</span><span class="nx">curX</span><span class="p">].</span><span class="nx">val</span> <span class="p">=</span> <span class="nx">v</span>
</span><span class='line'>      <span class="nx">tracedGrid</span><span class="p">[</span><span class="nx">curY</span><span class="o">*</span><span class="nx">width</span><span class="o">+</span><span class="nx">curX</span><span class="p">].</span><span class="nx">visited</span> <span class="p">=</span> <span class="kc">true</span>
</span><span class='line'>      <span class="nx">curY</span><span class="p">,</span> <span class="nx">curX</span> <span class="p">=</span> <span class="nx">GetNextNode</span><span class="p">(</span><span class="nx">v</span><span class="p">,</span> <span class="nx">curY</span><span class="p">,</span> <span class="nx">curX</span><span class="p">,</span> <span class="nx">height</span><span class="p">,</span> <span class="nx">width</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">if</span> <span class="nx">tracedGrid</span><span class="p">[</span><span class="nx">curY</span><span class="o">*</span><span class="nx">width</span><span class="o">+</span><span class="nx">curX</span><span class="p">].</span><span class="nx">visited</span> <span class="o">==</span> <span class="kc">true</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">break</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Here is the longest cycle :-\n&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="nx">height</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">for</span> <span class="nx">j</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">j</span> <span class="p">&lt;</span> <span class="nx">width</span><span class="p">;</span> <span class="nx">j</span><span class="o">++</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;%c&quot;</span><span class="p">,</span> <span class="nx">tracedGrid</span><span class="p">[</span><span class="nx">i</span><span class="o">*</span><span class="nx">width</span><span class="o">+</span><span class="nx">j</span><span class="p">].</span><span class="nx">val</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">()</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>It runs as follows:</p>

<p>(sample 1)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="err">$</span> <span class="nx">cat</span> <span class="nx">sample</span><span class="o">-</span><span class="nx">input1</span>
</span><span class='line'><span class="mi">5</span> <span class="mi">5</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;&gt;</span><span class="nx">v</span>
</span><span class='line'><span class="p">^</span><span class="nx">v</span><span class="o">&lt;&lt;</span><span class="nx">v</span>
</span><span class='line'><span class="p">^</span><span class="nx">vv</span><span class="p">^</span><span class="nx">v</span>
</span><span class='line'><span class="p">^</span><span class="o">&gt;&gt;</span><span class="nx">v</span><span class="p">&lt;</span>
</span><span class='line'><span class="p">^</span><span class="o">&lt;&lt;</span><span class="p">&lt;^</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>cat sample-input1 <span class="p">|</span> go run cycles.go
</span><span class='line'>The largest cycle was found at <span class="o">(</span>0, 0<span class="o">)</span> with a length of 16
</span><span class='line'>Here is the longest cycle :-
</span><span class='line'>
</span><span class='line'>&gt;&gt;&gt;&gt;v
</span><span class='line'>^   v
</span><span class='line'>^   v
</span><span class='line'>^  v&lt;
</span><span class='line'>^<span class="o">&lt;&lt;&lt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>(sample 2)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="m">45</span> 20
</span><span class='line'>^^v&gt;&gt;v^&gt;&gt;v<span class="o">&lt;&lt;&lt;</span>v&gt;v&lt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;^vvv^^vvvv&lt;v^^&gt;&lt;^^v&gt;
</span><span class='line'>&gt;&gt;&lt;&lt;&gt;vv&lt;&gt;<span class="o">&lt;&lt;&lt;</span>^&gt;&lt;^&lt;^v^^&lt;vv&gt;&gt;^v&lt;v^vv^^v&lt;&gt;&lt;^&gt;&gt;&lt;v&lt;
</span><span class='line'>vv&lt;^v&lt;v&lt;v&lt;vvv&gt;v&lt;v&lt;vv&lt;^&lt;v<span class="o">&lt;&lt;&lt;&lt;&lt;&lt;</span>&lt;&lt;^&lt;&gt;&lt;&gt;^&gt;&lt;^v&gt;&gt;&gt;
</span><span class='line'>&lt;v&lt;v^^&lt;v&lt;&gt;v&lt;&gt;v&lt;v&lt;^v^&gt;^&lt;^<span class="s">&lt;&lt;v&gt;^v</span>&gt;&lt;^v^&gt;&gt;^^^&lt;&gt;&lt;^v
</span><span class='line'>^&gt;&gt;&gt;^v^v^&lt;&gt;&gt;vvv&gt;v^^&lt;^<span class="o">&lt;&lt;&lt;</span>&gt;&lt;&gt;v&gt;&gt;^v&lt;^^&lt;&gt;v&gt;&gt;v&lt;v&gt;^
</span><span class='line'>^^^&lt;&lt;^&lt;^&gt;&gt;^v&gt;&gt;&gt;&gt;&gt;&lt;&gt;&gt;^v&lt;^^^&lt;^^v^v&lt;^&lt;v^&gt;&lt;&lt;^<span class="o">&lt;&lt;&lt;</span>&gt;
</span><span class='line'>v&lt;&gt;v^vv^v&lt;&gt;&lt;^&gt;v^vv&gt;^^v^&lt;&gt;v^^^&gt;^&gt;vv&lt;^<span class="s">&lt;&lt;v^&lt;&lt;&gt;^v</span>
</span><span class='line'><span class="o">&lt;&lt;&lt;</span>&lt;&lt;^&lt;vv&lt;^&gt;&lt;&gt;^^&gt;&gt;&gt;^^^^&lt;^&lt;^v^&gt;&lt;^v^v&gt;^vvv&gt;^v^^
</span><span class='line'><span class="s">&lt;&lt;v^&lt;v</span>&lt;&lt;^^v&lt;&gt;v&gt;v^<span class="o">&lt;&lt;&lt;</span>&lt;&lt;&gt;^^v&lt;v^&gt;&gt;&gt;v^&gt;&lt;v^v&lt;v^^^&lt;
</span><span class='line'>^^&gt;&gt;^&lt;vv&lt;vv&lt;&gt;v^&lt;^&lt;^^&gt;&lt;&gt;&lt;^vvvv<span class="s">&lt;&lt;v&lt;^&lt;&lt;^&gt;^&gt;v</span>v^&lt;v
</span><span class='line'>^^v^&gt;&gt;^&gt;^&lt;vv^^&lt;&gt;&gt;^^v&gt;v&gt;&gt;v&gt;&gt;v^vv&lt;vv^&gt;&gt;&lt;&gt;&gt;v&lt;&lt;&gt;&gt;
</span><span class='line'>^v&lt;^v&lt;v&gt;^^&lt;&gt;&gt;^&gt;^&gt;^^v&gt;v<span class="o">&lt;&lt;&lt;</span>&lt;&lt;&gt;&gt;&lt;&gt;&lt;^v&lt;^^v&gt;&lt;v&gt;^<span class="s">&lt;&lt;</span>
</span><span class='line'><span class="s">v&gt;v</span>&lt;&gt;&lt;^v&lt;&lt;^^&lt;^&gt;v&gt;^&gt;&lt;^&gt;&lt;v^&gt;&lt;v^^^&gt;&gt;&lt;^^&lt;^vv^^^&gt;^
</span><span class='line'>v&gt;&lt;&gt;^&gt;&lt;vv^v^^&gt;&gt;&lt;&gt;^&lt;^v&lt;^&gt;&lt;v&gt;^v^&lt;^&lt;&gt;&gt;^&lt;^vv&lt;v&gt;^v
</span><span class='line'>&gt;&lt;^&lt;v&gt;&gt;v&gt;^&lt;&lt;^&gt;^&lt;^^&gt;v^^v&lt;&gt;&gt;v&gt;&lt;&lt;&gt;v&lt;&lt;^&gt;&lt;&lt;&gt;^&gt;^v&lt;v
</span><span class='line'>&gt;vv&gt;^&gt;^v&gt;&lt;^^&lt;v^&gt;^&gt;v&lt;^v&gt;&lt;&gt;vv&gt;v&lt;^&gt;<span class="o">&lt;&lt;&lt;</span>&lt;v^&lt;^vv&lt;&gt;v
</span><span class='line'>&lt;&gt;&lt;&lt;^^&gt;&gt;^&lt;&gt;vv&gt;&lt;^^&lt;vv&lt;&lt;^v^v^&lt;^^^^vv&lt;&lt;&gt;^&lt;vvv^vv
</span><span class='line'>&gt;v<span class="s">&lt;&lt;v^&gt;&lt;v</span>&lt;^^&gt;&lt;^v^<span class="o">&lt;&lt;&lt;</span>&gt;^<span class="s">&lt;&lt;vvvv^^^v&lt;&lt;v&gt;vv&gt;^&gt;&gt;^&lt;&gt;</span>
</span><span class='line'><span class="s">^^^^&lt;^&lt;&gt;^^vvv</span>&gt;v^&lt;&lt;&gt;&gt;&lt;^<span class="s">&lt;&lt;v&gt;^&lt;&lt;v</span>&gt;&gt;&gt;&lt;&gt;&gt;&gt;&lt;&lt;^^&gt;vv&gt;
</span><span class='line'>&lt;^&lt;^&lt;&gt;vvv^v&gt;<span class="o">&lt;&lt;&lt;</span>vvv&lt;&gt;&gt;&gt;&gt;^<span class="o">&lt;&lt;&lt;</span>^vvv&gt;^<span class="o">&lt;&lt;&lt;</span>^vv&gt;v^&gt;&lt;^
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>cat sample-input2 <span class="p">|</span> go run cycles.go
</span><span class='line'>The largest cycle was found at <span class="o">(</span>19, 18<span class="o">)</span> with a length of 49
</span><span class='line'>Here is the longest cycle :-
</span><span class='line'>
</span><span class='line'>                 &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;^
</span><span class='line'>                    ^&lt;
</span><span class='line'>                     ^
</span><span class='line'>                    &gt;^
</span><span class='line'>                    ^
</span><span class='line'>                   &gt;^
</span><span class='line'>                   ^
</span><span class='line'>                &gt;&gt;&gt;^
</span><span class='line'>                ^
</span><span class='line'>                ^&lt;
</span><span class='line'>                 ^
</span><span class='line'>                 ^
</span><span class='line'>                 ^
</span><span class='line'>                &gt;^
</span><span class='line'>                ^
</span><span class='line'>                ^
</span><span class='line'>                ^  v&lt;&lt;
</span><span class='line'>                ^<span class="o">&lt;&lt;&lt;</span> ^
</span><span class='line'>                     ^&lt;&lt;
</span><span class='line'>                 v&lt;    ^&lt;&lt;
</span></code></pre></td></tr></table></div></figure>


<p><strong>Notes:</strong></p>

<ul>
<li><p>Spent a lot of time tracking down essentially a <code>s/width/height</code> error throughout. Embarrassing.</p></li>
<li><p>I&rsquo;m a bit disturbed that my answer for sample 2 is different from the one given in the problem description (that one is <em>shorter</em>!)</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Gardens of Go]]></title>
    <link href="http://agam.github.io/blog/2014/12/17/the-gardens-of-go/"/>
    <updated>2014-12-17T05:54:20+00:00</updated>
    <id>http://agam.github.io/blog/2014/12/17/the-gardens-of-go</id>
    <content type="html"><![CDATA[<p>There are many &ldquo;teaching&rdquo; languages, though a contender these days is harder to establish, given the amount of choice available. For very young kids, the Scratch<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> framework is appropriate, while for slightly older kids, Python might be a better option.</p>

<p>I&rsquo;d like to suggest another option (for slightly older kids), that might seem atypical at first: Go! Yes, I do believe the &ldquo;Gopher language&rdquo;, used in many real production servers today, can realistically do double duty as a beginner language for kids.</p>

<p>This is the point where I make an analogy, and it goes something like this: I think Go can be to kids today what BASIC<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup> was to me<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup>, i.e. as a way to experiment with and play around in a &ldquo;text-mode&rdquo; world, while getting very quick feedback, and building &ldquo;complete&rdquo; programs.</p>

<p>An objection many people have is along the lines of, &ldquo;Oh no! You don&rsquo;t get it! Kids love <em>only</em> flashy, shiny stuff! You need animation, and nothing else will do!&rdquo; Perhaps several kids do; perhaps several adults do as well. These are not my target audience; I&rsquo;ll leave it at that.</p>

<p>No, I <em>do</em> believe that many kids <em>will</em> love the parameterized<sup id="fnref:4"><a href="#fn:4" rel="footnote">4</a></sup> freedom offered, and learn to create and modify small Go programs. One of the <em>best</em> sources of fun for me were old BASIC games books<sup id="fnref:5"><a href="#fn:5" rel="footnote">5</a></sup>, from where I used to type out entire<sup id="fnref:6"><a href="#fn:6" rel="footnote">6</a></sup> programs (and then spend time fixing the inevitable typos that resulted).</p>

<p>Go has a simple syntax, that&rsquo;s easy to pick up (you can do a lot with just <code>int</code>s and <code>string</code>s!) and quick to run. All<sup id="fnref:7"><a href="#fn:7" rel="footnote">7</a></sup> that remains to be done is to come up with a series of little games<sup id="fnref:8"><a href="#fn:8" rel="footnote">8</a></sup>, of increasing complexity and lots of fun.</p>

<p><em>Statutory Warning: Heh, I&rsquo;m just writing this in a burst of optimism (this might be a useless idea).</em></p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p><a href="http://scratch.mit.edu/">http://scratch.mit.edu/</a><a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
<li id="fn:2">
<p>See <a href="http://time.com/69316/basic/">this TIME magazine article</a> for a nice restrospective look<a href="#fnref:2" rev="footnote">&#8617;</a></p></li>
<li id="fn:3">
<p>I see the jokes coming: no, I don&rsquo;t mean as a way to learn the <code>GOSUB &lt;line_number&gt;</code> syntax.<a href="#fnref:3" rev="footnote">&#8617;</a></p></li>
<li id="fn:4">
<p>All the features of an &ldquo;opinionated&rdquo; language; <code>gofmt</code>, <code>go run</code> and all that goodness.<a href="#fnref:4" rev="footnote">&#8617;</a></p></li>
<li id="fn:5">
<p>Such as <a href="http://www.amazon.com/BASIC-Computer-Games-Microcomputer-Edition/dp/0894800523">this one</a>, or <a href="http://www.amazon.com/More-Basic-Computer-Games-David/dp/0894801376/ref=pd_sim_b_1?ie=UTF8&amp;refRID=1VG0C6RVPESH91TK90QJ">this one</a><a href="#fnref:5" rev="footnote">&#8617;</a></p></li>
<li id="fn:6">
<p>In practice, my younger brother dictated them to me (which must&rsquo;ve been a terrible ordeal, but I didn&rsquo;t realize it at the time!)<a href="#fnref:6" rev="footnote">&#8617;</a></p></li>
<li id="fn:7">
<p>Easier said than done, I know, I know.<a href="#fnref:7" rev="footnote">&#8617;</a></p></li>
<li id="fn:8">
<p>The title of this post was chosen in the style of <a href="http://www.realmofracket.com/">&ldquo;The Realm of Racket&rdquo;</a> and <a href="http://landoflisp.com/">&ldquo;The Land of Lisp&rdquo;</a><a href="#fnref:8" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DailyProgramming: Markov chain]]></title>
    <link href="http://agam.github.io/blog/2014/12/16/dailyprogramming-markov-chain/"/>
    <updated>2014-12-16T20:13:06+00:00</updated>
    <id>http://agam.github.io/blog/2014/12/16/dailyprogramming-markov-chain</id>
    <content type="html"><![CDATA[<p>Been a long, <em>long</em> time since I looked at <a href="http://www.reddit.com/r/dailyprogrammer/">r/dailyprogrammer</a>, so I picked <a href="http://www.reddit.com/r/dailyprogrammer/comments/2ovt2i/20141210_challenge_192_intermediate_markov_chain/">this <em>intermediate</em> problem</a> from 5 days ago. Basically, given a dictionary, judge the likelihood of a word being a &ldquo;real word&rdquo;.</p>

<p>Here&rsquo;s my solution:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;bufio&quot;</span>
</span><span class='line'>  <span class="s">&quot;flag&quot;</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>  <span class="s">&quot;log&quot;</span>
</span><span class='line'>  <span class="s">&quot;math&quot;</span>
</span><span class='line'>  <span class="s">&quot;os&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">wordmap</span> <span class="kd">map</span><span class="p">[</span><span class="kt">uint8</span><span class="p">]</span><span class="kd">map</span><span class="p">[</span><span class="kt">uint8</span><span class="p">]</span><span class="kt">int</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">MakeWordMap</span><span class="p">(</span><span class="nx">w</span> <span class="kt">string</span><span class="p">,</span> <span class="nx">wm</span> <span class="nx">wordmap</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">w</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">i</span> <span class="o">==</span> <span class="nb">len</span><span class="p">(</span><span class="nx">w</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">break</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="nx">c</span> <span class="o">:=</span> <span class="nx">w</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span>
</span><span class='line'>      <span class="nx">cnext</span> <span class="o">:=</span> <span class="nx">w</span><span class="p">[</span><span class="nx">i</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">ok</span> <span class="o">:=</span> <span class="nx">wm</span><span class="p">[</span><span class="nx">c</span><span class="p">];</span> <span class="p">!</span><span class="nx">ok</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">wm</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span> <span class="p">=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">map</span><span class="p">[</span><span class="kt">uint8</span><span class="p">]</span><span class="kt">int</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="nx">wm</span><span class="p">[</span><span class="nx">c</span><span class="p">][</span><span class="nx">cnext</span><span class="p">]</span> <span class="p">=</span> <span class="nx">wm</span><span class="p">[</span><span class="nx">c</span><span class="p">][</span><span class="nx">cnext</span><span class="p">]</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">ReadWords</span><span class="p">(</span><span class="nx">dictfile</span> <span class="kt">string</span><span class="p">,</span> <span class="nx">wm</span> <span class="nx">wordmap</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">file</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">os</span><span class="p">.</span><span class="nx">Open</span><span class="p">(</span><span class="nx">dictfile</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">defer</span> <span class="nx">file</span><span class="p">.</span><span class="nx">Close</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">scanner</span> <span class="o">:=</span> <span class="nx">bufio</span><span class="p">.</span><span class="nx">NewScanner</span><span class="p">(</span><span class="nx">file</span><span class="p">)</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">scanner</span><span class="p">.</span><span class="nx">Scan</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">MakeWordMap</span><span class="p">(</span><span class="nx">scanner</span><span class="p">.</span><span class="nx">Text</span><span class="p">(),</span> <span class="nx">wm</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">CheckValidity</span><span class="p">(</span><span class="nx">w</span> <span class="kt">string</span><span class="p">,</span> <span class="nx">wm</span> <span class="nx">wordmap</span><span class="p">)</span> <span class="kt">float64</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">c</span><span class="p">,</span> <span class="nx">cprev</span> <span class="kt">uint8</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">wordScore</span> <span class="kt">float64</span> <span class="p">=</span> <span class="mf">1.0</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">w</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">i</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">cprev</span> <span class="p">=</span> <span class="nx">w</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span>
</span><span class='line'>          <span class="k">continue</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="nx">c</span> <span class="p">=</span> <span class="nx">w</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span>
</span><span class='line'>      <span class="nx">pairScore</span> <span class="o">:=</span> <span class="nx">wm</span><span class="p">[</span><span class="nx">cprev</span><span class="p">][</span><span class="nx">c</span><span class="p">]</span>
</span><span class='line'>      <span class="nx">rowTotal</span> <span class="o">:=</span> <span class="mi">0</span>
</span><span class='line'>      <span class="k">for</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">count</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">wm</span><span class="p">[</span><span class="nx">cprev</span><span class="p">]</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">rowTotal</span> <span class="o">+=</span> <span class="nx">count</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="nx">wordScore</span> <span class="p">=</span> <span class="nx">wordScore</span> <span class="o">*</span> <span class="nb">float64</span><span class="p">(</span><span class="nx">pairScore</span><span class="p">)</span> <span class="o">/</span> <span class="nb">float64</span><span class="p">(</span><span class="nx">rowTotal</span><span class="p">)</span>
</span><span class='line'>      <span class="nx">cprev</span> <span class="p">=</span> <span class="nx">c</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">wordScore</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// Takes a dictionary and a single word, and returns the</span>
</span><span class='line'>  <span class="c1">// probability of that word being &quot;good&quot;</span>
</span><span class='line'>  <span class="nx">wm</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="nx">wordmap</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">dictfile</span> <span class="o">:=</span> <span class="nx">flag</span><span class="p">.</span><span class="nx">String</span><span class="p">(</span><span class="s">&quot;dictfile&quot;</span><span class="p">,</span> <span class="s">&quot;&quot;</span><span class="p">,</span> <span class="s">&quot;Path to word list&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">checkword</span> <span class="o">:=</span> <span class="nx">flag</span><span class="p">.</span><span class="nx">String</span><span class="p">(</span><span class="s">&quot;checkword&quot;</span><span class="p">,</span> <span class="s">&quot;&quot;</span><span class="p">,</span> <span class="s">&quot;Word to spell-check&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">flag</span><span class="p">.</span><span class="nx">Parse</span><span class="p">()</span>
</span><span class='line'>  <span class="nx">ReadWords</span><span class="p">(</span><span class="o">*</span><span class="nx">dictfile</span><span class="p">,</span> <span class="nx">wm</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">prob</span> <span class="o">:=</span> <span class="nx">CheckValidity</span><span class="p">(</span><span class="o">*</span><span class="nx">checkword</span><span class="p">,</span> <span class="nx">wm</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;%s has a score of %.20f\n&quot;</span><span class="p">,</span> <span class="o">*</span><span class="nx">checkword</span><span class="p">,</span> <span class="nx">prob</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">prob</span> <span class="p">&lt;</span> <span class="nx">math</span><span class="p">.</span><span class="nx">Pow10</span><span class="p">(</span><span class="o">-</span><span class="nb">len</span><span class="p">(</span><span class="o">*</span><span class="nx">checkword</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;It is probably not a word!&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;It looks like a real word!&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>It runs as follows:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>go run markov.go -dictfile<span class="o">=</span>/usr/share/dict/american-english  -checkword<span class="o">=</span>go
</span><span class='line'>go has a score of 0.06318184860451107887
</span><span class='line'>It looks like a real word!
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Trying out FreeBSD (and failing at it)]]></title>
    <link href="http://agam.github.io/blog/2014/12/14/trying-out-freebsd-and-failing-at-it/"/>
    <updated>2014-12-14T22:00:13+00:00</updated>
    <id>http://agam.github.io/blog/2014/12/14/trying-out-freebsd-and-failing-at-it</id>
    <content type="html"><![CDATA[<p>Wait, what? Why?! No reason, really. I saw the new FreeBSD book<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> lying around in someone&rsquo;s office, and separately I was reminded of the week I spent getting Gentoo up and running a decade ago, and decided I missed all that and wanted to repeat a similar experience.</p>

<p>So, this is an attempt to both (1) install it within a VM on the Google Compute Engine<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>, and (2) slowly learn more about it. Here follows a log of everything I did, based on the original instructions from the mailing list <sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup>. (<em>Meta-note: if running remotely, be sensible; use <code>tmux</code> or <code>screen</code></em>)</p>

<h3><em>Step 1</em>: Install the emulator</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo apt-get install qemu
</span></code></pre></td></tr></table></div></figure>


<h3><em>Step 2</em>: Get the FreeBSD version to install &mdash; in my case, I picked the &ldquo;disc1&rdquo; version corresponding to the &ldquo;RELEASE&rdquo; image<sup id="fnref:4"><a href="#fn:4" rel="footnote">4</a></sup></h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>wget ftp://ftp.freebsd.org/pub/FreeBSD/releases/amd64/amd64/ISO-IMAGES/10.1/FreeBSD-10.1-RELEASE-amd64-disc1.iso
</span></code></pre></td></tr></table></div></figure>


<h3><em>Step 3</em>: Create the disk image for the emulator</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>qemu-img create disk.raw 100g
</span><span class='line'>Formatting <span class="s1">&#39;disk.raw&#39;</span>, <span class="nv">fmt</span><span class="o">=</span>raw <span class="nv">size</span><span class="o">=</span><span class="m">107374182400</span>
</span></code></pre></td></tr></table></div></figure>


<h3><em>Step 4</em>: Boot from the ISO downloaded earlier</h3>

<p>Notes:
&ndash; The original instructions also mention <code>--enable_kvm</code>, but that didn&rsquo;t work for me. I tried <code>sudo modprobe kvm-intel</code>, but <code>dmesg | grep kvm</code> informed me that it had been disabled by the Bios, so I skipped it here.
&ndash; If you are running this remotely (like I was), you&rsquo;ll have to add <code>--curses</code> to the <code>qemu</code> command line.</p>

<h3><em>Step 5</em>: Install FreeBSD</h3>

<p>At this point, if all went well, the emulator should boot up and you should see the &ldquo;Welcome&rdquo; screen, where you can hit &ldquo;Install&rdquo; and begin.</p>

<p>Notes:
&ndash; Pretty standard stuff, if you&rsquo;ve done a linux install before.
&ndash; When it came to the disk setup I chose <code>ufs</code> for no particular reason<sup id="fnref:5"><a href="#fn:5" rel="footnote">5</a></sup>, but you can choose any of the options; it&rsquo;ll show you the suggested table for the &ldquo;entire disk&rdquo; as split between <code>freebsd-boot</code>, <code>freebsd-ufs</code> and <code>freebsd-swap</code>, just hit <em>&ldquo;Finish&rdquo;</em> and then <em>&ldquo;Commit&rdquo;</em> to proceed.
&ndash; Take a nice long break when the <em>&ldquo;Archive Extraction&rdquo;</em> step begins; this is computationally intensive, and (especially without <code>kvm</code> enabled) takes a <em>long</em> time on the emulator.
&ndash; DNS settings are <code>google.internal.</code> for the <em>&ldquo;search&rdquo;</em>, and <code>169.254.169.254</code> for the DNS IP.
&ndash; Include <code>sshd</code> and <code>ntpd</code> in the list of services to start at boot</p>

<h3><em>Step 6</em>: Further configuration (as root)</h3>

<p>Once you hit <em>&ldquo;Exit&rdquo;</em> at the end, choose the option to drop into a shell and then run the following:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">echo</span> <span class="s1">&#39;console=&quot;comconsole&quot;&#39;</span> &gt;&gt;/etc/rc.conf
</span><span class='line'><span class="nb">echo</span> ‘console<span class="o">=</span>”comconsole”’ &gt; /boot/loader.conf
</span><span class='line'>sed -I -e “/hostname/d” /etc/rc.conf
</span><span class='line'><span class="nb">echo</span> -Dh &gt;/boot.config
</span><span class='line'>
</span><span class='line'>cat <span class="s">&lt;&lt;EOF &gt;/etc/dhclient.conf</span>
</span><span class='line'><span class="s">interface &quot;vtnet0&quot; {</span>
</span><span class='line'><span class="s">  supersede subnet-mask 255.255.0.0;</span>
</span><span class='line'><span class="s">}</span>
</span><span class='line'><span class="s">EOF</span>
</span><span class='line'>
</span><span class='line'>sed -I -e “/server/d” /etc/ntp.conf
</span><span class='line'><span class="nb">echo</span> “server 169.254.169.254” &gt;&gt; /etc/ntp.conf
</span><span class='line'>
</span><span class='line'><span class="nb">echo</span> “169.254.169.254 metadata.google.internal metadata” &gt;&gt; /etc/hosts
</span></code></pre></td></tr></table></div></figure>


<h3><em>Step 7</em>: Add yourself as a user</h3>

<ul>
<li>Run <code>adduser</code> and follow the prompts<sup id="fnref:6"><a href="#fn:6" rel="footnote">6</a></sup></li>
<li>Add yourself to the <code>wheel</code> group. E.g. in my case:</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>pw user mod agam -G wheel
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Allow yourself to login via <code>ssh</code>:</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sed -I -e “s/#PasswordAuthentication no/PasswordAuthentication yes/” /etc/ssh/sshd_config
</span></code></pre></td></tr></table></div></figure>


<h3><em>Step 8</em>: Setup GCE (within the image)</h3>

<ul>
<li>Enable either OpenDNS or Google Public DNS . E.g. for the latter:</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span><span class="nb">echo</span> “nameserver 8.8.8.8” &gt;&gt; /etc/resolv.conf
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Install <code>sudo</code>, <code>python</code><sup id="fnref:7"><a href="#fn:7" rel="footnote">7</a></sup>, and <code>wget</code><sup id="fnref:8"><a href="#fn:8" rel="footnote">8</a></sup></li>
<li>Get <code>gcloud</code><a href="" title="More information [here](https://cloud.google.com/compute/docs/gcloud-compute/)">^9</a></li>
<li>Remove the DNS record added earlier:</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sed -I -e “/8.8.8.8/d” /etc/resolv.conf
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Turn off FreeBSD (run <code>poweroff</code>)</li>
</ul>


<h3><em>Step 9</em>: Setup GCE (on your workstation)</h3>

<ul>
<li>Install <code>gcloud</code> (as before)</li>
<li>Authenticate: Run <code>gcloud auth login</code> and follow the url to enter the code</li>
<li>Prepare the image for upload: <code>tar -Szcf freebsd.tar.gz disk.raw</code></li>
<li>Create a bucket<sup id="fnref:9"><a href="#fn:9" rel="footnote">9</a></sup> and upload<sup id="fnref:10"><a href="#fn:10" rel="footnote">10</a></sup> the image there (Note: I was shocked, <em>shocked</em>, by how <em>fast</em> this upload went!)</li>
<li>Prepare the image for use in your VM and insert it</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>gcutil addimage freebsd gs://&lt;bucket&gt;/&lt;object&gt;
</span><span class='line'><span class="nv">$ </span>gcutil --project &lt;project_id&gt; freebsd gs://&lt;bucket&gt;/&lt;object&gt;
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Add a VM and SSH to it (both these operations can be done either through the &ldquo;Google Cloud Console&rdquo; or the command-line client<sup id="fnref:11"><a href="#fn:11" rel="footnote">11</a></sup>). E.g. in my case the latter is
<code>&gt; gcloud compute ssh myvm</code><sup id="fnref:12"><a href="#fn:12" rel="footnote">12</a></sup></li>
</ul>


<h3><em>Step 10</em>: Nope</h3>

<p>Yeah this didn&rsquo;t work for me. Luckily, the &ldquo;serial console&rdquo; can be viewed through the dashboard, and what I saw was a repeated failure to boot.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>Mounting <span class="nb">local </span>file systems:.
</span><span class='line'>Writing entropy file:.
</span><span class='line'>vtnet0: link state changed to UP
</span><span class='line'>Starting Network: lo0 vtnet0.
</span><span class='line'>lo0: <span class="nv">flags</span><span class="o">=</span>8049&lt;UP,LOOPBACK,RUNNING,MULTICAST&gt; metric <span class="m">0</span> mtu 16384
</span><span class='line'>     <span class="nv">options</span><span class="o">=</span>600003&lt;RXCSUM,TXCSUM,RXCSUM_IPV6,TXCSUM_IPV6&gt;
</span><span class='line'>     inet6 ::1 prefixlen <span class="m">128</span>
</span><span class='line'>     inet6 fe80::1%lo0 prefixlen <span class="m">64</span> scopeid 0x2
</span><span class='line'>     inet 127.0.0.1 netmask 0xff000000
</span><span class='line'>     nd6 <span class="nv">options</span><span class="o">=</span>21&lt;PERFORMNUD,AUTO_LINKLOCAL&gt;
</span><span class='line'>vtnet0: <span class="nv">flags</span><span class="o">=</span>8943&lt;UP,BROADCAST,RUNNING,PROMISC,SIMPLEX,MULTICAST&gt; metric <span class="m">0</span> mtu 1500
</span><span class='line'>  <span class="nv">options</span><span class="o">=</span>6c01bb&lt;RXCSUM,TXCSUM,VLAN_MTU,VLAN_HWTAGGING,JUMBO_MTU,VLAN_HWCSUM,TSO4,VLAN_HWTSO,LINKSTATE,RXCSUM_IPV6,TXCSUM_IPV6&gt;
</span><span class='line'>  ether 42:01:0a:f0:c8:6c
</span><span class='line'>  nd6 <span class="nv">options</span><span class="o">=</span>29&lt;PERFORMNUD,IFDISABLED,AUTO_LINKLOCAL&gt;
</span><span class='line'>  media: Ethernet 10Gbase-T &lt;full-duplex&gt;
</span><span class='line'>  status: active
</span><span class='line'>Starting devd.
</span><span class='line'>Starting dhclient.
</span><span class='line'>DHCPREQUEST on vtnet0 to 255.255.255.255 port 67
</span><span class='line'>DHCPNAK from 169.254.169.254
</span><span class='line'>DHCPDISCOVER on vtnet0 to 255.255.255.255 port <span class="m">67</span> interval 8
</span><span class='line'>DHCPOFFER from 169.254.169.254
</span><span class='line'>DHCPREQUEST on vtnet0 to 255.255.255.255 port 67
</span><span class='line'>DHCPACK from 169.254.169.254
</span><span class='line'>panic: ffs_write: <span class="nb">type </span>0xfffff80008a1cb10 <span class="m">0</span> <span class="o">(</span>0,150<span class="o">)</span>
</span><span class='line'><span class="nv">cpuid</span> <span class="o">=</span> 2
</span><span class='line'>KDB: stack backtrace:
</span><span class='line'><span class="c">#0 0xffffffff80963000 at kdb_backtrace+0x60</span>
</span><span class='line'><span class="c">#1 0xffffffff80928125 at panic+0x155</span>
</span><span class='line'><span class="c">#2 0xffffffff80b7f825 at ffs_write+0x5b5</span>
</span><span class='line'><span class="c">#3 0xffffffff80e428f5 at VOP_WRITE_APV+0x145</span>
</span><span class='line'><span class="c">#4 0xffffffff809d96f9 at vn_write+0x259</span>
</span><span class='line'><span class="c">#5 0xffffffff809d598b at vn_io_fault+0x10b</span>
</span><span class='line'><span class="c">#6 0xffffffff8097a437 at dofilewrite+0x87</span>
</span><span class='line'><span class="c">#7 0xffffffff8097a168 at kern_writev+0x68</span>
</span><span class='line'><span class="c">#8 0xffffffff8097a0f3 at sys_write+0x63</span>
</span><span class='line'><span class="c">#9 0xffffffff80d25851 at amd64_syscall+0x351</span>
</span><span class='line'><span class="c">#10 0xffffffff80d0aa6b at Xfast_syscall+0xfb</span>
</span><span class='line'>Uptime: 7s
</span></code></pre></td></tr></table></div></figure>


<p>Looks like this may be a corrupt disk? Not sure. But pretty bummed :(</p>

<p><em><strong>Update</strong></em>: I see people having luck with either (1) building a &ldquo;rescue disk&rdquo; on a running FreeBSD machine (not an option for me), or (2) using the <code>mfsbsd</code><sup id="fnref:13"><a href="#fn:13" rel="footnote">13</a></sup> remote install. I think I&rsquo;ll try the latter when I get time.</p>

<p><em><strong>Update</strong></em>: Here&rsquo;s how that went :&ndash;</p>

<ul>
<li>Get the <code>mfsbsd</code> image<sup id="fnref:14"><a href="#fn:14" rel="footnote">14</a></sup></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$curl</span> -o disk.raw http://mfsbsd.vx.sk/files/iso/10/amd64/mfsbsd-se-10.1-RELEASE-amd64.iso<span class="sb">`</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Tar it, upload it</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>tar -Szcf mfs-freebsd.tar.gz disk.raw
</span><span class='line'><span class="nv">$ </span>gsutil cp mfs-freebsd.tar.gz gs://&lt;bucket_name&gt;
</span><span class='line'><span class="nv">$ </span>gcutil addimage mfs-freebsd gs://&lt;bucket_name&gt;/mfs-freebsd.tar.gz
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Create a VM with this instance</li>
</ul>


<p>Aaand &hellip; NOPE again; fails to even show the serial console this time :(
Error: <code>The resource 'projects/algol-c/zones/us-central1-a/instances/myvm' is not ready</code></p>

<ul>
<li>Deleted the VM and created it again<sup id="fnref:15"><a href="#fn:15" rel="footnote">15</a></sup></li>
</ul>


<p>Failed again, but this time I grabbed the output before it vanished:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>Unable to lock ram - bridge not found
</span><span class='line'>Changing serial settings was 3/2 now 3/0
</span><span class='line'>enter handle_19:
</span><span class='line'>  NULL
</span><span class='line'>Booting from Hard Disk...
</span><span class='line'>Boot failed: not a bootable disk
</span><span class='line'>
</span><span class='line'>enter handle_18:
</span><span class='line'>  NULL
</span><span class='line'>Booting from Floppy...
</span><span class='line'>Boot failed: could not <span class="nb">read </span>the boot disk
</span><span class='line'>
</span><span class='line'>enter handle_18:
</span><span class='line'>  NULL
</span><span class='line'>No bootable device.  Powering off VM.
</span><span class='line'>END OF LINE
</span><span class='line'>  Retrying in <span class="m">60</span> seconds.
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><em>Of course!</em> I have to <em>make</em> a bootable image using this iso (!) But, But, But &hellip;. that needs a running FreeBSD system?!</li>
</ul>


<p><em><strong>Update</strong></em>: Damn, looks like GCE is behind both Amazon and (wtf!) Microsoft on this. From the release notes for v10.1:</p>

<blockquote><p>FreeBSD 10.1-RELEASE is also available on these cloud hosting platforms:</p>

<ul>
<li>Amazon® EC2™ FreeBSD/amd64</li>
<li>Microsoft® Azure™ FreeBSD/amd64,  FreeBSD/i386</li>
</ul>
</blockquote>

<p><em><strong>Conclusion</strong></em>: The <code>qemu</code> path should have worked, I don&rsquo;t yet understand why not. Another option might be to try the <em>vhd</em> image and get that to work. Or try EC2/Azure. Or wait for someone to figure this out and publicly share a working image. Or give up on FreeBSD and get back &ldquo;to real work&rdquo; :)</p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>The <a href="http://www.amazon.com/gp/product/0321968972/ref=pd_lpo_sbs_dp_ss_1?pf_rd_p=1944687562&amp;pf_rd_s=lpo-top-stripe-1&amp;pf_rd_t=201&amp;pf_rd_i=0201702452&amp;pf_rd_m=ATVPDKIKX0DER&amp;pf_rd_r=0QBY4BRZHVN8ZNNFWDMW">newer edition</a> of &ldquo;The Design and Implementation of the FreeBSD Operating System&rdquo;<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
<li id="fn:2">
<p>Yes, I&rsquo;ve heard <a href="http://www.daemonology.net/freebsd-on-ec2/">the Amazon experience</a> is easier, but that would be &hellip; uh &hellip; slightly disloyal right now :P<a href="#fnref:2" rev="footnote">&#8617;</a></p></li>
<li id="fn:3">
<p>https://groups.google.com/forum/#!msg/gce-discussion/YWoa3Aa_49U/FYAg9oiRlLUJ<a href="#fnref:3" rev="footnote">&#8617;</a></p></li>
<li id="fn:4">
<p>From <a href="ftp://ftp.freebsd.org/pub/FreeBSD/releases/amd64/amd64/ISO-IMAGES/10.1/">this list</a><a href="#fnref:4" rev="footnote">&#8617;</a></p></li>
<li id="fn:5">
<p>Don&rsquo;t necessarily care too much about the <a href="http://www.smbitjournal.com/2014/05/the-cult-of-zfs/">&ldquo;Cult of ZFS&rdquo;</a>; besides, UFS is faster.<a href="#fnref:5" rev="footnote">&#8617;</a></p></li>
<li id="fn:6">
<p>Shell choices are <code>sh</code>/<code>csh</code>/<code>tcsh</code>, with the first being the default option. Take your pick; I&rsquo;m going to replace <code>sh</code> with <code>bash</code> later anyway.<a href="#fnref:6" rev="footnote">&#8617;</a></p></li>
<li id="fn:7">
<p>If you try to guess and install Python 3, you&rsquo;ll see this error: <code>ERROR: Python 3 is not supported by the Google Cloud SDK.  Please use a Python 2.x version that is 2.6 or greater</code> (Do as it says! (Also, you might not want to put bets on python 3?))<a href="#fnref:7" rev="footnote">&#8617;</a></p></li>
<li id="fn:8">
<p>Either run <code>pkg_add -r</code> for each tool, or compile it from source with ports. For the latter, first run <code>portsnap fetch</code>, <code>portsnap extract</code>, and <code>portsnap update</code>, in that order (this is a one-time setup), then <code>cd</code> to the appropriate directory under <code>/usr/ports</code> and run <code>make install</code> for each tool (<strong>warning</strong>: this takes a long, long, <em>long</em> time! If you&rsquo;re running the emulator without <code>kvm</code> support, you have to be <em>extremely masochistic</em> to try compiling from source).<a href="#fnref:8" rev="footnote">&#8617;</a></p></li>
<li id="fn:9">
<p><code>gsutil -p &lt;project_id&gt; -c gs://&lt;bucket_name&gt;</code><a href="#fnref:9" rev="footnote">&#8617;</a></p></li>
<li id="fn:10">
<p><code>gsutil cp &lt;gzipped_file&gt; gs://&lt;bucket_name&gt;</code><a href="#fnref:10" rev="footnote">&#8617;</a></p></li>
<li id="fn:11">
<p>https://cloud.google.com/sdk/gcloud/reference/compute/instances/create<a href="#fnref:11" rev="footnote">&#8617;</a></p></li>
<li id="fn:12">
<p>You also need a <code>--project</code> flag, but you can set a global value for this by running <code>gcloud config set project &lt;project_id&gt;</code><a href="#fnref:12" rev="footnote">&#8617;</a></p></li>
<li id="fn:13">
<p>https://www.freebsd.org/doc/en_US.ISO8859-1/articles/remote-install/preparation.html<a href="#fnref:13" rev="footnote">&#8617;</a></p></li>
<li id="fn:14">
<p>In case you were wondering, the file name inside the uploaded image <em>has</em> to be <code>disk.raw</code><a href="#fnref:14" rev="footnote">&#8617;</a></p></li>
<li id="fn:15">
<p>&ldquo;Terminated&rdquo; VMs have to be dealt with this way, AFAICS<a href="#fnref:15" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Failure to ragequit]]></title>
    <link href="http://agam.github.io/blog/2014/12/12/failure-to-ragequit/"/>
    <updated>2014-12-12T06:07:14+00:00</updated>
    <id>http://agam.github.io/blog/2014/12/12/failure-to-ragequit</id>
    <content type="html"><![CDATA[<p>Migrating from my Github blog (in Octopress) was supposed to work pretty much as specified in <a href="http://www.stackednotion.com/blog/2014/02/26/migrating-from-octopress-to-wordpress/">this guide</a> <sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></p>

<ul>
<li>I used <a href="https://gist.github.com/lucaspiller/9229838#file-rss-xml">this gist</a> in <code>source/rss.xml</code> and then ran <code>rake generate</code></li>
<li>I imported the generated file (in <code>public/rss.xml</code>) into my Wordpress blog, only to see this error

<blockquote><p>This does not appear to be a WXR file, missing/invalid WXR version number.</p></blockquote></li>
<li>A helpful post on <a href="https://wordpress.org/support/topic/xml-to-wxr-issue">the Wordpress Forums</a> suggested the following change</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0"&gt;
</span><span class='line'>  &lt;channel&gt;
</span><span class='line'>    &lt;atom:link rel="hub" href="http://pubsubhubbub.appspot.com" xmlns:atom="http://www.w3.org/2005/Atom"/&gt;
</span><span class='line'>    &lt;wp:wxr_version&gt;1.1&lt;/wp:wxr_version&gt;
</span><span class='line'>    &lt;title&gt;Agam&#39;s Mashed-Up Pome&lt;/title&gt;</span></code></pre></td></tr></table></div></figure>


<p>(i.e. adding the <code>wxr_version</code> marker line after the language specification)</p>

<ul>
<li>After this, I tried importing again, it gave some warnings about not recognizing the author (which was to be expected) &hellip; and then though it said &ldquo;import successful!&rdquo;, there were no posts to be seen!</li>
</ul>


<p><strong>WTF Aaaarrgh WTF</strong></p>

<p><em>Update: An hour later, more sober &hellip;</em></p>

<p>Yeah, I don&rsquo;t have the <em>$&amp;@%in</em> time to waste trying various other hacks. The big reasons I wanted to switch was that</p>

<ol>
<li>I don&rsquo;t want to muck around with Ruby <em>ever again</em>, and</li>
<li>I want to be able to write posts <em>online</em> (i.e. through some sort of browser interface).</li>
</ol>


<p>Now (1) is not an immediate problem, so I suppose if it re-occurs, I&rsquo;ll put more time/effort into quitting Octopress, but meanwhile there are compromises possible for (2), such as the nice interface of <a href="http://draftin.com">draftin.com</a> that I <em>just</em> discovered. <em>So yeah, this blog lives on &hellip;</em></p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>This is the <em>second</em> time I&rsquo;ve tried to jump from Octopress to Wordpress; Google suggests that most people seem to be <a href="https://www.google.com/search?q=migrate+%22from+wordpress+to+octopress%22&amp;oq=migrate+%22from+wordpress+to+octopress">going the opposite direction</a><a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Haskell/Math]]></title>
    <link href="http://agam.github.io/blog/2014/11/12/haskell-slash-math/"/>
    <updated>2014-11-12T02:05:43+00:00</updated>
    <id>http://agam.github.io/blog/2014/11/12/haskell-slash-math</id>
    <content type="html"><![CDATA[<p>I don&rsquo;t recall the very first articles I might have read about Haskell, but the first non-short text was Real World Haskell, which I went through the year it came out. I didn&rsquo;t write any code at that time (a mistake!)</p>

<p>Then, a coupffle of years later, I thought I&rsquo;d try my hand at <a href="https://projecteuler.net/">Project Euler</a> with Haskell. I did the first 10-15 and then got bored.</p>

<p><em>Another</em> couple of years later, I decided to &ldquo;try it out&rdquo; again. This time, it was by starting a static blog (this one!) in <a href="http://jaspervdj.be/hakyll/">Hakyll</a>, and disassembling some trivial programs. This also didn&rsquo;t last, and after my initial brush with &ldquo;<a href="https://www.haskell.org/haskellwiki/Cabal/Survival">cabal</a> <a href="http://www.well-typed.com/blog/2014/09/how-we-might-abolish-cabal-hell-part-1/">hell</a>&rdquo;, I switched to <a href="http://jekyllrb.com/">Jekyll</a> instead.</p>

<p>I poked around with <a href="http://www.yesodweb.com/">Yesod</a> and its various <a href="https://hackage.haskell.org/package/shakespeare">&ldquo;shakespearean&rdquo;</a> plugins, and gave that up too.</p>

<p>At one point I found myself asking the question: &ldquo;Why am I doing this in Haskell at all?&rdquo; And the answer, obviously, was that (of course!) I <em>didn&rsquo;t need to</em>. So I lost interest altogether.</p>

<p>Now I realize these were all misguided efforts. What I should have done was to approach the whole thing from a more <em>fundamental</em> plane, the way SICP introduces Scheme. So, I&rsquo;ve decided to make my way through <a href="http://www.amazon.com/Haskell-Programming-Second-Edition-Computing/dp/0954300696">The Haskell Road to Maths, Logic and Programming</a>, trying as hard as I can to <em>not</em> let preconceived notions filter through, and to take it all in with a &ldquo;beginner&rsquo;s mind&rdquo;.</p>

<p>It&rsquo;s going to be a while :)</p>

<br><br>


<p><em>P.S. Emacs support for Haskell is pretty sweet. Here&rsquo;s a n00b-level screenshot showing a &ldquo;SLIME-style&rdquo; ghci session</em></p>

<p><img class="center" src="http://agam.github.io/images/haskell-emacs-ghci.png"></p>

<p><strong>Update:</strong> Someone suggested I should read <em>a more recent</em> book, <a href="http://www.cs.nott.ac.uk/~gmh/book.html">Programming in Haskell</a> by Graham Hutton, so I guess I&rsquo;ll do that first.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Moving to Ello]]></title>
    <link href="http://agam.github.io/blog/2014/11/05/moving-to-ello/"/>
    <updated>2014-11-05T22:57:30+00:00</updated>
    <id>http://agam.github.io/blog/2014/11/05/moving-to-ello</id>
    <content type="html"><![CDATA[<p>Yeah it&rsquo;s been pretty <em>dry</em> over here lately. Looks like the last post was on September 2, over <em>two months ago</em>. Many reasons, one of which is that I&rsquo;m too lazy <em>even for Github pages</em>. Yes, I frequently cannot even be bothered to do something as simple as <code>rake new_post["Why I procrastinate endlessly: 20 reasons"]</code>.</p>

<p>Why, I ask myself, did I start using Jekyll/Octopress/GithubPages anyway?</p>

<ol>
<li><p>The &ldquo;cool factor&rdquo;. Don&rsquo;t care anymore.</p></li>
<li><p>Ease of use and maintenance. True, it&rsquo;s better than Wordpress, but this is a low bar.</p></li>
<li><p>Using markdown in posts. This was <em>the</em> big reason, in hindsight. Three years ago there was <em>no</em> other way to do this. Today, even Wordpress supports markdown out of the box.</p></li>
</ol>


<p>Given all this, I don&rsquo;t see a reason (other than good code formatting) why I shouldn&rsquo;t just stay in <a href="https://ello.co/agamb">Ello</a> instead.</p>

<p><em>Update</em>: Nah, I really want to be able to separate the &ldquo;code-related&rdquo; stuff from other stuff to talk about. So this blog stays &hellip;</p>
]]></content>
  </entry>
  
</feed>
