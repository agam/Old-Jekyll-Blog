<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: monthly | Agam's Mashed-Up Pome]]></title>
  <link href="http://agam.github.io/blog/categories/monthly/atom.xml" rel="self"/>
  <link href="http://agam.github.io/"/>
  <updated>2015-11-27T13:32:37-08:00</updated>
  <id>http://agam.github.io/</id>
  <author>
    <name><![CDATA[Agam]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Monthly Programming summary: November 2015]]></title>
    <link href="http://agam.github.io/blog/2015/11/27/monthly-programming-summary-november-2015/"/>
    <updated>2015-11-27T13:09:15-08:00</updated>
    <id>http://agam.github.io/blog/2015/11/27/monthly-programming-summary-november-2015</id>
    <content type="html"><![CDATA[<p>A second installment of &ldquo;interesting stuff I came across this month&rdquo; &hellip;</p>

<ul>
<li>A 1972 article in Rolling Stone magazine by Stewart Brand: <a href="http://www.wheels.org/spacewar/stone/rolling_stone.html"><em>&ldquo;Fanatic Life and Symbolic Death Among the Computer Bums&rdquo;</em></a>. If only the present had corresponded a little closer to the imagined future of the past, eh? :)</li>
</ul>


<blockquote><p>The hackers are the technicians of this science &ndash; <em>“It’s a term of derision and also the ultimate compliment.”</em> They are the ones who translate human demands into code that the machines can understand and act on. They are legion. <strong>Fanatics with a potent new toy</strong>. A mobile new-found elite, with its own apparat, language and character, its own legends and humor. Those magnificent men with their flying machines, scouting a leading edge of technology which has an odd softness to it; outlaw country, where rules are not decree or routine so much as the starker demands of what’s possible.</p></blockquote>

<ul>
<li><p>An excellent blog that was forced offline by vociferous commentors, but lives on in the depths of the Wayback Machine: <a href="http://web.archive.org/web/20140107054458/http://yinwang0.wordpress.com/"><em>&ldquo;Surely I am Joking&rdquo;</em></a> by Yin Wang. <em>All</em> the posts are good, my favorites are the ones on the downsides of &ldquo;pure&rdquo; FP and &ldquo;pure&rdquo; OOP (and <a href="http://web.archive.org/web/20140116155929/http://yinwang0.wordpress.com/2013/11/09/oop-fp">how the two are similar!</a>), the one on <a href="http://web.archive.org/web/20131127131340/http://yinwang0.wordpress.com/2012/09/16/what-is-a-program/"><em>&ldquo;what is a program?&rdquo;</em></a>, and the one on the <a href="http://web.archive.org/web/20140103011845/http://yinwang0.wordpress.com/2013/04/05/database/"><em>&ldquo;dark age of programming&rdquo;</em></a>.</p></li>
<li><p>A 1987 article in <em>&ldquo;Computer Language&rdquo;</em> magazine: <a href="http://bit-player.org/wp-content/extras/bph-publications/CompLang-1987-04-Hayes-mutant-lisps.pdf"><em>&ldquo;Mutant languages from the LISP lab&rdquo;</em></a> &mdash; just for fun, and an insight into the pre-Common Lisp era.</p></li>
<li><p>A humorous blog entry from 2009: <a href="http://james-iry.blogspot.com/2009/05/brief-incomplete-and-mostly-wrong.html"><em>&ldquo;A Brief, Incomplete, and Mostly Wrong History of Programming Languages&rdquo;</em></a>, with a self-explanatory title.</p></li>
</ul>


<p>And finally, a &ldquo;quote-of-the-month&rdquo;. This one is short and succinct <em>Perlisism</em>:</p>

<blockquote><p><strong>Computer Science is embarrassed by the computer.</strong></p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Monthly Programming summary: October 2015]]></title>
    <link href="http://agam.github.io/blog/2015/10/26/monthly-programming-summary/"/>
    <updated>2015-10-26T20:23:36-07:00</updated>
    <id>http://agam.github.io/blog/2015/10/26/monthly-programming-summary</id>
    <content type="html"><![CDATA[<p>Here&rsquo;s the first installment in an experiment &mdash; writing a monthly roundup of a few things I read/saw/did this month that I found sort of interesting. I do something on my (general, non-programming-specific) <a href="http://abacusnoirform.com/">personal blog</a>, so I thought the same might be a useful exercise here too.</p>

<p>In no particular order:</p>

<ul>
<li><p>The &ldquo;Balloon edition&rdquo; of BYTE magazine <a href="https://archive.org/stream/byte-magazine-1981-08/1981_08_BYTE_06-08_Smalltalk#page/n0/mode/2up">from 1981</a> &hellip; it&rsquo;s amazing how this stuff is <em>still</em> a revolutionary idea (also, the advertisements from three decades ago are hilarious)</p></li>
<li><p><em>&ldquo;&lsquo;SHOULD I learn to program?&rsquo; and &lsquo;Do I have to learn to program?&rsquo; are two variants of the question probably most asked by people testing the waters of computer ownership. The answer usually boils down to an emphatic &lsquo;that depends &hellip;, but probably not.&rsquo;&rdquo;</em> Sounds relevant? Sounds current? In fact, this is from a New York Times article <a href="http://www.nytimes.com/1984/01/17/science/personal-computers-does-everyone-need-to-learn-programming.html">from 1984 (!)</a>, titled <em>&ldquo;Personal computers: Does everyone need to learn programming?&rdquo;</em> (there is a conclusion to be drawn from this, but I won&rsquo;t go there)</p></li>
<li><p>I read through Dijkstra&rsquo;s <a href="https://www.cs.utexas.edu/users/EWD/">notes</a> a while ago, here&rsquo;s <a href="https://www.vex.net/~trebla/ewd.html">someone else&rsquo;s curated version</a> of them.</p></li>
<li><p>A Google Tech Talk from 2007 by Alex Wright, on <a href="https://www.youtube.com/watch?v=72nfrhXroo8"><em>&ldquo;The Web That Wasn&rsquo;t&rdquo;</em></a></p></li>
</ul>


<p>I&rsquo;ll leave you with this quote from Alan Kay:</p>

<blockquote><p>Perhaps it was commercialization in the 1980s that killed off the next expected new thing. Our plan and our hope was that the next generation of kids would come along and do something better than Smalltalk around 1984 or so. We all thought that the next level of programming language would be much more strategic and even policy-oriented and would have much more knowledge about what it was trying to do. But a variety of different things conspired together, and that next generation actually didn’t show up. <strong>One could actually argue—as I sometimes do—that the success of commercial personal computing and operating systems has actually led to a considerable retrogression in many, many respects.</strong></p></blockquote>
]]></content>
  </entry>
  
</feed>
