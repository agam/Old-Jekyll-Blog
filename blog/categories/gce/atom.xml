<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: gce | Agam's Mashed-Up Pome]]></title>
  <link href="http://agam.github.io/blog/categories/gce/atom.xml" rel="self"/>
  <link href="http://agam.github.io/"/>
  <updated>2015-05-17T04:41:30+00:00</updated>
  <id>http://agam.github.io/</id>
  <author>
    <name><![CDATA[Agam]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Google cloud: sharing projects]]></title>
    <link href="http://agam.github.io/blog/2014/12/23/google-cloud-sharing-projects/"/>
    <updated>2014-12-23T22:44:16+00:00</updated>
    <id>http://agam.github.io/blog/2014/12/23/google-cloud-sharing-projects</id>
    <content type="html"><![CDATA[<p>In the past (and yes, for some things, in the present too<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>) a few Google products have had UI with ambiguous workflows, or where it wasn&rsquo;t clear if or how to accomplish something.</p>

<p>So check this out; I found it <em>magical</em><sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>, you can easily try this with multiple Google accounts. In the cloud console<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup>, click on your project, then &ldquo;Permissions&rdquo; in the top left, and &ldquo;Add Member&rdquo;.</p>

<p>Enter the account, and then select the &ldquo;sharing level&rdquo; of the new account (with the <em>same</em> semantics as, say, Google Docs &mdash; you either <em>own</em>, <em>edit</em>, or <em>view</em>) and confirm.</p>

<p>Log in from the other account, go to the project, view a VM, click &ldquo;SSH&rdquo; and <em>Boom</em>, just like that, <strong>everything works</strong>!</p>

<p>This gist<sup id="fnref:4"><a href="#fn:4" rel="footnote">4</a></sup> shows all the steps that were needed!</p>

<p>```sh</p>

<h1>Download the command-line utilities</h1>

<p>$ curl <a href="https://sdk.cloud.google.com">https://sdk.cloud.google.com</a> | bash</p>

<h2>Authenticate</h2>

<p>$ gcloud auth login</p>

<h2>Sanity check</h2>

<p>$ gcloud info</p>

<h2>One-time configuration to avoid specifying command-line flags</h2>

<p>$ gcloud config set project &ldquo;&lt;project_id>&rdquo;
$ gcloud config set compute/zone us-central1-a</p>

<h2>Login!</h2>

<p>$ gcloud compute ssh agam@myvm
```</p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>No comment<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
<li id="fn:2">
<p>Ok, maybe everyone expects this and everything else works this well too, but it&rsquo;s still <em>wow</em><a href="#fnref:2" rev="footnote">&#8617;</a></p></li>
<li id="fn:3">
<p><a href="https://console.developers.google.com/">https://console.developers.google.com/</a><a href="#fnref:3" rev="footnote">&#8617;</a></p></li>
<li id="fn:4">
<p><a href="https://gist.github.com/agam/9f3207a7cdcd72745748">https://gist.github.com/agam/9f3207a7cdcd72745748</a><a href="#fnref:4" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[IO Performance (is that really an SSD?)]]></title>
    <link href="http://agam.github.io/blog/2014/12/18/io-performance-is-that-really-an-ssd/"/>
    <updated>2014-12-18T04:25:20+00:00</updated>
    <id>http://agam.github.io/blog/2014/12/18/io-performance-is-that-really-an-ssd</id>
    <content type="html"><![CDATA[<p>I created a new VM in Google Compute Engine a few days ago, and assigned it an SSD disk, and then began wondering <em>if it was really an SSD disk</em>.</p>

<p>(<em>Digression</em>: I never appreciated the difference an SSD makes until the first time a Macbook Air awoke from sleep <em>instantly</em>. From that moment onwards, the time taken for my desktop at home to show its login screen has <em>always</em> felt irritatingly long)</p>

<p>So, this is a crude benchmark of a &ldquo;regular&rdquo; hard drive on my workstation:</p>

<p>```sh
$ sudo hdparm -tT /dev/sda1</p>

<p>/dev/sda1:
 Timing cached reads:   20772 MB in  2.00 seconds = 10403.36 MB/sec
 Timing buffered disk reads: 242 MB in  1.34 seconds = 180.53 MB/sec
```</p>

<p>By the way, the &ldquo;fresh&rdquo; disk division for a new VM looks something like this:</p>

<p><code>sh
$ df -h
Filesystem                                              Size  Used Avail Use% Mounted on
rootfs                                                  9.9G  734M  8.7G   8% /
udev                                                     10M     0   10M   0% /dev
tmpfs                                                   3.0G  104K  3.0G   1% /run
/dev/disk/by-uuid/foo  9.9G  734M  8.7G   8% /
tmpfs                                                   5.0M     0  5.0M   0% /run/lock
tmpfs                                                   6.0G     0  6.0G   0% /run/shm
</code></p>

<p><code>foo</code> above is really a long uuid, which I subsituted to avoid repeating. This is the output from <code>hdparm</code>, run within my VM:</p>

<p><code>sh
agam@myvm:~$ sudo hdparm -tT /dev/disk/by-uuid/foo
/dev/disk/by-uuid/foo:
 Timing cached reads:   16996 MB in  2.00 seconds = 8506.48 MB/sec
 Timing buffered disk reads: 310 MB in  3.02 seconds = 102.65 MB/sec
</code></p>

<p>So that&rsquo;s &hellip; <em>confusing</em>. The two seem pretty close (and the SSD seems slower!) Obviously, we&rsquo;re looking at the wrong metric. The big distinguishing factor for these two types of storage is <em>seek time</em>. So instead of <code>hdparm</code>, let&rsquo;s try <code>ioping</code> instead.</p>

<p>Here&rsquo;s the workstation with the hard drive first (run twice, first random then sequential):</p>

<p>```sh
$ sudo ioping -R /dev/sda1</p>

<p>&mdash;&ndash; /dev/sda1 (device 243.0 MiB) ioping statistics &mdash;&ndash;
450 requests completed in 3.0 s, 150 iops, 600.3 KiB/s
min/avg/max/mdev = 54 us / 6.7 ms / 74.1 ms / 6.5 ms</p>

<p>$ sudo ioping -RL /dev/sda1</p>

<p>&mdash;&ndash; /dev/sda1 (device 243.0 MiB) ioping statistics &mdash;&ndash;
1.8 k requests completed in 3.0 s, 600 iops, 150.1 MiB/s
min/avg/max/mdev = 648 us / 1.7 ms / 152.2 ms / 5.2 ms
```</p>

<p>And now &hellip; here&rsquo;s the VM with the SSD:</p>

<p>```sh
agam@myvm:~$ sudo ioping -R /dev/disk/by-uuid/foo
&mdash;&ndash; /dev/disk/by-uuid/foo (device 10.0 Gb) ioping statistics &mdash;&ndash;
9020 requests completed in 3000.1 ms, 5016 iops, 19.6 mb/s
min/avg/max/mdev = 0.0/0.2/6.0/0.4 ms</p>

<p>agam@myvm:~$ sudo ioping -RL /dev/disk/by-uuid/foo
&mdash;&ndash; /dev/disk/by-uuid/foo (device 10.0 Gb) ioping statistics &mdash;&ndash;
1230 requests completed in 3002.0 ms, 439 iops, 109.6 mb/s
min/avg/max/mdev = 0.2/2.3/8.2/0.6 ms
```</p>

<p><em>Here</em> is where you see a big difference &hellip; a smaller one for the sequential case, but a huge one for the random case (at least an order of magnitude more).</p>

<p>So yeah, the SSD is legit.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Trying out FreeBSD (and failing at it)]]></title>
    <link href="http://agam.github.io/blog/2014/12/14/trying-out-freebsd-and-failing-at-it/"/>
    <updated>2014-12-14T22:00:13+00:00</updated>
    <id>http://agam.github.io/blog/2014/12/14/trying-out-freebsd-and-failing-at-it</id>
    <content type="html"><![CDATA[<p>Wait, what? Why?! No reason, really. I saw the new FreeBSD book<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> lying around in someone&rsquo;s office, and separately I was reminded of the week I spent getting Gentoo up and running a decade ago, and decided I missed all that and wanted to repeat a similar experience.</p>

<p>So, this is an attempt to both (1) install it within a VM on the Google Compute Engine<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>, and (2) slowly learn more about it. Here follows a log of everything I did, based on the original instructions from the mailing list <sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup>. (<em>Meta-note: if running remotely, be sensible; use <code>tmux</code> or <code>screen</code></em>)</p>

<h3><em>Step 1</em>: Install the emulator</h3>

<p><code>sh
$ sudo apt-get install qemu
</code></p>

<h3><em>Step 2</em>: Get the FreeBSD version to install &mdash; in my case, I picked the &ldquo;disc1&rdquo; version corresponding to the &ldquo;RELEASE&rdquo; image<sup id="fnref:4"><a href="#fn:4" rel="footnote">4</a></sup></h3>

<p><code>sh
$ wget ftp://ftp.freebsd.org/pub/FreeBSD/releases/amd64/amd64/ISO-IMAGES/10.1/FreeBSD-10.1-RELEASE-amd64-disc1.iso
</code></p>

<h3><em>Step 3</em>: Create the disk image for the emulator</h3>

<p><code>sh
$ qemu-img create disk.raw 100g
Formatting 'disk.raw', fmt=raw size=107374182400
</code></p>

<h3><em>Step 4</em>: Boot from the ISO downloaded earlier</h3>

<p>Notes:
&ndash; The original instructions also mention <code>--enable_kvm</code>, but that didn&rsquo;t work for me. I tried <code>sudo modprobe kvm-intel</code>, but <code>dmesg | grep kvm</code> informed me that it had been disabled by the Bios, so I skipped it here.
&ndash; If you are running this remotely (like I was), you&rsquo;ll have to add <code>--curses</code> to the <code>qemu</code> command line.</p>

<h3><em>Step 5</em>: Install FreeBSD</h3>

<p>At this point, if all went well, the emulator should boot up and you should see the &ldquo;Welcome&rdquo; screen, where you can hit &ldquo;Install&rdquo; and begin.</p>

<p>Notes:
&ndash; Pretty standard stuff, if you&rsquo;ve done a linux install before.
&ndash; When it came to the disk setup I chose <code>ufs</code> for no particular reason<sup id="fnref:5"><a href="#fn:5" rel="footnote">5</a></sup>, but you can choose any of the options; it&rsquo;ll show you the suggested table for the &ldquo;entire disk&rdquo; as split between <code>freebsd-boot</code>, <code>freebsd-ufs</code> and <code>freebsd-swap</code>, just hit <em>&ldquo;Finish&rdquo;</em> and then <em>&ldquo;Commit&rdquo;</em> to proceed.
&ndash; Take a nice long break when the <em>&ldquo;Archive Extraction&rdquo;</em> step begins; this is computationally intensive, and (especially without <code>kvm</code> enabled) takes a <em>long</em> time on the emulator.
&ndash; DNS settings are <code>google.internal.</code> for the <em>&ldquo;search&rdquo;</em>, and <code>169.254.169.254</code> for the DNS IP.
&ndash; Include <code>sshd</code> and <code>ntpd</code> in the list of services to start at boot</p>

<h3><em>Step 6</em>: Further configuration (as root)</h3>

<p>Once you hit <em>&ldquo;Exit&rdquo;</em> at the end, choose the option to drop into a shell and then run the following:</p>

<p>```sh
echo &lsquo;console=&ldquo;comconsole&rdquo;&rsquo; >>/etc/rc.conf
echo ‘console=”comconsole”’ > /boot/loader.conf
sed -I -e “/hostname/d” /etc/rc.conf
echo -Dh >/boot.config</p>

<p>cat &lt;<EOF >/etc/dhclient.conf
interface &ldquo;vtnet0&rdquo; {
  supersede subnet-mask 255.255.0.0;
}
EOF</p>

<p>sed -I -e “/server/d” /etc/ntp.conf
echo “server 169.254.169.254” >> /etc/ntp.conf</p>

<p>echo “169.254.169.254 metadata.google.internal metadata” >> /etc/hosts
```</p>

<h3><em>Step 7</em>: Add yourself as a user</h3>

<ul>
<li>Run <code>adduser</code> and follow the prompts<sup id="fnref:6"><a href="#fn:6" rel="footnote">6</a></sup></li>
<li>Add yourself to the <code>wheel</code> group. E.g. in my case:
<code>sh
$ pw user mod agam -G wheel
</code></li>
<li>Allow yourself to login via <code>ssh</code>:
<code>sh
$ sed -I -e “s/#PasswordAuthentication no/PasswordAuthentication yes/” /etc/ssh/sshd_config
</code></li>
</ul>


<h3><em>Step 8</em>: Setup GCE (within the image)</h3>

<ul>
<li>Enable either OpenDNS or Google Public DNS . E.g. for the latter:
<code>sh
$ echo “nameserver 8.8.8.8” &gt;&gt; /etc/resolv.conf
</code></li>
<li>Install <code>sudo</code>, <code>python</code><sup id="fnref:7"><a href="#fn:7" rel="footnote">7</a></sup>, and <code>wget</code><sup id="fnref:8"><a href="#fn:8" rel="footnote">8</a></sup></li>
<li>Get <code>gcloud</code><a href="" title="More information [here](https://cloud.google.com/compute/docs/gcloud-compute/)">^9</a></li>
<li>Remove the DNS record added earlier:
<code>sh
$ sed -I -e “/8.8.8.8/d” /etc/resolv.conf
</code></li>
<li>Turn off FreeBSD (run <code>poweroff</code>)</li>
</ul>


<h3><em>Step 9</em>: Setup GCE (on your workstation)</h3>

<ul>
<li>Install <code>gcloud</code> (as before)</li>
<li>Authenticate: Run <code>gcloud auth login</code> and follow the url to enter the code</li>
<li>Prepare the image for upload: <code>tar -Szcf freebsd.tar.gz disk.raw</code></li>
<li>Create a bucket<sup id="fnref:9"><a href="#fn:9" rel="footnote">9</a></sup> and upload<sup id="fnref:10"><a href="#fn:10" rel="footnote">10</a></sup> the image there (Note: I was shocked, <em>shocked</em>, by how <em>fast</em> this upload went!)</li>
<li><p>Prepare the image for use in your VM and insert it
<code>sh
$ gcutil addimage freebsd gs://&lt;bucket&gt;/&lt;object&gt;
$ gcutil --project &lt;project_id&gt; freebsd gs://&lt;bucket&gt;/&lt;object&gt;
</code></p></li>
<li><p>Add a VM and SSH to it (both these operations can be done either through the &ldquo;Google Cloud Console&rdquo; or the command-line client<sup id="fnref:11"><a href="#fn:11" rel="footnote">11</a></sup>). E.g. in my case the latter is
<code>&gt; gcloud compute ssh myvm</code><sup id="fnref:12"><a href="#fn:12" rel="footnote">12</a></sup></p></li>
</ul>


<h3><em>Step 10</em>: Nope</h3>

<p>Yeah this didn&rsquo;t work for me. Luckily, the &ldquo;serial console&rdquo; can be viewed through the dashboard, and what I saw was a repeated failure to boot.</p>

<p>```
Mounting local file systems:.
Writing entropy file:.
vtnet0: link state changed to UP
Starting Network: lo0 vtnet0.
lo0: flags=8049&lt;UP,LOOPBACK,RUNNING,MULTICAST> metric 0 mtu 16384</p>

<pre><code> options=600003&lt;RXCSUM,TXCSUM,RXCSUM_IPV6,TXCSUM_IPV6&gt;
 inet6 ::1 prefixlen 128 
 inet6 fe80::1%lo0 prefixlen 64 scopeid 0x2 
 inet 127.0.0.1 netmask 0xff000000 
 nd6 options=21&lt;PERFORMNUD,AUTO_LINKLOCAL&gt;
</code></pre>

<p>vtnet0: flags=8943&lt;UP,BROADCAST,RUNNING,PROMISC,SIMPLEX,MULTICAST> metric 0 mtu 1500</p>

<pre><code>options=6c01bb&lt;RXCSUM,TXCSUM,VLAN_MTU,VLAN_HWTAGGING,JUMBO_MTU,VLAN_HWCSUM,TSO4,VLAN_HWTSO,LINKSTATE,RXCSUM_IPV6,TXCSUM_IPV6&gt;
ether 42:01:0a:f0:c8:6c
nd6 options=29&lt;PERFORMNUD,IFDISABLED,AUTO_LINKLOCAL&gt;
media: Ethernet 10Gbase-T &lt;full-duplex&gt;
status: active
</code></pre>

<p>Starting devd.
Starting dhclient.
DHCPREQUEST on vtnet0 to 255.255.255.255 port 67
DHCPNAK from 169.254.169.254
DHCPDISCOVER on vtnet0 to 255.255.255.255 port 67 interval 8
DHCPOFFER from 169.254.169.254
DHCPREQUEST on vtnet0 to 255.255.255.255 port 67
DHCPACK from 169.254.169.254
panic: ffs_write: type 0xfffff80008a1cb10 0 (0,150)
cpuid = 2
KDB: stack backtrace:</p>

<h1>0 0xffffffff80963000 at kdb_backtrace+0x60</h1>

<h1>1 0xffffffff80928125 at panic+0x155</h1>

<h1>2 0xffffffff80b7f825 at ffs_write+0x5b5</h1>

<h1>3 0xffffffff80e428f5 at VOP_WRITE_APV+0x145</h1>

<h1>4 0xffffffff809d96f9 at vn_write+0x259</h1>

<h1>5 0xffffffff809d598b at vn_io_fault+0x10b</h1>

<h1>6 0xffffffff8097a437 at dofilewrite+0x87</h1>

<h1>7 0xffffffff8097a168 at kern_writev+0x68</h1>

<h1>8 0xffffffff8097a0f3 at sys_write+0x63</h1>

<h1>9 0xffffffff80d25851 at amd64_syscall+0x351</h1>

<h1>10 0xffffffff80d0aa6b at Xfast_syscall+0xfb</h1>

<p>Uptime: 7s
```</p>

<p>Looks like this may be a corrupt disk? Not sure. But pretty bummed :(</p>

<p><em><strong>Update</strong></em>: I see people having luck with either (1) building a &ldquo;rescue disk&rdquo; on a running FreeBSD machine (not an option for me), or (2) using the <code>mfsbsd</code><sup id="fnref:13"><a href="#fn:13" rel="footnote">13</a></sup> remote install. I think I&rsquo;ll try the latter when I get time.</p>

<p><em><strong>Update</strong></em>: Here&rsquo;s how that went :&ndash;</p>

<ul>
<li>Get the <code>mfsbsd</code> image<sup id="fnref:14"><a href="#fn:14" rel="footnote">14</a></sup></li>
</ul>


<p><code>sh
$curl -o disk.raw http://mfsbsd.vx.sk/files/iso/10/amd64/mfsbsd-se-10.1-RELEASE-amd64.iso`
</code></p>

<ul>
<li>Tar it, upload it</li>
</ul>


<p><code>sh
$ tar -Szcf mfs-freebsd.tar.gz disk.raw
$ gsutil cp mfs-freebsd.tar.gz gs://&lt;bucket_name&gt;
$ gcutil addimage mfs-freebsd gs://&lt;bucket_name&gt;/mfs-freebsd.tar.gz
</code></p>

<ul>
<li>Create a VM with this instance</li>
</ul>


<p>Aaand &hellip; NOPE again; fails to even show the serial console this time :(
Error: <code>The resource 'projects/algol-c/zones/us-central1-a/instances/myvm' is not ready</code></p>

<ul>
<li>Deleted the VM and created it again<sup id="fnref:15"><a href="#fn:15" rel="footnote">15</a></sup></li>
</ul>


<p>Failed again, but this time I grabbed the output before it vanished:</p>

<p>```
Unable to lock ram &ndash; bridge not found
Changing serial settings was 3/2 now 3/0
enter handle_19:
  NULL
Booting from Hard Disk&hellip;
Boot failed: not a bootable disk</p>

<p>enter handle_18:
  NULL
Booting from Floppy&hellip;
Boot failed: could not read the boot disk</p>

<p>enter handle_18:
  NULL
No bootable device.  Powering off VM.
END OF LINE
  Retrying in 60 seconds.
```</p>

<ul>
<li><em>Of course!</em> I have to <em>make</em> a bootable image using this iso (!) But, But, But &hellip;. that needs a running FreeBSD system?!</li>
</ul>


<p><em><strong>Update</strong></em>: Damn, looks like GCE is behind both Amazon and (wtf!) Microsoft on this. From the release notes for v10.1:</p>

<blockquote><p>FreeBSD 10.1-RELEASE is also available on these cloud hosting platforms:</p>

<ul>
<li>Amazon® EC2™ FreeBSD/amd64</li>
<li>Microsoft® Azure™ FreeBSD/amd64,  FreeBSD/i386</li>
</ul>
</blockquote>

<p><em><strong>Conclusion</strong></em>: The <code>qemu</code> path should have worked, I don&rsquo;t yet understand why not. Another option might be to try the <em>vhd</em> image and get that to work. Or try EC2/Azure. Or wait for someone to figure this out and publicly share a working image. Or give up on FreeBSD and get back &ldquo;to real work&rdquo; :)</p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>The <a href="http://www.amazon.com/gp/product/0321968972/ref=pd_lpo_sbs_dp_ss_1?pf_rd_p=1944687562&amp;pf_rd_s=lpo-top-stripe-1&amp;pf_rd_t=201&amp;pf_rd_i=0201702452&amp;pf_rd_m=ATVPDKIKX0DER&amp;pf_rd_r=0QBY4BRZHVN8ZNNFWDMW">newer edition</a> of &ldquo;The Design and Implementation of the FreeBSD Operating System&rdquo;<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
<li id="fn:2">
<p>Yes, I&rsquo;ve heard <a href="http://www.daemonology.net/freebsd-on-ec2/">the Amazon experience</a> is easier, but that would be &hellip; uh &hellip; slightly disloyal right now :P<a href="#fnref:2" rev="footnote">&#8617;</a></p></li>
<li id="fn:3">
<p>https://groups.google.com/forum/#!msg/gce-discussion/YWoa3Aa_49U/FYAg9oiRlLUJ<a href="#fnref:3" rev="footnote">&#8617;</a></p></li>
<li id="fn:4">
<p>From <a href="ftp://ftp.freebsd.org/pub/FreeBSD/releases/amd64/amd64/ISO-IMAGES/10.1/">this list</a><a href="#fnref:4" rev="footnote">&#8617;</a></p></li>
<li id="fn:5">
<p>Don&rsquo;t necessarily care too much about the <a href="http://www.smbitjournal.com/2014/05/the-cult-of-zfs/">&ldquo;Cult of ZFS&rdquo;</a>; besides, UFS is faster.<a href="#fnref:5" rev="footnote">&#8617;</a></p></li>
<li id="fn:6">
<p>Shell choices are <code>sh</code>/<code>csh</code>/<code>tcsh</code>, with the first being the default option. Take your pick; I&rsquo;m going to replace <code>sh</code> with <code>bash</code> later anyway.<a href="#fnref:6" rev="footnote">&#8617;</a></p></li>
<li id="fn:7">
<p>If you try to guess and install Python 3, you&rsquo;ll see this error: <code>ERROR: Python 3 is not supported by the Google Cloud SDK.  Please use a Python 2.x version that is 2.6 or greater</code> (Do as it says! (Also, you might not want to put bets on python 3?))<a href="#fnref:7" rev="footnote">&#8617;</a></p></li>
<li id="fn:8">
<p>Either run <code>pkg_add -r</code> for each tool, or compile it from source with ports. For the latter, first run <code>portsnap fetch</code>, <code>portsnap extract</code>, and <code>portsnap update</code>, in that order (this is a one-time setup), then <code>cd</code> to the appropriate directory under <code>/usr/ports</code> and run <code>make install</code> for each tool (<strong>warning</strong>: this takes a long, long, <em>long</em> time! If you&rsquo;re running the emulator without <code>kvm</code> support, you have to be <em>extremely masochistic</em> to try compiling from source).<a href="#fnref:8" rev="footnote">&#8617;</a></p></li>
<li id="fn:9">
<p><code>gsutil -p &lt;project_id&gt; -c gs://&lt;bucket_name&gt;</code><a href="#fnref:9" rev="footnote">&#8617;</a></p></li>
<li id="fn:10">
<p><code>gsutil cp &lt;gzipped_file&gt; gs://&lt;bucket_name&gt;</code><a href="#fnref:10" rev="footnote">&#8617;</a></p></li>
<li id="fn:11">
<p>https://cloud.google.com/sdk/gcloud/reference/compute/instances/create<a href="#fnref:11" rev="footnote">&#8617;</a></p></li>
<li id="fn:12">
<p>You also need a <code>--project</code> flag, but you can set a global value for this by running <code>gcloud config set project &lt;project_id&gt;</code><a href="#fnref:12" rev="footnote">&#8617;</a></p></li>
<li id="fn:13">
<p>https://www.freebsd.org/doc/en_US.ISO8859-1/articles/remote-install/preparation.html<a href="#fnref:13" rev="footnote">&#8617;</a></p></li>
<li id="fn:14">
<p>In case you were wondering, the file name inside the uploaded image <em>has</em> to be <code>disk.raw</code><a href="#fnref:14" rev="footnote">&#8617;</a></p></li>
<li id="fn:15">
<p>&ldquo;Terminated&rdquo; VMs have to be dealt with this way, AFAICS<a href="#fnref:15" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting up a Haskell webserver to run in Google Compute Engine]]></title>
    <link href="http://agam.github.io/blog/2013/03/11/webserver-in-google-compute-engine/"/>
    <updated>2013-03-11T00:00:00+00:00</updated>
    <id>http://agam.github.io/blog/2013/03/11/webserver-in-google-compute-engine</id>
    <content type="html"><![CDATA[<p>I signed up for a project at the <a href="https://cloud.google.com/console#c=l">Google Cloud Console</a>, and decided to try running a webserver on it, as a prerequisite to other future toy projects I might link to it.</p>

<h2>First steps</h2>

<p>Get <a href="https://developers.google.com/compute/docs/gcutil/"><code>gcutil</code></a> and install it</p>

<p><code>sh
$ sudo tar xvpzf gcutil-1.7.1.tar.gz  -C /usr/local/share
$ sudo ln -s /usr/local/share/gcutil-1.7.1/gcutil /usr/local/bin/gcutil
</code></p>

<p>Then, link it up to your project</p>

<p><code>sh
$ gcutil auth --project=agam-personal-project
</code></p>

<p>It&rsquo;s a good idea to avoid entering the <code>--project=</code> bit every time, by saving your project name</p>

<p><code>sh
$ gcutil getproject --project=agam-personal-project --cache_flag_values
+--------------------------+-------------------------------+
|         property         |             value             |
+--------------------------+-------------------------------+
| name                     | agam-personal-project                     |
| description              |                               |
| creation-time            | 2012-10-30T13:52:46.571-07:00 |
| ips                      | 108.59.85.232,173.255.125.245 |
|                          |                               |
| usage                    |                               |
|   instances              | 0.0/4.0                       |
|   cpus                   | 0.0/4.0                       |
|   ephemeral-addresses    | 0.0/4.0                       |
|   disks                  | 0.0/4.0                       |
|   disks-total-gb         | 0.0/250.0                     |
|   snapshots              | 0.0/20.0                      |
|   networks               | 1.0/1.0                       |
|   firewalls              | 2.0/10.0                      |
|   images                 | 0.0/4.0                       |
|                          |                               |
| common-instance-metadata |                               |
+--------------------------+-------------------------------+
</code></p>

<p>By default, incoming HTTP is blocked. So enable it.</p>

<p>```sh
$ gcutil addfirewall http2 &mdash;description=&ldquo;Allow incoming http&rdquo; &mdash;allowed=&ldquo;tcp:http&rdquo;
INFO: Waiting for insert of firewall http2. Sleeping for 3s.
INFO: Waiting for insert of firewall http2. Sleeping for 3s.</p>

<p>Table of resources:</p>

<p>+&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+
| name  |     description     |     network      | source-ips | source-tags | target-tags |
+&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+
| http2 | Allow incoming http | networks/default | 0.0.0.0/0  |             |             |
+&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+</p>

<p>Table of operations:</p>

<p>+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&ndash;+
|                      name                      | zone | status | status-message |     target      |          insert-time          | operation-type | error | warning |
+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&ndash;+
| operation-1362984707558-4d7a09b531841-ea2eb01d |      | DONE   |                | firewalls/http2 | 2013-03-10T23:51:47.558-07:00 | insert         |       |         |
+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&ndash;+
```</p>

<p>And now it&rsquo;s time to make choices!</p>

<p>```sh
gcutil addinstance basic-webserver-instance
1: europe-west1-a  (currently in maintenance)
2: europe-west1-b
3: us-central1-a
4: us-central1-b
5: us-central2-a</p>

<blockquote><blockquote><blockquote><p>3
```</p></blockquote></blockquote></blockquote>

<p>No particular reason, I picked <code>us-central1-a</code> (why no <code>us-west</code> ?). I wasn&rsquo;t sure which <a href="https://cloud.google.com/pricing/compute-engine">instance type</a> to pick &hellip; I went with the cheapest option with a disk (#2) for now.</p>

<p>```sh
1: n1-standard-1
2: n1-standard-1-d
3: n1-standard-2
4: n1-standard-2-d
5: n1-standard-4
6: n1-standard-4-d
7: n1-standard-8
8: n1-standard-8-d
9: n1-highcpu-2
10: n1-highcpu-2-d
11: n1-highcpu-4
12: n1-highcpu-4-d
13: n1-highcpu-8
14: n1-highcpu-8-d
15: n1-highmem-2
16: n1-highmem-2-d
17: n1-highmem-4
18: n1-highmem-4-d
19: n1-highmem-8
20: n1-highmem-8-d</p>

<blockquote><blockquote><blockquote><p>2
```</p></blockquote></blockquote></blockquote>

<p>10 choices of a host OS, I picked what seemed to be the latest <code>gcel</code> one.</p>

<p>```sh
1: projects/google/global/images/centos-6-v20121106
2: projects/google/global/images/centos-6-v20130104
3: projects/google/global/images/centos-6-v20130225
4: projects/google/global/images/gcel-10-04-v20121106
5: projects/google/global/images/gcel-10-04-v20130104
6: projects/google/global/images/gcel-10-04-v20130225
7: projects/google/global/images/gcel-12-04-v20121106
8: projects/google/global/images/gcel-12-04-v20130104
9: projects/google/global/images/gcel-12-04-v20130225
10: projects/google/global/images/centos-6-v20120912 (DEPRECATED)</p>

<blockquote><blockquote><blockquote><p>9
```</p></blockquote></blockquote></blockquote>

<p>If this is the first time running <code>gcutil</code> it will ask you to enter a passphrase for authentication, and then your instance should be inserted. As you can see below, this took about 35s for me.</p>

<p>```sh
INFO: Waiting for insert of instance basic-webserver-instance. Sleeping for 3s.
INFO: Waiting for insert of instance basic-webserver-instance. Sleeping for 3s.
INFO: Waiting for insert of instance basic-webserver-instance. Sleeping for 3s.
INFO: Waiting for insert of instance basic-webserver-instance. Sleeping for 3s.
INFO: Waiting for insert of instance basic-webserver-instance. Sleeping for 3s.
INFO: Waiting for insert of instance basic-webserver-instance. Sleeping for 3s.
INFO: Waiting for insert of instance basic-webserver-instance. Sleeping for 3s.
INFO: Waiting for insert of instance basic-webserver-instance. Sleeping for 3s.
INFO: Waiting for insert of instance basic-webserver-instance. Sleeping for 3s.
INFO: Waiting for insert of instance basic-webserver-instance. Sleeping for 3s.
INFO: Waiting for insert of instance basic-webserver-instance. Sleeping for 3s.</p>

<p>Table of resources:</p>

<p>+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+
|           name           |         machine-type         |                       image                        |     network      |  network-ip   |  external-ip  | disks |     zone      | status  | status-message |
+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+
| basic-webserver-instance | machineTypes/n1-standard-1-d | projects/google/global/images/gcel-12-04-v20130225 | networks/default | 10.240.31.254 | 108.59.80.144 |       | us-central1-a | RUNNING |                |
+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+</p>

<p>Table of operations:</p>

<p>+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&ndash;+
|                      name                      |     zone      | status | status-message |                      target                      |          insert-time          | operation-type | error | warning |
+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&ndash;+
| operation-1362986355529-4d7a0fd8d07a1-a21d7f92 | us-central1-a | DONE   |                | us-central1-a/instances/basic-webserver-instance | 2013-03-11T00:19:15.529-07:00 | insert         |       |         |
+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&ndash;+
```</p>

<p>You can then check if the instance matches what you wanted.</p>

<p><code>sh
$ gcutil getinstance basic-webserver-instance
(output skipped)
</code></p>

<h2>Installing Stuff</h2>

<p>Now that the instance is ready to go, you can ssh to it and get the stuff we need.</p>

<p>```sh
$ gcutil ssh basic-webserver-instance
&hellip;
&hellip; (skipping boilerplate)
&hellip;
 * You appear to be running on an EPHEMERAL root disk.  Changes may be lost.
  For persistent data, use Persistent Disks:
  <a href="https://developers.google.com/compute/docs/disks#persistentdisks">https://developers.google.com/compute/docs/disks#persistentdisks</a></p>

<p>agam@basic-webserver-instance:~$ sudo df -h
Filesystem      Size  Used Avail Use% Mounted on
/dev/sda1       9.6G 1019M  8.1G  12% /
none            1.9G  4.0K  1.9G   1% /dev
none            377M  140K  377M   1% /run
none            5.0M     0  5.0M   0% /run/lock
none            1.9G     0  1.9G   0% /run/shm
```</p>

<p>Yeah, the instance doesn&rsquo;t come with a persistent disk. So if you decide to delete the instance, your data is gone.</p>

<p>Eventually, I&rsquo;ll attach <a href="https://developers.google.com/compute/docs/disks#persistentdisks">persistent disks</a> and also use a <a href="https://developers.google.com/compute/docs/robustsystems#startup">startup script</a> to allow me to quickly recreate VM state on new instances, but I&rsquo;ll punt on those for now.</p>

<p>Anyway, let&rsquo;s start installing stuff</p>

<p><code>sh
$ sudo apt-get install haskell-platform
...
$ cabal update
...
$ cabal install yesod-platform
...
</code></p>

<p>Haskell packages are still a bit flaky. For instance, I got this error and had to ignore it and pray nothing broke:</p>

<p><code>sh
Warning: The following packages are likely to be broken by the reinstalls:
regex-posix-0.95.1
</code></p>

<p>BTW this takes a <em>long</em> <em>long</em> time to complete, so go do something else for 5-10 minutes and then come back.</p>

<h2>Running Yesod</h2>

<p>For this example, I&rsquo;m going to do a basic webserver, though the right thing to do in this case is to choose the option to configure the urls to be used with <a href="https://developers.google.com/storage/docs/getting-started">Google Cloud Storage</a></p>

<p>```sh
agam@basic-webserver-instance:~$ yesod init
Welcome to the Yesod scaffolder.
I&rsquo;m going to be creating a skeleton Yesod project for you.</p>

<p>What do you want to call your project? We&rsquo;ll use this for the cabal name.</p>

<p>Project name: AgamsWeb
Yesod uses Persistent for its (you guessed it) persistence layer.
This tool will build in either SQLite or PostgreSQL or MongoDB support for you.
We recommend starting with SQLite: it has no dependencies.</p>

<pre><code>s      = sqlite
p      = postgresql
pf     = postgresql + Fay (experimental)
mongo  = mongodb
mysql  = MySQL
simple = no database, no auth
url    = Let me specify URL containing a site (advanced)
</code></pre>

<p>So, what&rsquo;ll it be? s
```</p>

<p>This sets up a basic scaffold with a few directories</p>

<p><code>sh
agam@basic-webserver-instance:~/AgamsWeb$ ls -l
total 68
-rw-rw-r-- 1 agam agam 3907 Mar 11 08:18 AgamsWeb.cabal
-rw-rw-r-- 1 agam agam 2723 Mar 11 08:18 Application.hs
-rw-rw-r-- 1 agam agam 6583 Mar 11 08:18 Foundation.hs
drwxrwxr-x 2 agam agam 4096 Mar 11 08:18 Handler
-rw-rw-r-- 1 agam agam 1057 Mar 11 08:18 Import.hs
-rw-rw-r-- 1 agam agam  415 Mar 11 08:18 Model.hs
drwxrwxr-x 2 agam agam 4096 Mar 11 08:18 Settings
-rw-rw-r-- 1 agam agam 2736 Mar 11 08:18 Settings.hs
drwxrwxr-x 2 agam agam 4096 Mar 11 08:18 app
drwxrwxr-x 2 agam agam 4096 Mar 11 08:18 config
drwxrwxr-x 2 agam agam 4096 Mar 11 08:18 deploy
-rw-rw-r-- 1 agam agam  709 Mar 11 08:18 devel.hs
drwxrwxr-x 2 agam agam 4096 Mar 11 08:18 messages
drwxrwxr-x 4 agam agam 4096 Mar 11 08:18 static
drwxrwxr-x 2 agam agam 4096 Mar 11 08:18 templates
drwxrwxr-x 2 agam agam 4096 Mar 11 08:18 tests
</code></p>

<p>Now to start this (empty) webserver</p>

<p><code>sh
$ cabal install
$ yesod devel
</code></p>

<p>This starts the server on <code>localhost:3000</code>. Now the Yesod folks recommend running <code>nginx</code> as a reverse proxy in front, so let&rsquo;s do that (though it&rsquo;s obviously overkill for this example).</p>

<p><code>sh
$ sudo apt-get install nginx
</code></p>

<p>Create a basic reverse proxy config</p>

<p>```yaml
events {</p>

<pre><code>worker_connections 4096;
</code></pre>

<p>}</p>

<p>http {</p>

<pre><code>server {
    listen 80;
    location / {
        proxy_pass http://127.0.0.1:3000/;
    }
}
</code></pre>

<p>}
```</p>

<p>Then run nginx</p>

<p><code>sh
sudo nginx -c nginx.conf
</code></p>

<p>Hmm &hellip; ok &hellip; for whatever reason that didn&rsquo;t work. This seems like a fairly straightforward config. Screw it, run yesod directly on port 80.</p>

<p><code>sh
sudo yesod devel --port=80
</code></p>

<p>Now, if you open the associated IP in your browser, you should see the standard &ldquo;Welcome to Yesod&rdquo; placeholder !!</p>
]]></content>
  </entry>
  
</feed>
