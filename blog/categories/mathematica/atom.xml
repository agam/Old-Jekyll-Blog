<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: mathematica | Agam's Mashed-Up Pome]]></title>
  <link href="http://agam.github.io/blog/categories/mathematica/atom.xml" rel="self"/>
  <link href="http://agam.github.io/"/>
  <updated>2015-11-27T13:32:37-08:00</updated>
  <id>http://agam.github.io/</id>
  <author>
    <name><![CDATA[Agam]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Mathematica: 1/9998]]></title>
    <link href="http://agam.github.io/blog/2014/01/30/mathematica-1-slash-9998/"/>
    <updated>2014-01-30T23:00:00-08:00</updated>
    <id>http://agam.github.io/blog/2014/01/30/mathematica-1-slash-9998</id>
    <content type="html"><![CDATA[<p>I saw this piece about how <code>1/1998</code> was approximated by series of powers of <code>2</code>, which raised the question, &ldquo;Can Mathematica help confirm this?&rdquo; (<em>of course it can!</em>)</p>

<p>First, a gut check to see the decimal expansion</p>

<p><code>
N[1/9998, 100]
</code></p>

<p>which shows</p>

<p><code>
0.00010002000400080016003200640128025605121024204840968193638727745549 \
10982196439287857571514302860572114
</code></p>

<p>(if you don&rsquo;t specify the <code>100</code> in the argument to <code>N[]</code>, it will show you just <code>0.00010002</code> by default)</p>

<p>This can be visualized as</p>

<p><code>
0.0001 +
0.00000002 +
0.000000000004 +
0.0000000000000008 +
0.00000000000000000016 +
...
0.000000000000000000000000000000000256 +
...
</code></p>

<p>All right, so we do see these powers of 2! They seem to be in &ldquo;groups&rdquo; &mdash; <code>0004</code>, <code>0016</code>, <code>1024</code> and so on.</p>

<p>So we want to check if something like <code>2^i/10000^i</code> can add up to this number.</p>

<p><code>
Parallelize[
 Table[1/9998 - Total[Table[2^i/10000^i, {i, 1, n}]], {n, 1, 10000}] ]
</code></p>

<p>I initially tried this <em>without</em> <code>Parallelize[]</code>, but that kept going <em>for a while</em>, so I had to abort it (<code>Evaluation</code>&ndash;><code>Abort Evaluation</code>) and try this version instead.</p>

<p>Anyway, so this whirs for a while. As this <code>htop</code> output shows, it really does use as many cores as possible.</p>

<p><img class="center <a" src="href="http://farm6.staticflickr.com/5504/12227941034_4ce9d69db4_z_d.jpg">http://farm6.staticflickr.com/5504/12227941034_4ce9d69db4_z_d.jpg</a>"></p>

<p>Eventually when it&rsquo;s done, we can <code>ListPlot</code> it.</p>

<p><code>
ListPlot[%118, Frame -&gt; True, FrameStyle -&gt; Black,
 PlotRange -&gt; { {1, 10000}, {-0.000105, -0.000095} }]
</code></p>

<p><img class="center <a" src="href="http://farm6.staticflickr.com/5535/12227532975_ee70979b52_z_d.jpg">http://farm6.staticflickr.com/5535/12227532975_ee70979b52_z_d.jpg</a>"></p>

<p>As this graph shows, the result is remarkably close to a constant value of <code>-0.0001</code> !!</p>
]]></content>
  </entry>
  
</feed>
