<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: sbcl | Agam's Mashed-Up Pome]]></title>
  <link href="http://agam.github.io/blog/categories/sbcl/atom.xml" rel="self"/>
  <link href="http://agam.github.io/"/>
  <updated>2015-09-16T08:03:46+00:00</updated>
  <id>http://agam.github.io/</id>
  <author>
    <name><![CDATA[Agam]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Lisp performance check-up]]></title>
    <link href="http://agam.github.io/blog/2015/01/07/lisp-performance-check-up/"/>
    <updated>2015-01-07T06:22:09+00:00</updated>
    <id>http://agam.github.io/blog/2015/01/07/lisp-performance-check-up</id>
    <content type="html"><![CDATA[<p>Came across <a href="https://github.com/pixie-lang/pixie">pixie-lang</a>, and it had this bit about &ldquo;<em>the loop compiles down to six instructions!</em>&rdquo;</p>

<p>So I decided to go and satisfy my curiosity about just how many instructions a loop like this <em>should</em> be expected to compile down to.</p>

<p>```lisp
CL-USER> (defun add-fn (args)</p>

<pre><code>       (reduce #'+ args))
</code></pre>

<p>```</p>

<p>which obviously runs as</p>

<p><code>lisp
CL-USER&gt; (add-fn '(3 4 5))
12
</code></p>

<p>Now, a look at what&rsquo;s going on &ldquo;under the hood&rdquo;</p>

<p>```lisp
CL-USER> (disassemble #&lsquo;add-fn)
; disassembly for ADD-FN
; Size: 42 bytes. Origin: #x1004FBC3F8
; 3F8:       498B4C2460       MOV RCX, [R12+96]               ; thread.binding-stack-pointer</p>

<pre><code>                                                          ; no-arg-parsing entry point
</code></pre>

<p>; 3FD:       48894DF8         MOV [RBP-8], RCX
; 401:       488B1598FFFFFF   MOV RDX, [RIP-104]              ; #<FUNCTION +>
; 408:       488BFE           MOV RDI, RSI
; 40B:       488B0596FFFFFF   MOV RAX, [RIP-106]              ; #<FDEFINITION for REDUCE>
; 412:       B904000000       MOV ECX, 4
; 417:       FF7508           PUSH QWORD PTR [RBP+8]
; 41A:       FF6009           JMP QWORD PTR [RAX+9]
; 41D:       CC0A             BREAK 10                        ; error trap
; 41F:       02               BYTE #X02
; 420:       19               BYTE #X19                       ; INVALID-ARG-COUNT-ERROR
; 421:       9A               BYTE #X9A                       ; RCX
NIL
```</p>

<p>Ok, let&rsquo;s see if we can slightly improve that</p>

<p>```lisp
CL-USER> (defun add-fn (args)</p>

<pre><code>       (declare (optimize (speed 3) (safety 0)))
       (reduce #'+ args))
</code></pre>

<p>```</p>

<p>```lisp
CL-USER> (disassemble #&lsquo;add-fn)
; disassembly for ADD-FN
; Size: 25 bytes. Origin: #x10051BDB12
; 12:       488B15A7FFFFFF   MOV RDX, [RIP-89]                ; #<FUNCTION +></p>

<pre><code>                                                          ; no-arg-parsing entry point
</code></pre>

<p>; 19:       488B05A8FFFFFF   MOV RAX, [RIP-88]                ; #<FDEFINITION for REDUCE>
; 20:       B904000000       MOV ECX, 4
; 25:       FF7508           PUSH QWORD PTR [RBP+8]
; 28:       FF6009           JMP QWORD PTR [RAX+9]
```</p>

<p>Pretty sweet, eh? <em>You don&rsquo;t get that kind of feedback every day</em>.</p>

<p>This was all run on 64-bit SBCL:</p>

<p><code>lisp
CL-USER&gt; (lisp-implementation-type)
"SBCL"
CL-USER&gt; (lisp-implementation-version)
"1.2.7"
</code></p>
]]></content>
  </entry>
  
</feed>
