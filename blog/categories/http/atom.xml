<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: http | Agam's Mashed-Up Pome]]></title>
  <link href="http://agam.github.io/blog/categories/http/atom.xml" rel="self"/>
  <link href="http://agam.github.io/"/>
  <updated>2014-12-23T23:23:37+00:00</updated>
  <id>http://agam.github.io/</id>
  <author>
    <name><![CDATA[Agam]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Basic HTTP Client with Poco]]></title>
    <link href="http://agam.github.io/blog/2013/09/29/http-client-with-poco/"/>
    <updated>2013-09-29T00:00:00+00:00</updated>
    <id>http://agam.github.io/blog/2013/09/29/http-client-with-poco</id>
    <content type="html"><![CDATA[<p>After my previous terrible experience with <code>cpp-netlib</code>, I was very very pleasantly surprised by how well this went.</p>

<p>You can get the Poco C++ libraries <a href="http://pocoproject.org/">here</a></p>

<p>This is the short <code>wget</code> equivalent &hellip;</p>

<p>```c</p>

<h1>include <algorithm>  // for copy</h1>

<h1>include <iterator></h1>

<h1>include <string></h1>

<h1>include <iostream>   // for cout, istream</h1>

<h1>include &lt;Poco/Exception.h></h1>

<h1>include &lt;Poco/Net/HTTPClientSession.h></h1>

<h1>include &lt;Poco/Net/HTTPRequest.h></h1>

<h1>include &lt;Poco/Net/HTTPResponse.h></h1>

<h1>include &lt;Poco/Path.h></h1>

<h1>include &lt;Poco/URI.h></h1>

<p>using string = std::string;</p>

<p>int main(int argc, char*argv[]) {
  if (argc != 2) {</p>

<pre><code>std::cerr &lt;&lt; "Usage: " &lt;&lt; argv[0] &lt;&lt; " &lt;url&gt;" &lt;&lt; std::endl;
return 1;
</code></pre>

<p>  }</p>

<p>  try {</p>

<pre><code>// Initialize session
Poco::URI uri(argv[1]);
Poco::Net::HTTPClientSession client_session(uri.getHost(), uri.getPort());

// Prepare and send request
string path(uri.getPathAndQuery());
Poco::Net::HTTPRequest req(Poco::Net::HTTPRequest::HTTP_GET,
    path, Poco::Net::HTTPMessage::HTTP_1_1);
client_session.sendRequest(req);

// Get response
Poco::Net::HTTPResponse res;
std::istream&amp; is = client_session.receiveResponse(res);

// Print to standard output
std::copy(std::istream_iterator&lt;char&gt;(is),
    std::istream_iterator&lt;char&gt;(),
    std::ostream_iterator&lt;char&gt;(std::cout));
</code></pre>

<p>  } catch (Poco::Exception&amp; e) {</p>

<pre><code>std::cerr &lt;&lt; "Exception: " &lt;&lt; e.what() &lt;&lt; std::endl;
return 1;
</code></pre>

<p>  }</p>

<p>  std::cout &lt;&lt; &ldquo;Completed communication&rdquo;;
  return 0;
}
```</p>

<p>Thanks to my struggles getting the previous <code>cpp-netlib</code> example to build, I at least got very familiar with <code>cmake</code>. As a result, getting this example to build was a breeze:</p>

<p>```cmake
cmake_minimum_required(VERSION 2.8)
project(hello-world)</p>

<p>add_definitions(-std=c++11)</p>

<h1>Search paths</h1>

<p>include_directories(
  /opt/boost/boost_1_54_0
  /usr/local/include)
link_directories(
  /opt/boost/boost_1_54_0/stage/lib
  /usr/local/lib)</p>

<h1>Boost dependencies</h1>

<p>find_package(Boost 1.51 REQUIRED system regex)
set(BOOST_LIBS
  ${Boost_SYSTEM_LIBRARY}
  ${Boost_REGEX_LIBRARY}
  )</p>

<h1>Other external libraries</h1>

<p>find_package(OpenSSL)
find_library(LIBCRYPTO crypto)
find_library(POCO_FOUNDATION PocoFoundation)
find_library(POCO_NET PocoNet)
set(EXTERNAL_LIBS
  ${OPENSSL_LIBRARIES}
  ${LIBCRYPTO}
  ${POCO_FOUNDATION}
  ${POCO_NET}
  )</p>

<h1>Our final output</h1>

<p>add_executable(hello-world hello-world.cpp)
target_link_libraries(hello-world
  ${BOOST_LIBS}
  ${EXTERNAL_LIBS})
```</p>

<p>And it worked fine too:</p>

<p><code>sh
time ./hello-world http://www.google.com
&lt;html&gt;&lt;head&gt;&lt;metahttp-equiv="content-type"content="text/html;charset= ...(skipped rest)
real    0m0.424s
user    0m0.004s
sys     0m0.012s
</code></p>

<p>I&rsquo;m sure I&rsquo;ll be using more of POCO in the future!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting up a Haskell webserver to run in Google Compute Engine]]></title>
    <link href="http://agam.github.io/blog/2013/03/11/webserver-in-google-compute-engine/"/>
    <updated>2013-03-11T00:00:00+00:00</updated>
    <id>http://agam.github.io/blog/2013/03/11/webserver-in-google-compute-engine</id>
    <content type="html"><![CDATA[<p>I signed up for a project at the <a href="https://cloud.google.com/console#c=l">Google Cloud Console</a>, and decided to try running a webserver on it, as a prerequisite to other future toy projects I might link to it.</p>

<h2>First steps</h2>

<p>Get <a href="https://developers.google.com/compute/docs/gcutil/"><code>gcutil</code></a> and install it</p>

<p><code>sh
$ sudo tar xvpzf gcutil-1.7.1.tar.gz  -C /usr/local/share
$ sudo ln -s /usr/local/share/gcutil-1.7.1/gcutil /usr/local/bin/gcutil
</code></p>

<p>Then, link it up to your project</p>

<p><code>sh
$ gcutil auth --project=agam-personal-project
</code></p>

<p>It&rsquo;s a good idea to avoid entering the <code>--project=</code> bit every time, by saving your project name</p>

<p><code>sh
$ gcutil getproject --project=agam-personal-project --cache_flag_values
+--------------------------+-------------------------------+
|         property         |             value             |
+--------------------------+-------------------------------+
| name                     | agam-personal-project                     |
| description              |                               |
| creation-time            | 2012-10-30T13:52:46.571-07:00 |
| ips                      | 108.59.85.232,173.255.125.245 |
|                          |                               |
| usage                    |                               |
|   instances              | 0.0/4.0                       |
|   cpus                   | 0.0/4.0                       |
|   ephemeral-addresses    | 0.0/4.0                       |
|   disks                  | 0.0/4.0                       |
|   disks-total-gb         | 0.0/250.0                     |
|   snapshots              | 0.0/20.0                      |
|   networks               | 1.0/1.0                       |
|   firewalls              | 2.0/10.0                      |
|   images                 | 0.0/4.0                       |
|                          |                               |
| common-instance-metadata |                               |
+--------------------------+-------------------------------+
</code></p>

<p>By default, incoming HTTP is blocked. So enable it.</p>

<p>```sh
$ gcutil addfirewall http2 &mdash;description=&ldquo;Allow incoming http&rdquo; &mdash;allowed=&ldquo;tcp:http&rdquo;
INFO: Waiting for insert of firewall http2. Sleeping for 3s.
INFO: Waiting for insert of firewall http2. Sleeping for 3s.</p>

<p>Table of resources:</p>

<p>+&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+
| name  |     description     |     network      | source-ips | source-tags | target-tags |
+&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+
| http2 | Allow incoming http | networks/default | 0.0.0.0/0  |             |             |
+&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+</p>

<p>Table of operations:</p>

<p>+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&ndash;+
|                      name                      | zone | status | status-message |     target      |          insert-time          | operation-type | error | warning |
+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&ndash;+
| operation-1362984707558-4d7a09b531841-ea2eb01d |      | DONE   |                | firewalls/http2 | 2013-03-10T23:51:47.558-07:00 | insert         |       |         |
+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&ndash;+
```</p>

<p>And now it&rsquo;s time to make choices!</p>

<p>```sh
gcutil addinstance basic-webserver-instance
1: europe-west1-a  (currently in maintenance)
2: europe-west1-b
3: us-central1-a
4: us-central1-b
5: us-central2-a</p>

<blockquote><blockquote><blockquote><p>3
```</p></blockquote></blockquote></blockquote>

<p>No particular reason, I picked <code>us-central1-a</code> (why no <code>us-west</code> ?). I wasn&rsquo;t sure which <a href="https://cloud.google.com/pricing/compute-engine">instance type</a> to pick &hellip; I went with the cheapest option with a disk (#2) for now.</p>

<p>```sh
1: n1-standard-1
2: n1-standard-1-d
3: n1-standard-2
4: n1-standard-2-d
5: n1-standard-4
6: n1-standard-4-d
7: n1-standard-8
8: n1-standard-8-d
9: n1-highcpu-2
10: n1-highcpu-2-d
11: n1-highcpu-4
12: n1-highcpu-4-d
13: n1-highcpu-8
14: n1-highcpu-8-d
15: n1-highmem-2
16: n1-highmem-2-d
17: n1-highmem-4
18: n1-highmem-4-d
19: n1-highmem-8
20: n1-highmem-8-d</p>

<blockquote><blockquote><blockquote><p>2
```</p></blockquote></blockquote></blockquote>

<p>10 choices of a host OS, I picked what seemed to be the latest <code>gcel</code> one.</p>

<p>```sh
1: projects/google/global/images/centos-6-v20121106
2: projects/google/global/images/centos-6-v20130104
3: projects/google/global/images/centos-6-v20130225
4: projects/google/global/images/gcel-10-04-v20121106
5: projects/google/global/images/gcel-10-04-v20130104
6: projects/google/global/images/gcel-10-04-v20130225
7: projects/google/global/images/gcel-12-04-v20121106
8: projects/google/global/images/gcel-12-04-v20130104
9: projects/google/global/images/gcel-12-04-v20130225
10: projects/google/global/images/centos-6-v20120912 (DEPRECATED)</p>

<blockquote><blockquote><blockquote><p>9
```</p></blockquote></blockquote></blockquote>

<p>If this is the first time running <code>gcutil</code> it will ask you to enter a passphrase for authentication, and then your instance should be inserted. As you can see below, this took about 35s for me.</p>

<p>```sh
INFO: Waiting for insert of instance basic-webserver-instance. Sleeping for 3s.
INFO: Waiting for insert of instance basic-webserver-instance. Sleeping for 3s.
INFO: Waiting for insert of instance basic-webserver-instance. Sleeping for 3s.
INFO: Waiting for insert of instance basic-webserver-instance. Sleeping for 3s.
INFO: Waiting for insert of instance basic-webserver-instance. Sleeping for 3s.
INFO: Waiting for insert of instance basic-webserver-instance. Sleeping for 3s.
INFO: Waiting for insert of instance basic-webserver-instance. Sleeping for 3s.
INFO: Waiting for insert of instance basic-webserver-instance. Sleeping for 3s.
INFO: Waiting for insert of instance basic-webserver-instance. Sleeping for 3s.
INFO: Waiting for insert of instance basic-webserver-instance. Sleeping for 3s.
INFO: Waiting for insert of instance basic-webserver-instance. Sleeping for 3s.</p>

<p>Table of resources:</p>

<p>+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+
|           name           |         machine-type         |                       image                        |     network      |  network-ip   |  external-ip  | disks |     zone      | status  | status-message |
+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+
| basic-webserver-instance | machineTypes/n1-standard-1-d | projects/google/global/images/gcel-12-04-v20130225 | networks/default | 10.240.31.254 | 108.59.80.144 |       | us-central1-a | RUNNING |                |
+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+</p>

<p>Table of operations:</p>

<p>+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&ndash;+
|                      name                      |     zone      | status | status-message |                      target                      |          insert-time          | operation-type | error | warning |
+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&ndash;+
| operation-1362986355529-4d7a0fd8d07a1-a21d7f92 | us-central1-a | DONE   |                | us-central1-a/instances/basic-webserver-instance | 2013-03-11T00:19:15.529-07:00 | insert         |       |         |
+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&ndash;+
```</p>

<p>You can then check if the instance matches what you wanted.</p>

<p><code>sh
$ gcutil getinstance basic-webserver-instance
(output skipped)
</code></p>

<h2>Installing Stuff</h2>

<p>Now that the instance is ready to go, you can ssh to it and get the stuff we need.</p>

<p>```sh
$ gcutil ssh basic-webserver-instance
&hellip;
&hellip; (skipping boilerplate)
&hellip;
 * You appear to be running on an EPHEMERAL root disk.  Changes may be lost.
  For persistent data, use Persistent Disks:
  <a href="https://developers.google.com/compute/docs/disks#persistentdisks">https://developers.google.com/compute/docs/disks#persistentdisks</a></p>

<p>agam@basic-webserver-instance:~$ sudo df -h
Filesystem      Size  Used Avail Use% Mounted on
/dev/sda1       9.6G 1019M  8.1G  12% /
none            1.9G  4.0K  1.9G   1% /dev
none            377M  140K  377M   1% /run
none            5.0M     0  5.0M   0% /run/lock
none            1.9G     0  1.9G   0% /run/shm
```</p>

<p>Yeah, the instance doesn&rsquo;t come with a persistent disk. So if you decide to delete the instance, your data is gone.</p>

<p>Eventually, I&rsquo;ll attach <a href="https://developers.google.com/compute/docs/disks#persistentdisks">persistent disks</a> and also use a <a href="https://developers.google.com/compute/docs/robustsystems#startup">startup script</a> to allow me to quickly recreate VM state on new instances, but I&rsquo;ll punt on those for now.</p>

<p>Anyway, let&rsquo;s start installing stuff</p>

<p><code>sh
$ sudo apt-get install haskell-platform
...
$ cabal update
...
$ cabal install yesod-platform
...
</code></p>

<p>Haskell packages are still a bit flaky. For instance, I got this error and had to ignore it and pray nothing broke:</p>

<p><code>sh
Warning: The following packages are likely to be broken by the reinstalls:
regex-posix-0.95.1
</code></p>

<p>BTW this takes a <em>long</em> <em>long</em> time to complete, so go do something else for 5-10 minutes and then come back.</p>

<h2>Running Yesod</h2>

<p>For this example, I&rsquo;m going to do a basic webserver, though the right thing to do in this case is to choose the option to configure the urls to be used with <a href="https://developers.google.com/storage/docs/getting-started">Google Cloud Storage</a></p>

<p>```sh
agam@basic-webserver-instance:~$ yesod init
Welcome to the Yesod scaffolder.
I&rsquo;m going to be creating a skeleton Yesod project for you.</p>

<p>What do you want to call your project? We&rsquo;ll use this for the cabal name.</p>

<p>Project name: AgamsWeb
Yesod uses Persistent for its (you guessed it) persistence layer.
This tool will build in either SQLite or PostgreSQL or MongoDB support for you.
We recommend starting with SQLite: it has no dependencies.</p>

<pre><code>s      = sqlite
p      = postgresql
pf     = postgresql + Fay (experimental)
mongo  = mongodb
mysql  = MySQL
simple = no database, no auth
url    = Let me specify URL containing a site (advanced)
</code></pre>

<p>So, what&rsquo;ll it be? s
```</p>

<p>This sets up a basic scaffold with a few directories</p>

<p><code>sh
agam@basic-webserver-instance:~/AgamsWeb$ ls -l
total 68
-rw-rw-r-- 1 agam agam 3907 Mar 11 08:18 AgamsWeb.cabal
-rw-rw-r-- 1 agam agam 2723 Mar 11 08:18 Application.hs
-rw-rw-r-- 1 agam agam 6583 Mar 11 08:18 Foundation.hs
drwxrwxr-x 2 agam agam 4096 Mar 11 08:18 Handler
-rw-rw-r-- 1 agam agam 1057 Mar 11 08:18 Import.hs
-rw-rw-r-- 1 agam agam  415 Mar 11 08:18 Model.hs
drwxrwxr-x 2 agam agam 4096 Mar 11 08:18 Settings
-rw-rw-r-- 1 agam agam 2736 Mar 11 08:18 Settings.hs
drwxrwxr-x 2 agam agam 4096 Mar 11 08:18 app
drwxrwxr-x 2 agam agam 4096 Mar 11 08:18 config
drwxrwxr-x 2 agam agam 4096 Mar 11 08:18 deploy
-rw-rw-r-- 1 agam agam  709 Mar 11 08:18 devel.hs
drwxrwxr-x 2 agam agam 4096 Mar 11 08:18 messages
drwxrwxr-x 4 agam agam 4096 Mar 11 08:18 static
drwxrwxr-x 2 agam agam 4096 Mar 11 08:18 templates
drwxrwxr-x 2 agam agam 4096 Mar 11 08:18 tests
</code></p>

<p>Now to start this (empty) webserver</p>

<p><code>sh
$ cabal install
$ yesod devel
</code></p>

<p>This starts the server on <code>localhost:3000</code>. Now the Yesod folks recommend running <code>nginx</code> as a reverse proxy in front, so let&rsquo;s do that (though it&rsquo;s obviously overkill for this example).</p>

<p><code>sh
$ sudo apt-get install nginx
</code></p>

<p>Create a basic reverse proxy config</p>

<p>```yaml
events {</p>

<pre><code>worker_connections 4096;
</code></pre>

<p>}</p>

<p>http {</p>

<pre><code>server {
    listen 80;
    location / {
        proxy_pass http://127.0.0.1:3000/;
    }
}
</code></pre>

<p>}
```</p>

<p>Then run nginx</p>

<p><code>sh
sudo nginx -c nginx.conf
</code></p>

<p>Hmm &hellip; ok &hellip; for whatever reason that didn&rsquo;t work. This seems like a fairly straightforward config. Screw it, run yesod directly on port 80.</p>

<p><code>sh
sudo yesod devel --port=80
</code></p>

<p>Now, if you open the associated IP in your browser, you should see the standard &ldquo;Welcome to Yesod&rdquo; placeholder !!</p>
]]></content>
  </entry>
  
</feed>
